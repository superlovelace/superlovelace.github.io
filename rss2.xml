<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>四月黎明 | 棱境的个人博客站点</title>
    <link>https://superlovelace.top/</link>
    
    <atom:link href="https://superlovelace.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>记录日常学习内容，分享问题解决方法。主要内容包括Java、Python、C++、爬虫和数据结构等相关知识。其中，技术框架包括Java框架Spring、SpringBoot、SpringMVC和Mybatis；Python框架Django、Flask等。此外还有服务器搭建、项目部署，静态博客的搭建等知识总结，不定时更新中...</description>
    <pubDate>Tue, 20 May 2025 07:38:43 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>MySQL主从复制（MGR集群）</title>
      <link>https://superlovelace.top/2025/03/30/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6(docker+mgr)/</link>
      <guid>https://superlovelace.top/2025/03/30/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6(docker+mgr)/</guid>
      <pubDate>Sun, 30 Mar 2025 10:46:31 GMT</pubDate>
      
      <description>mysql主从复制搭建记录（docker）</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="MySQL主从复制-MGR集群方式"><code>MySQL</code>主从复制(MGR集群方式)</h2><h3 id="Docker-方式">Docker 方式</h3><p><code>docker-compose.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">mysql_master_slave_replication</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mysql_1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span>  <span class="hljs-string">mysql_1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql_01</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33065:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.72</span><span class="hljs-number">.0</span><span class="hljs-number">.15</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/conf.d:/etc/mysql/conf.d</span><br><br>  <span class="hljs-attr">mysql_2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql_2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql_02</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33066:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.72</span><span class="hljs-number">.0</span><span class="hljs-number">.16</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/conf.d:/etc/mysql/conf.d</span><br><br>  <span class="hljs-attr">mysql_3:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql_3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql_03</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33067:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.72</span><span class="hljs-number">.0</span><span class="hljs-number">.17</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/conf.d:/etc/mysql/conf.d</span><br><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">mysql-network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.72</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br></code></pre></td></tr></table></figure><h4 id="步骤-1：创建容器"><strong>步骤 1：创建容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在docker-compose.yml文件目录下</span><br>docker compose up -d<br></code></pre></td></tr></table></figure><h4 id="步骤-2：修改配置"><strong>步骤 2：修改配置</strong></h4><p>进入容器系统，查找配置文件位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it mgr1 /bin/bash<br></code></pre></td></tr></table></figure><p>一般路径：<code>/etc/my.cnf</code></p><h5 id="1-号数据库配置：">1 号数据库配置：</h5><p><strong>复制Docker内的1号数据库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql_1:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br>user=mysql<br>port=3306<br>character_set_server=utf8mb4<br>secure_file_priv=&#x27;&#x27;<br>server-id = 802033065 # 服务id<br>default-time-zone = &#x27;+8:00&#x27;<br>log_timestamps = SYSTEM<br>log-bin = <br>binlog_format=row<br>binlog_checksum=NONE<br>log-slave-updates=1<br>skip-name-resolve<br>auto-increment-increment=2<br>auto-increment-offset=1<br>gtid-mode=ON<br>enforce-gtid-consistency=on<br>default_authentication_plugin=mysql_native_password<br>max_allowed_packet = 500M<br><br>master_info_repository=TABLE<br>relay_log_info_repository=TABLE<br>relay_log=lhrmgr15-relay-bin-ip15<br><br>transaction_write_set_extraction=XXHASH64<br>loose-group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot; # 同一分组内的值需一致<br>loose-group_replication_start_on_boot=OFF<br>loose-group_replication_local_address= &quot;172.72.0.15:33061&quot;<br>loose-group_replication_group_seeds= &quot;172.72.0.15:33061,172.72.0.16:33062,172.72.0.17:33063&quot;<br>loose-group_replication_bootstrap_group=OFF<br>loose-group_replication_ip_whitelist=&quot;172.72.0.15,172.72.0.16,172.72.0.17&quot;<br><br>report_host=172.72.0.15<br>report_port=3306<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回1号数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf mysql_1:/etc/my.cnf<br></code></pre></td></tr></table></figure><h5 id="2-号数据库配置：">2 号数据库配置：</h5><p><strong>复制Docker内的 2 号数据库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql_2:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">2号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br>user=mysql<br>port=3306<br>character_set_server=utf8mb4<br>secure_file_priv=&#x27;&#x27;<br>server-id = 802033066<br>default-time-zone = &#x27;+8:00&#x27;<br>log_timestamps = SYSTEM<br>log-bin = <br>binlog_format=row<br>binlog_checksum=NONE<br>log-slave-updates=1<br>gtid-mode=ON<br>enforce-gtid-consistency=ON<br>skip_name_resolve<br>default_authentication_plugin=mysql_native_password<br>max_allowed_packet = 500M<br><br>master_info_repository=TABLE<br>relay_log_info_repository=TABLE<br>relay_log=lhrmgr16-relay-bin-ip16<br><br>transaction_write_set_extraction=XXHASH64<br>loose-group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot;<br>loose-group_replication_start_on_boot=OFF<br>loose-group_replication_local_address= &quot;172.72.0.16:33062&quot;<br>loose-group_replication_group_seeds= &quot;172.72.0.15:33061,172.72.0.16:33062,172.72.0.17:33063&quot;<br>loose-group_replication_bootstrap_group=OFF<br>loose-group_replication_ip_whitelist=&quot;172.72.0.15,172.72.0.16,172.72.0.17&quot;<br><br>report_host=172.72.0.16<br>report_port=3306<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 2 号数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf mysql_2:/etc/my.cnf<br></code></pre></td></tr></table></figure><h5 id="3-号数据库配置：">3 号数据库配置：</h5><p><strong>复制Docker内的 3 号数据库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql_3:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">3号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br>user=mysql<br>port=3306<br>character_set_server=utf8mb4<br>secure_file_priv=&#x27;&#x27;<br>server-id = 802033067<br>default-time-zone = &#x27;+8:00&#x27;<br>log_timestamps = SYSTEM<br>log-bin = <br>binlog_format=row<br>binlog_checksum=NONE<br>log-slave-updates=1<br>gtid-mode=ON<br>enforce-gtid-consistency=ON<br>skip_name_resolve<br>default_authentication_plugin=mysql_native_password<br>max_allowed_packet = 500M<br><br><br>master_info_repository=TABLE<br>relay_log_info_repository=TABLE<br>relay_log=lhrmgr16-relay-bin-ip16<br><br><br>transaction_write_set_extraction=XXHASH64<br>loose-group_replication_group_name=&quot;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&quot;<br>loose-group_replication_start_on_boot=OFF<br>loose-group_replication_local_address= &quot;172.72.0.17:33063&quot;<br>loose-group_replication_group_seeds= &quot;172.72.0.15:33061,172.72.0.16:33062,172.72.0.17:33063&quot;<br>loose-group_replication_bootstrap_group=OFF<br>loose-group_replication_ip_whitelist=&quot;172.72.0.15,172.72.0.16,172.72.0.17&quot;<br><br>report_host=172.72.0.17<br>report_port=3306<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 3 号数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf mysql_3:/etc/my.cnf<br></code></pre></td></tr></table></figure><h4 id="步骤-3：重启容器"><strong>步骤 3：重启容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重启MySQL</span><br>docker restart mysql_1 mysql_2 mysql_3<br>docker ps<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">进入MySQL</span><br>docker exec -it mysql_1 bash<br>docker exec -it mysql_1 mysql -uroot -proot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程连接MySQL</span><br>mysql -uroot -proot -h 127.0.0.1 -P33065 <br>mysql -uroot -proot -h 127.0.0.1 -P33066 <br>mysql -uroot -proot -h 127.0.0.1 -P33067 <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看MySQL日志</span><br>docker logs -f --tail 10 mysql_1<br>docker logs -f --tail 10 mysql_2<br>docker logs -f --tail 10 mysql_3<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看MySQL的主机名、server_id和server_uuid</span><br>mysql -uroot -proot -h 127.0.0.1 -P33065 -e &quot;select @@hostname,@@server_id,@@server_uuid&quot;<br>mysql -uroot -proot -h 127.0.0.1 -P33066 -e &quot;select @@hostname,@@server_id,@@server_uuid&quot;<br>mysql -uroot -proot -h 127.0.0.1 -P33067 -e &quot;select @@hostname,@@server_id,@@server_uuid&quot;<br></code></pre></td></tr></table></figure><h4 id="步骤-4：安装MGR插件"><strong>步骤 4：安装MGR插件</strong></h4><p>这里可以用<code>Navicat</code>等数据库工具连接数据库后，多开几个命令窗口执行命令，会方便一些。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 注：每个数据库都要执行<br>INSTALL PLUGIN group_replication SONAME &#x27;group_replication.so&#x27;;<br>show plugins;<br></code></pre></td></tr></table></figure><p>设置复制账号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 注：每个数据库都要执行<br>SET SQL_LOG_BIN=0;<br>CREATE USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123&#x27;;<br>GRANT REPLICATION SLAVE ON *.* TO replica@&#x27;%&#x27;;<br>FLUSH PRIVILEGES;<br>SET SQL_LOG_BIN=1;<br>CHANGE MASTER TO MASTER_USER=&#x27;replica&#x27;, MASTER_PASSWORD=&#x27;123&#x27; FOR CHANNEL &#x27;group_replication_recovery&#x27;;<br></code></pre></td></tr></table></figure><h4 id="步骤-5：配置一主多从"><strong>步骤 5：配置一主多从</strong></h4><p>主库设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SET GLOBAL group_replication_bootstrap_group=ON;<br>START GROUP_REPLICATION;<br>SET GLOBAL group_replication_bootstrap_group=OFF;<br><br>-- 查看MGR组信息 <br>SELECT * FROM performance_schema.replication_group_members;<br># <br>show variables like &#x27;%group_replication_single_primary_mode%&#x27;;<br># <br>SELECT @@group_replication_single_primary_mode;<br></code></pre></td></tr></table></figure><p>从库设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 加入MGR节点<br>START GROUP_REPLICATION;<br>-- 查看MGR组信息<br>SELECT * FROM performance_schema.replication_group_members;<br></code></pre></td></tr></table></figure><p>一主两从配置成功后，查看MGR组信息的输出结果：</p><table><thead><tr><th style="text-align:left">CHANNEL_NAME</th><th>MEMBER_ID</th><th>MEMBER_HOST</th><th>MEMBER_PORT</th><th>MEMBER_STATE</th><th>MEMBER_ROLE</th><th style="text-align:left">MEMBER_VERSION</th><th>MEMBER_COMMUNICATION_STACK</th></tr></thead><tbody><tr><td style="text-align:left">group_replication_applier</td><td>f09e1a31-0a19-11f0-a7ff-0242ac48000f</td><td>172.72.0.15</td><td>3306</td><td>ONLINE</td><td>PRIMARY</td><td style="text-align:left">8.0.36</td><td></td></tr><tr><td style="text-align:left">group_replication_applier</td><td>f0cb4327-0a19-11f0-a6b2-0242ac480011</td><td>172.72.0.17</td><td>3306</td><td>ONLINE</td><td>SECONDARY</td><td style="text-align:left">8.0.36</td><td>XCom</td></tr><tr><td style="text-align:left">group_replication_applier</td><td>f0cb449b-0a19-11f0-a779-0242ac480010</td><td>172.72.0.16</td><td>3306</td><td>ONLINE</td><td>SECONDARY</td><td style="text-align:left">8.0.36</td><td>XCom</td></tr></tbody></table><h4 id="步骤-6：测试主从同步">步骤 6：测试主从同步</h4><p>主库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建数据库和数据表并新增数据，在其他从属数据库查看复制状态<br>create DATABASE `db_01`;<br>use db_01;<br>CREATE TABLE tb_user(<br>id int(11) AUTO_INCREMENT PRIMARY key not null ,<br>name varchar(50) not null<br>)ENGINE = INNODB DEFAULT CHARSET=utf8mb4;<br># 插入数据<br>insert into tb_user(id,name)VALUES(null,&#x27;Tom&#x27;),(null,&#x27;Jerry&#x27;);<br># 修改数据<br>update tb_user set name=&#x27;Peter&#x27; where id =1;<br># 删除数据<br>delete from tb_user where id = 2;<br></code></pre></td></tr></table></figure><p>从库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use db_01;<br>select * from tb_user;<br></code></pre></td></tr></table></figure><hr><p><code>mysql_1  sql命令记录</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs sql">INSTALL PLUGIN group_replication SONAME <span class="hljs-string">&#x27;group_replication.so&#x27;</span>;<br><span class="hljs-keyword">show</span> plugins;<br><br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;replica&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> REPLICATION SLAVE <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> replica@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH PRIVILEGES;<br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>CHANGE MASTER <span class="hljs-keyword">TO</span> MASTER_USER<span class="hljs-operator">=</span><span class="hljs-string">&#x27;replica&#x27;</span>, MASTER_PASSWORD<span class="hljs-operator">=</span><span class="hljs-string">&#x27;123&#x27;</span> <span class="hljs-keyword">FOR</span> CHANNEL <span class="hljs-string">&#x27;group_replication_recovery&#x27;</span>;<br><br><br><br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">GLOBAL</span> group_replication_bootstrap_group<span class="hljs-operator">=</span><span class="hljs-keyword">ON</span>;<br><span class="hljs-keyword">START</span> GROUP_REPLICATION;<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">GLOBAL</span> group_replication_bootstrap_group<span class="hljs-operator">=</span>OFF;<br><br><span class="hljs-comment">-- 查看MGR组信息 </span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> performance_schema.replication_group_members;<br><br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%group_replication_single_primary_mode%&#x27;</span>;<br><br><span class="hljs-keyword">SELECT</span> @<span class="hljs-variable">@group</span>_replication_single_primary_mode;<br><br><span class="hljs-keyword">create</span> DATABASE `db_01`;<br>use db_01;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tb_user(<br>id <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) AUTO_INCREMENT <span class="hljs-keyword">PRIMARY</span> key <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> ,<br>name <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br>)ENGINE <span class="hljs-operator">=</span> INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4;<br># 插入数据<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> tb_user(id,name)<span class="hljs-keyword">VALUES</span>(<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;Tom&#x27;</span>),(<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;Jerry&#x27;</span>);<br># 修改数据<br><span class="hljs-keyword">update</span> tb_user <span class="hljs-keyword">set</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Peter&#x27;</span> <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br># 删除数据<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> tb_user <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">2</span>;<br><br><br><span class="hljs-keyword">SHOW</span> VARIABLES <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;group_replication%&#x27;</span>;<br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> performance_schema.replication_group_members;<br><br><span class="hljs-keyword">SELECT</span> PLUGIN_STATUS <span class="hljs-keyword">FROM</span> information_schema.PLUGINS <span class="hljs-keyword">WHERE</span> PLUGIN_NAME<span class="hljs-operator">=</span><span class="hljs-string">&#x27;group_replication&#x27;</span>;<br><br><span class="hljs-keyword">SELECT</span> VARIABLE_VALUE <span class="hljs-keyword">FROM</span> performance_schema.global_variables <span class="hljs-keyword">WHERE</span> VARIABLE_NAME<span class="hljs-operator">=</span><span class="hljs-string">&#x27;group_replication_group_name&#x27;</span><br><br></code></pre></td></tr></table></figure><p><code>mysql_2  sql命令记录</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql">INSTALL PLUGIN group_replication SONAME <span class="hljs-string">&#x27;group_replication.so&#x27;</span>;<br><span class="hljs-keyword">show</span> plugins;<br><br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;replica&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> REPLICATION SLAVE <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> replica@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH PRIVILEGES;<br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>CHANGE MASTER <span class="hljs-keyword">TO</span> MASTER_USER<span class="hljs-operator">=</span><span class="hljs-string">&#x27;replica&#x27;</span>, MASTER_PASSWORD<span class="hljs-operator">=</span><span class="hljs-string">&#x27;123&#x27;</span> <span class="hljs-keyword">FOR</span> CHANNEL <span class="hljs-string">&#x27;group_replication_recovery&#x27;</span>;<br><br><br><span class="hljs-keyword">START</span> GROUP_REPLICATION;<br><span class="hljs-comment">-- 查看MGR组信息</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> performance_schema.replication_group_members;<br><br></code></pre></td></tr></table></figure><p><code>mysql_3  sql命令记录</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">INSTALL PLUGIN group_replication SONAME <span class="hljs-string">&#x27;group_replication.so&#x27;</span>;<br><span class="hljs-keyword">show</span> plugins;<br><br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;replica&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> REPLICATION SLAVE <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> replica@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH PRIVILEGES;<br><span class="hljs-keyword">SET</span> SQL_LOG_BIN<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>CHANGE MASTER <span class="hljs-keyword">TO</span> MASTER_USER<span class="hljs-operator">=</span><span class="hljs-string">&#x27;replica&#x27;</span>, MASTER_PASSWORD<span class="hljs-operator">=</span><span class="hljs-string">&#x27;123&#x27;</span> <span class="hljs-keyword">FOR</span> CHANNEL <span class="hljs-string">&#x27;group_replication_recovery&#x27;</span>;<br><br><span class="hljs-keyword">START</span> GROUP_REPLICATION;<br><span class="hljs-comment">-- 查看MGR组信息</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> performance_schema.replication_group_members;<br><br></code></pre></td></tr></table></figure><h3 id="Spring-Boot-集成实现">Spring Boot 集成实现</h3><p>spring boot实现主从复制，数据源动态切换和熔断机制</p><h4 id="配置文件">配置文件</h4><p><code>application.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-comment"># 运行端口</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8085</span><br>  <span class="hljs-attr">error:</span><br>    <span class="hljs-attr">whitelabel:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">include-stacktrace:</span> <span class="hljs-string">never</span>         <span class="hljs-comment"># 不包含堆栈信息</span><br>    <span class="hljs-attr">include-binding-errors:</span> <span class="hljs-string">never</span>     <span class="hljs-comment"># 不绑定错误</span><br>    <span class="hljs-attr">include-exception:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">include-message:</span> <span class="hljs-string">never</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">/error</span><br><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">session:</span><br>      <span class="hljs-attr">cookie:</span><br>        <span class="hljs-attr">same-site:</span> <span class="hljs-string">lax</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>  <span class="hljs-attr">shutdown:</span> <span class="hljs-string">graceful</span><br>  <br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">test-service</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">names:</span> <span class="hljs-string">master,slave1,slave2</span><br>    <span class="hljs-attr">master:</span> <span class="hljs-comment"># 主库</span><br>      <span class="hljs-comment"># 连接池类型</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>      <span class="hljs-comment"># 地址</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>      <span class="hljs-comment"># 用户名</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>      <span class="hljs-comment"># 密码</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>      <span class="hljs-comment"># MySQL 驱动名</span><br>      <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br>    <span class="hljs-attr">slave1:</span> <span class="hljs-comment"># 从库1</span><br>      <span class="hljs-comment"># 地址</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3307/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>      <span class="hljs-comment"># 用户名</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">user</span><br>      <span class="hljs-comment"># 密码</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">user</span><br>      <span class="hljs-comment"># MySQL 驱动名</span><br>      <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>      <span class="hljs-comment"># 连接池类型</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br><br>    <span class="hljs-attr">slave2:</span> <span class="hljs-comment"># 从库2</span><br>      <span class="hljs-comment"># 地址</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3307/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>      <span class="hljs-comment"># 用户名</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">user</span><br>      <span class="hljs-comment"># 密码</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">user</span><br>      <span class="hljs-comment"># MySQL 驱动名</span><br>      <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>      <span class="hljs-comment"># 连接池类型</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br></code></pre></td></tr></table></figure><h4 id="设置和获取当前数据源的键">设置和获取当前数据源的键</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataSourceContextHolder</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">DataSourceContextHolder</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalStateException</span>(<span class="hljs-string">&quot;工具类不可实例化&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ThreadLocal&lt;String&gt; CONTEXT_HOLDER = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadLocal</span>&lt;&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDataSourceKey</span><span class="hljs-params">(String key)</span> &#123;<br>        CONTEXT_HOLDER.set(key);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDataSourceKey</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> CONTEXT_HOLDER.get();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">clearDataSourceKey</span><span class="hljs-params">()</span> &#123;<br>        CONTEXT_HOLDER.remove();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="配置数据源路由">配置数据源路由</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class="hljs-keyword">import</span> org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;<br><br><span class="hljs-keyword">import</span> javax.sql.DataSource;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DynamicDataSource</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractRoutingDataSource</span> &#123;<br><br>    <span class="hljs-comment">// 数据源集合，通过配置类中传入</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Map&lt;Object, Object&gt; targetDataSources ;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DynamicDataSource</span><span class="hljs-params">(Map&lt;Object, Object&gt; targetDataSources)</span> &#123;<br>        <span class="hljs-built_in">this</span>.targetDataSources = targetDataSources;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Object <span class="hljs-title function_">determineCurrentLookupKey</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">dataSourceKey</span> <span class="hljs-operator">=</span> DataSourceContextHolder.getDataSourceKey();<br>        <span class="hljs-keyword">if</span> (dataSourceKey != <span class="hljs-literal">null</span> &amp;&amp; dataSourceKey.startsWith(<span class="hljs-string">&quot;slave&quot;</span>)) &#123;<br>            <span class="hljs-comment">// 如果当前是从库，检查是否健康</span><br>            <span class="hljs-keyword">return</span> getDataSourceHealthy(targetDataSources, dataSourceKey);<br>        &#125;<br>        log.info(<span class="hljs-string">&quot;当前数据源 &#123;&#125; &quot;</span>, dataSourceKey);<br>        <span class="hljs-keyword">return</span> dataSourceKey;<br>    &#125;<br><br>    <span class="hljs-comment">// 判断数据源是否健康</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDataSourceHealthy</span><span class="hljs-params">(Map&lt;Object, Object&gt; targetDataSources,String currentDataSourceKey)</span> &#123;<br>        List&lt;String&gt; validDataSourceKeys = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-keyword">for</span> (Object key : targetDataSources.keySet()) &#123;<br>            <span class="hljs-type">DataSource</span> <span class="hljs-variable">dataSource</span> <span class="hljs-operator">=</span> (DataSource)targetDataSources.get(key);<br>            <span class="hljs-keyword">try</span> (<span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> dataSource.getConnection()) &#123;<br>                <span class="hljs-comment">// 1秒超时</span><br>                <span class="hljs-keyword">if</span> (connection.isValid(<span class="hljs-number">1000</span>)) &#123;<br>                    validDataSourceKeys.add((String) key);<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                log.info(<span class="hljs-string">&quot;数据源 &#123;&#125; 不健康&quot;</span>, key);<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 主要判断从库，所以移除主库的可用键</span><br>        validDataSourceKeys.remove(<span class="hljs-string">&quot;master&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (validDataSourceKeys.contains(currentDataSourceKey))&#123;<br>            <span class="hljs-comment">// 若当前数据源健康，则返回当前数据源</span><br>            log.info(<span class="hljs-string">&quot;当前从库数据源健康,数据源：&#123;&#125; &quot;</span>, currentDataSourceKey);<br>            <span class="hljs-keyword">return</span> currentDataSourceKey;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!validDataSourceKeys.isEmpty())&#123;<br>            <span class="hljs-comment">// 若当前数据源不健康，则随机返回一个健康数据源</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">newKey</span> <span class="hljs-operator">=</span> random.nextInt(validDataSourceKeys.size());<br>            log.info(<span class="hljs-string">&quot;当前从库数据源 &#123;&#125; 不健康，切换至健康从库数据源： &#123;&#125;&quot;</span>, currentDataSourceKey, newKey);<br>            <span class="hljs-keyword">return</span> validDataSourceKeys.get(newKey);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 若当前数据源不健康，且所有从库均不健康，则返回主库</span><br>            log.info(<span class="hljs-string">&quot;当前从库数据源均不可用，切换至主库master&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;master&quot;</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="代理类">代理类</h4><p>根据注解装配对应的数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><span class="hljs-keyword">import</span> lombok.Setter;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Before;<br><span class="hljs-keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataSourceAspect</span> &#123;<br><br>    <span class="hljs-meta">@Setter</span><br>    <span class="hljs-meta">@Getter</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; names;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><br>    <span class="hljs-meta">@Before(&quot;@annotation(com.hmall.test.config.Master)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMasterDataSource</span><span class="hljs-params">()</span> &#123;<br>        DataSourceContextHolder.setDataSourceKey(<span class="hljs-string">&quot;master&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Before(&quot;@annotation(com.hmall.test.config.Slave)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSlaveDataSource</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-comment">// 移除主库</span><br>        names.remove(<span class="hljs-string">&quot;master&quot;</span>);<br><br>        <span class="hljs-comment">// 负载均衡选择从库</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">selectedSlave</span> <span class="hljs-operator">=</span> names.get(random.nextInt(names.size()));<br>        DataSourceContextHolder.setDataSourceKey(selectedSlave);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="注解类">注解类</h4><p>主库注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 主库</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Master &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>从库注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从库</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Slave &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="配置类">配置类</h4><p><code>DatasourceConfig.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.config;<br><br><span class="hljs-keyword">import</span> com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;<br><span class="hljs-keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;<br><span class="hljs-keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.core.io.support.PathMatchingResourcePatternResolver;<br><span class="hljs-keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;<br><span class="hljs-keyword">import</span> org.springframework.transaction.PlatformTransactionManager;<br><br><span class="hljs-keyword">import</span> javax.sql.DataSource;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 动态数据源</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * 主库增删改，从库只读</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DatasourceConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean(name = &quot;masterDataSource&quot;)</span><br>    <span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.datasource.master&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">masterDataSource</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> DruidDataSourceBuilder.create().build();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean(name = &quot;slave1DataSource&quot;)</span><br>    <span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.datasource.slave1&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">slave1DataSource</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> DruidDataSourceBuilder.create().build();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean(name = &quot;slave2DataSource&quot;)</span><br>    <span class="hljs-meta">@ConfigurationProperties(prefix = &quot;spring.datasource.slave2&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">slave2DataSource</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> DruidDataSourceBuilder.create().build();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean(name = &quot;dynamicDataSource&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">dynamicDataSource</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@Qualifier(&quot;masterDataSource&quot;)</span></span><br><span class="hljs-params">            DataSource masterDataSource,</span><br><span class="hljs-params">            <span class="hljs-meta">@Qualifier(&quot;slave1DataSource&quot;)</span></span><br><span class="hljs-params">            DataSource slave1DataSource,</span><br><span class="hljs-params">            <span class="hljs-meta">@Qualifier(&quot;slave2DataSource&quot;)</span></span><br><span class="hljs-params">            DataSource slave2DataSource)</span> &#123;<br>        Map&lt;Object, Object&gt; targetDataSources = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        targetDataSources.put(<span class="hljs-string">&quot;master&quot;</span>, masterDataSource);<br>        targetDataSources.put(<span class="hljs-string">&quot;slave1&quot;</span>, slave1DataSource);<br>        targetDataSources.put(<span class="hljs-string">&quot;slave2&quot;</span>, slave2DataSource);<br><br>        <span class="hljs-type">DynamicDataSource</span> <span class="hljs-variable">dynamicDataSource</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DynamicDataSource</span>(targetDataSources);<br>        <span class="hljs-comment">// 默认数据源</span><br>        dynamicDataSource.setDefaultTargetDataSource(masterDataSource);<br>        dynamicDataSource.setTargetDataSources(targetDataSources);<br>        <span class="hljs-keyword">return</span> dynamicDataSource;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> SqlSessionFactory <span class="hljs-title function_">sqlSessionFactory</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@Qualifier(&quot;dynamicDataSource&quot;)</span></span><br><span class="hljs-params">            DataSource dataSource)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">MybatisSqlSessionFactoryBean</span> <span class="hljs-variable">sqlSessionFactoryBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisSqlSessionFactoryBean</span>();<br>        sqlSessionFactoryBean.setDataSource(dataSource);<br>        sqlSessionFactoryBean.setMapperLocations(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PathMatchingResourcePatternResolver</span>().getResources(<span class="hljs-string">&quot;classpath*:mapper/*.xml&quot;</span>));<br>        <span class="hljs-keyword">return</span> sqlSessionFactoryBean.getObject();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> PlatformTransactionManager <span class="hljs-title function_">transactionManager</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@Qualifier(&quot;dynamicDataSource&quot;)</span></span><br><span class="hljs-params">            DataSource dataSource)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceTransactionManager</span>(dataSource);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="测试">测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.test.service;<br><br><span class="hljs-keyword">import</span> com.hmall.test.config.Master;<br><span class="hljs-keyword">import</span> com.hmall.test.config.Slave;<br><span class="hljs-keyword">import</span> com.hmall.test.domain.User;<br><span class="hljs-keyword">import</span> com.hmall.test.mapper.UserMapper;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> UserMapper userMapper;<br><br>    <span class="hljs-meta">@Master</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addUser</span><span class="hljs-params">(User user)</span> &#123;<br>        userMapper.insert(user);<br>    &#125;<br><br>    <span class="hljs-meta">@Slave</span><br>    <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">getUserById</span><span class="hljs-params">(Long id)</span> &#123;<br>        <span class="hljs-keyword">return</span> userMapper.selectList(<span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Slave</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteUser</span><span class="hljs-params">(Long id)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            userMapper.deleteById(id);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            <span class="hljs-keyword">if</span> (e.getMessage().contains(<span class="hljs-string">&quot;The MySQL server is running with the --read-only option so it cannot execute this statement&quot;</span>))&#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SQLException</span>(<span class="hljs-string">&quot;数据库只读,禁止写操作！&quot;</span>);<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="主从复制同步延迟问题">主从复制同步延迟问题</h3><h5 id="产生原因：">产生原因：</h5><ul><li>网络延迟：主从复制是通过网络访问的，所以网络延迟高，也会产生同步延迟</li><li>主从库高负载：主从复制需要两方共同作用，任一方压力大，处理不过来都会导致同步延迟。</li><li>大事务：单次耗时长，会产生延迟。</li></ul><h5 id="解决方法：">解决方法：</h5><ul><li>网络延迟：<code>show slave status</code>关注<code>Seconds_Behind_Source</code>数值，数值越大代表延迟越高。可以优化主从网络环境，将主从数据库放在同一个局域网下，或提高网络带宽。</li><li>主从库高负载：增加资源，降低请求量</li><li>大事务：在延迟对业务影响较大的情况下，考虑拆分大事务。</li><li>高一致性要求：可以在业务层用动态数据源切换到主库处理</li></ul><h4 id="尝试过的一些操作记录（备注）">尝试过的一些操作记录（备注）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d --name mgr1 -h mysql-master -p 33065:3306 --net=mysql-network --ip 172.72.0.15 -v /master/conf.d:/etc/mysql/conf.d -v /master/data:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD=root -e TZ=Asia/Shanghai mysql:8.0.36 -h mysql-slave -p 33066:3306 --net=mysql-network --ip 172.72.0.16 -v /slave1/conf.d:/etc/mysql/conf.d -v /slave1/data:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD=root -e TZ=Asia/Shanghai mysql:8.0.36<br></code></pre></td></tr></table></figure><p>网上一些在springboot中，通过shardingshpere实现读写分离的配置示例：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#datasource</span><br><span class="hljs-comment">#sharding</span><br><span class="hljs-attr">spring.shardingsphere.mode.type</span>=<span class="hljs-string">Memory</span><br><span class="hljs-attr">spring.shardingsphere.datasource.names</span>=<span class="hljs-string">db_1_1,db_1_2,db_1_3,db_2_1,db_2_2,db_2_3</span><br><span class="hljs-comment">#mgr-1-1</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_1.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_1.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_1.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3307/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_1.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_1.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#mgr-1-2</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_2.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_2.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_2.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3307/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_2.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_2.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#mgr-1-3</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_3.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_3.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_3.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3307/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_3.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_1_3.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#mgr-2-1</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_1.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_1.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_1.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3308/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_1.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_1.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#mgr-2-2</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_2.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_2.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_2.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3308/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_2.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_2.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#mgr-2-3</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_3.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_3.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_3.jdbc-url</span>=<span class="hljs-string">jdbc:mysql://xxx:3308/yyy</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_3.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.shardingsphere.datasource.db_2_3.password</span>=<span class="hljs-string">root</span><br><span class="hljs-comment">#sys props</span><br><span class="hljs-attr">spring.shardingsphere.props.sql-show</span>=<span class="hljs-string">true</span><br><span class="hljs-comment">#loadbalance</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.load-balancers.rr.type</span>=<span class="hljs-string">ROUND_ROBIN</span><br><span class="hljs-comment">#read-write-splitting</span><br><span class="hljs-comment">#rw-1</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_0.type</span>=<span class="hljs-string">Dynamic</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_0.load-balancer-name</span>=<span class="hljs-string">rr</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_0.props.auto-aware-data-source-name</span>=<span class="hljs-string">auto_datasource_1</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_0.props.write-data-source-query-enabled</span>=<span class="hljs-string">true</span><br><span class="hljs-comment">#rw-2</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_1.type</span>=<span class="hljs-string">Dynamic</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_1.load-balancer-name</span>=<span class="hljs-string">rr</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_1.props.auto-aware-data-source-name</span>=<span class="hljs-string">auto_datasource_2</span><br><span class="hljs-attr">spring.shardingsphere.rules.readwrite-splitting.data-sources.rw_1.props.write-data-source-query-enabled</span>=<span class="hljs-string">true</span><br><span class="hljs-comment">#high available</span><br><span class="hljs-comment">#high-1</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_1.data-source-names</span>=<span class="hljs-string">db_1_1,db_1_2,db_1_3</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_1.discovery-heartbeat-name</span>=<span class="hljs-string">hrb_1</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_1.discovery-type-name</span>=<span class="hljs-string">mgr_1</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-heartbeats.hrb_1.props.keep-alive-cron</span>=<span class="hljs-string">&#x27;0/5 * * * * ?&#x27;</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-types.mgr_1.type</span>=<span class="hljs-string">MySQL.MGR</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-types.mgr_1.props.group-name</span>=<span class="hljs-string">1efc4288-f60b-11ec-a93e-00163e0498e0</span><br><span class="hljs-comment">#high-2</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_2.data-source-names</span>=<span class="hljs-string">db_2_1,db_2_2,db_2_3</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_2.discovery-heartbeat-name</span>=<span class="hljs-string">hrb_2</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.data-sources.auto_datasource_2.discovery-type-name</span>=<span class="hljs-string">mgr_2</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-heartbeats.hrb_2.props.keep-alive-cron</span>=<span class="hljs-string">&#x27;0/5 * * * * ?&#x27;</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-types.mgr_2.type</span>=<span class="hljs-string">MySQL.MGR</span><br><span class="hljs-attr">spring.shardingsphere.rules.database-discovery.discovery-types.mgr_2.props.group-name</span>=<span class="hljs-string">cd85be4c-f2d4-11ec-8404-00163e0498e0</span><br><span class="hljs-comment">#sharding</span><br><span class="hljs-comment">#db</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column</span>=<span class="hljs-string">user_id</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name</span>=<span class="hljs-string">db_inline</span><br><span class="hljs-comment">#table</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes</span>=<span class="hljs-string">rw_$-&gt;&#123;0..1&#125;.t_order_$-&gt;&#123;0..1&#125;</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column</span>=<span class="hljs-string">order_id</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name</span>=<span class="hljs-string">order_inline</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column</span>=<span class="hljs-string">order_id</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name</span>=<span class="hljs-string">snow_flake</span><br><span class="hljs-comment">#algorithm</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.sharding-algorithms.db_inline.type</span>=<span class="hljs-string">INLINE</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.sharding-algorithms.db_inline.props.algorithm-expression</span>=<span class="hljs-string">rw_$-&gt;&#123;user_id % 2&#125;</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.sharding-algorithms.order_inline.type</span>=<span class="hljs-string">INLINE</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.sharding-algorithms.order_inline.props.algorithm-expression</span>=<span class="hljs-string">t_order_$-&gt;&#123;order_id % 2&#125;</span><br><span class="hljs-comment">#keyGenerators</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.key-generators.snow_flake.type</span>=<span class="hljs-string">SNOWFLAKE</span><br><span class="hljs-attr">spring.shardingsphere.rules.sharding.key-generators.snow_flake.props.worker-id</span>=<span class="hljs-string">1</span><br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/">主从复制</category>
      
      
      <category domain="https://superlovelace.top/tags/mysql/">mysql</category>
      
      <category domain="https://superlovelace.top/tags/mgr/">mgr</category>
      
      
      <comments>https://superlovelace.top/2025/03/30/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6(docker+mgr)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>搭建MySQL主从复制</title>
      <link>https://superlovelace.top/2025/03/27/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <guid>https://superlovelace.top/2025/03/27/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <pubDate>Thu, 27 Mar 2025 12:24:02 GMT</pubDate>
      
      <description>docker方式搭建mysql主从复制记录</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Docker部署MySQL主从复制">Docker部署<code>MySQL</code>主从复制</h2><h3 id="MySQL8-0-主从集群">MySQL8.0 主从集群</h3><p><code>docker-compose.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">mysql-ms</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">master:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span>  <span class="hljs-string">master</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">host_01</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33065:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.36</span><span class="hljs-number">.0</span><span class="hljs-number">.15</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/conf.d:/etc/mysql/conf.d</span><br><br><br>  <span class="hljs-attr">slave_1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">slave_1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">host_02</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33066:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.36</span><span class="hljs-number">.0</span><span class="hljs-number">.16</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/conf.d:/etc/mysql/conf.d</span><br><br>  <span class="hljs-attr">slave_2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:8.0.36</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">slave_2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">host_03</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33067:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.36</span><span class="hljs-number">.0</span><span class="hljs-number">.17</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/conf.d:/etc/mysql/conf.d</span><br><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">mysql80-network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.36</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br></code></pre></td></tr></table></figure><h4 id="步骤-1：创建容器"><strong>步骤 1：创建容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在docker-compose.yml文件目录下</span><br>docker compose up -d<br></code></pre></td></tr></table></figure><h4 id="步骤-2：修改配置"><strong>步骤 2：修改配置</strong></h4><p>进入容器系统，查找配置文件位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it master /bin/bash<br></code></pre></td></tr></table></figure><p>一般路径：<code>/etc/my.cnf</code></p><h5 id="主库配置：">主库配置：</h5><p><strong>复制Docker内的主库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp master:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br>server-id=1<br>log_bin=mysql-bin<br>binlog_format=ROW<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><br>binlog-ignore-db=information_schema<br>binlog-ignore-db=mysql<br>binlog-ignore-db=performance_schema<br>binlog-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回主库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf master:/etc/my.cnf<br></code></pre></td></tr></table></figure><h5 id="1-号从库配置：">1 号从库配置：</h5><p><strong>复制Docker内的 1 号从库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp slave_1:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">2号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br><br><br>server-id=2<br>log_bin=mysql-bin<br>relay-log=mysql-relay-bin<br>binlog_format=ROW<br>read_only=1 # 从服务器只读<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><br>log_replica_updates=1  # 如果从服务器可能成为其他服务器的主服务器<br>relay_log_recovery=1  # 启用中继日志恢复<br><br>replicate-ignore-db=information_schema<br>replicate-ignore-db=mysql<br>replicate-ignore-db=performance_schema<br>replicate-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 1 号从库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf slave_1:/etc/my.cnf<br></code></pre></td></tr></table></figure><h5 id="2-号从库配置：">2 号从库配置：</h5><p><strong>复制Docker内的 2 号从库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp slave_2:/etc/my.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">3号数据库配置</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For advice on how to change settings please see</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html</span><br><br>[mysqld]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cache <span class="hljs-keyword">in</span> MySQL. Start at 70% of total RAM <span class="hljs-keyword">for</span> dedicated server, <span class="hljs-keyword">else</span> 10%.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">innodb_buffer_pool_size = 128M</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">changes to the binary <span class="hljs-built_in">log</span> between backups.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">log_bin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The server defaults are faster <span class="hljs-keyword">for</span> transactions and fast SELECTs.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">join_buffer_size = 128M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sort_buffer_size = 2M</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">read_rnd_buffer_size = 2M</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Remove leading <span class="hljs-comment"># to revert to previous value for default_authentication_plugin,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">this will increase compatibility with older clients. For background, see:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html<span class="hljs-comment">#sysvar_default_authentication_plugin</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">default-authentication-plugin=mysql_native_password</span><br>skip-host-cache<br>skip-name-resolve<br>datadir=/var/lib/mysql<br>socket=/var/run/mysqld/mysqld.sock<br>secure-file-priv=/var/lib/mysql-files<br>user=mysql<br><br><br><br>server-id=3<br>log_bin=mysql-bin<br>relay-log=mysql-relay-bin<br>binlog_format=ROW<br>read_only=1 # 从服务器只读<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><br>log_replica_updates=1  # 如果从服务器可能成为其他服务器的主服务器<br>relay_log_recovery=1  # 启用中继日志恢复<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">排除不同步的数据库</span><br>replicate-ignore-db=information_schema <br>replicate-ignore-db=mysql<br>replicate-ignore-db=performance_schema<br>replicate-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br><br>!includedir /etc/mysql/conf.d/<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 2 号从库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp my.cnf slave_2:/etc/my.cnf<br></code></pre></td></tr></table></figure><h4 id="步骤-3：重启容器"><strong>步骤 3：重启容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重启MySQL</span><br>docker restart master slave_1 slave_2<br></code></pre></td></tr></table></figure><h4 id="步骤-4：配置主从复制"><strong>步骤 4：配置主从复制</strong></h4><h5 id="方式一：GTID主从复制">方式一：GTID主从复制</h5><p><strong>主库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建复制用户<br>CREATE USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123&#x27;;<br># 授予复制权限<br>GRANT REPLICATION SLAVE ON *.* TO replica@&#x27;%&#x27;;<br># 更改验证方式为本地密码验证<br>ALTER USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123&#x27;;<br># 刷新权限<br>FLUSH PRIVILEGES;<br>-- 查看主服务器状态，记录File和Position值<br>SHOW MASTER STATUS;<br></code></pre></td></tr></table></figure><p><strong>从库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 停止从库复制<br>STOP SLAVE;<br><br>-- 配置主库连接信息（使用GTID自动定位）<br>CHANGE MASTER TO<br>MASTER_HOST=&#x27;master&#x27;,<br>MASTER_USER=&#x27;replica&#x27;,<br>MASTER_PASSWORD=&#x27;123&#x27;,<br>MASTER_AUTO_POSITION = 1;  # 关键参数，启用GTID自动定位<br><br>-- 启动复制<br>START SLAVE;<br></code></pre></td></tr></table></figure><h5 id="方式二：传统主从复制">方式二：传统主从复制</h5><p><strong>主库：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建复制用户<br>CREATE USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123&#x27;;<br># 授予复制权限<br>GRANT REPLICATION SLAVE ON *.* TO replica@&#x27;%&#x27;;<br># 更改验证方式为本地密码验证<br>ALTER USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123&#x27;;<br># 刷新权限<br>FLUSH PRIVILEGES;<br>-- 查看主服务器状态，记录File和Position值<br>SHOW MASTER STATUS;<br></code></pre></td></tr></table></figure><p><strong>从库：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 停止从库复制<br>STOP SLAVE;<br><br>-- 配置主库连接信息（使用GTID自动定位）<br>CHANGE MASTER TO<br>MASTER_HOST=&#x27;master&#x27;,<br>MASTER_USER=&#x27;replica&#x27;,<br>MASTER_PASSWORD=&#x27;123&#x27;,<br>MASTER_LOG_FILE=&#x27;mysql-bin.000007&#x27;, -- 对应主库状态中的file<br>MASTER_LOG_POS=157;-- 对应主库状态中的position<br><br>-- 启动复制<br>START SLAVE;<br></code></pre></td></tr></table></figure><h4 id="步骤-5：测试主从同步">步骤 5：测试主从同步</h4><p><strong>主库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建数据库和数据表并新增数据，在其他从属数据库查看复制状态<br>create DATABASE `db_01`;<br>use db_01;<br>CREATE TABLE tb_user(<br>id int(11) AUTO_INCREMENT PRIMARY key not null ,<br>name varchar(50) not null<br>)ENGINE = INNODB DEFAULT CHARSET=utf8mb4;<br># 插入数据<br>insert into tb_user(id,name)VALUES(null,&#x27;Tom&#x27;),(null,&#x27;Jerry&#x27;);<br># 修改数据<br>update tb_user set name=&#x27;Peter&#x27; where id =1;<br># 删除数据<br>delete from tb_user where id = 2;<br></code></pre></td></tr></table></figure><p><strong>从库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use db_01;<br>select * from tb_user;<br></code></pre></td></tr></table></figure><h3 id="MySQL5-7-主从集群">MySQL5.7 主从集群</h3><p><code>docker-compose.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">mysql57-group</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mysql57_1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.22</span><br>    <span class="hljs-attr">container_name:</span>  <span class="hljs-string">mysql57_1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql57_1</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33065:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.37</span><span class="hljs-number">.0</span><span class="hljs-number">.15</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./master/conf.d:/etc/mysql/conf.d</span><br><br><br>  <span class="hljs-attr">mysql57_2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.22</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql57_2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql57_2</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33066:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.37</span><span class="hljs-number">.0</span><span class="hljs-number">.16</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave1/conf.d:/etc/mysql/conf.d</span><br><br>  <span class="hljs-attr">mysql57_3:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.22</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql57_3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">mysql57_3</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;33067:3306&quot;</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">mysql-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.37</span><span class="hljs-number">.0</span><span class="hljs-number">.17</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/data:/var/lib/mysql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./slave2/conf.d:/etc/mysql/conf.d</span><br><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">mysql57-network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.37</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br></code></pre></td></tr></table></figure><h4 id="步骤-1：创建容器-2"><strong>步骤 1：创建容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在docker-compose.yml文件目录下</span><br>docker compose up -d<br></code></pre></td></tr></table></figure><h4 id="步骤-2：修改配置-2"><strong>步骤 2：修改配置</strong></h4><p>进入容器系统，查找配置文件位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it mysql57_1 bash<br></code></pre></td></tr></table></figure><p>一般路径：<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p><h5 id="主库配置：-2">主库配置：</h5><p><strong>复制Docker内的主库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql57_1:/etc/mysql/mysql.conf.d/mysqld.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">it under the terms of the GNU General Public License as published by</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the Free Software Foundation; version 2 of the License.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GNU General Public License <span class="hljs-keyword">for</span> more details.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">along with this program; <span class="hljs-keyword">if</span> not, write to the Free Software</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># The MySQL  Server configuration file.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># For explanations see</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><br>[mysqld]<br>pid-file= /var/run/mysqld/mysqld.pid<br>socket= /var/run/mysqld/mysqld.sock<br>datadir= /var/lib/mysql<br><span class="hljs-meta prompt_">#</span><span class="language-bash">log-error= /var/log/mysql/error.log</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">By default we only accept connections from localhost</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bind-address= 127.0.0.1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br><br>server-id=1<br>log_bin=mysql-bin<br>binlog_format=ROW<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><br>binlog-ignore-db=information_schema<br>binlog-ignore-db=mysql<br>binlog-ignore-db=performance_schema<br>binlog-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回主库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysqld.cnf mysql57_1:/etc/mysql/mysql.conf.d/mysqld.cnf<br></code></pre></td></tr></table></figure><h5 id="1-号从库配置：-2">1 号从库配置：</h5><p><strong>复制Docker内的 1 号从库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql57_2:/etc/mysql/mysql.conf.d/mysqld.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">it under the terms of the GNU General Public License as published by</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the Free Software Foundation; version 2 of the License.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GNU General Public License <span class="hljs-keyword">for</span> more details.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">along with this program; <span class="hljs-keyword">if</span> not, write to the Free Software</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># The MySQL  Server configuration file.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># For explanations see</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><br>[mysqld]<br>pid-file= /var/run/mysqld/mysqld.pid<br>socket= /var/run/mysqld/mysqld.sock<br>datadir= /var/lib/mysql<br><span class="hljs-meta prompt_">#</span><span class="language-bash">log-error= /var/log/mysql/error.log</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">By default we only accept connections from localhost</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bind-address= 127.0.0.1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br><br><br>server-id=2<br>log_bin=mysql-bin<br>relay-log=mysql-relay-bin<br>binlog_format=ROW<br>read_only=1 # 从服务器只读<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">log_replica_updates=1  <span class="hljs-comment"># 如果从服务器可能成为其他服务器的主服务器</span></span><br>relay_log_recovery=1  # 启用中继日志恢复<br><br>replicate-ignore-db=information_schema<br>replicate-ignore-db=mysql<br>replicate-ignore-db=performance_schema<br>replicate-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 1 号从库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysqld.cnf mysql57_2:/etc/mysql/mysql.conf.d/mysqld.cnf<br></code></pre></td></tr></table></figure><h5 id="2-号从库配置：-2">2 号从库配置：</h5><p><strong>复制Docker内的 2 号从库的配置文件到主机当前目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysql57_3:/etc/mysql/mysql.conf.d/mysqld.cnf .<br></code></pre></td></tr></table></figure><p><strong>修改配置内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">it under the terms of the GNU General Public License as published by</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">the Free Software Foundation; version 2 of the License.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GNU General Public License <span class="hljs-keyword">for</span> more details.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">along with this program; <span class="hljs-keyword">if</span> not, write to the Free Software</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># The MySQL  Server configuration file.</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># For explanations see</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><br>[mysqld]<br>pid-file= /var/run/mysqld/mysqld.pid<br>socket= /var/run/mysqld/mysqld.sock<br>datadir= /var/lib/mysql<br><span class="hljs-meta prompt_">#</span><span class="language-bash">log-error= /var/log/mysql/error.log</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">By default we only accept connections from localhost</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bind-address= 127.0.0.1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br><br>server-id=3<br>log_bin=mysql-bin<br>relay-log=mysql-relay-bin<br>binlog_format=ROW<br>read_only=1 # 从服务器只读<br>default_authentication_plugin=mysql_native_password<br>gtid_mode=ON<br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制GTID一致性</span><br>enforce_gtid_consistency=ON<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">log_replica_updates=1  <span class="hljs-comment"># 如果从服务器可能成为其他服务器的主服务器</span></span><br>relay_log_recovery=1  # 启用中继日志恢复<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">排除不同步的数据库</span><br>replicate-ignore-db=information_schema <br>replicate-ignore-db=mysql<br>replicate-ignore-db=performance_schema<br>replicate-ignore-db=sys<br><br>pid-file=/var/run/mysqld/mysqld.pid<br>[client]<br>socket=/var/run/mysqld/mysqld.sock<br></code></pre></td></tr></table></figure><p><strong>将修改后的配置文件放回 2 号从库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp mysqld.cnf mysql57_3:/etc/mysql/mysql.conf.d/mysqld.cnf<br></code></pre></td></tr></table></figure><h4 id="步骤-3：重启容器-2"><strong>步骤 3：重启容器</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重启MySQL</span><br>docker restart mysql57_1 mysql57_2 mysql57_3<br></code></pre></td></tr></table></figure><h4 id="步骤-4：配置主从复制-2"><strong>步骤 4：配置主从复制</strong></h4><h5 id="方式一：GTID主从复制-2">方式一：GTID主从复制</h5><p><strong>主库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建复制用户<br>CREATE USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123&#x27;;<br># 授予复制权限<br>GRANT REPLICATION SLAVE ON *.* TO replica@&#x27;%&#x27;;<br># 更改验证方式为本地密码验证<br>ALTER USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123&#x27;;<br># 刷新权限<br>FLUSH PRIVILEGES;<br>-- 查看主服务器状态，记录File和Position值<br>SHOW MASTER STATUS;<br></code></pre></td></tr></table></figure><p><strong>从库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 停止从库复制<br>STOP SLAVE;<br><br>-- 配置主库连接信息（使用GTID自动定位）<br>CHANGE MASTER TO<br>MASTER_HOST=&#x27;mysql57_1&#x27;,<br>MASTER_USER=&#x27;replica&#x27;,<br>MASTER_PASSWORD=&#x27;123&#x27;,<br>MASTER_AUTO_POSITION = 1;  # 关键参数，启用GTID自动定位<br><br>-- 启动复制<br>START SLAVE;<br></code></pre></td></tr></table></figure><h5 id="方式二：传统主从复制-2">方式二：传统主从复制</h5><p><strong>主库：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建复制用户<br>CREATE USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123&#x27;;<br># 授予复制权限<br>GRANT REPLICATION SLAVE ON *.* TO replica@&#x27;%&#x27;;<br># 更改验证方式为本地密码验证<br>ALTER USER &#x27;replica&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123&#x27;;<br># 刷新权限<br>FLUSH PRIVILEGES;<br>-- 查看主服务器状态，记录File和Position值<br>SHOW MASTER STATUS;<br></code></pre></td></tr></table></figure><p><strong>从库：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 停止从库复制<br>STOP SLAVE;<br><br>-- 配置主库连接信息（使用GTID自动定位）<br>CHANGE MASTER TO<br>MASTER_HOST=&#x27;master&#x27;,<br>MASTER_USER=&#x27;replica&#x27;,<br>MASTER_PASSWORD=&#x27;123&#x27;,<br>MASTER_LOG_FILE=&#x27;mysql-bin.000007&#x27;, -- 对应主库状态中的file<br>MASTER_LOG_POS=157;-- 对应主库状态中的position<br><br>-- 启动复制<br>START SLAVE;<br></code></pre></td></tr></table></figure><h4 id="步骤-5：测试主从同步-2">步骤 5：测试主从同步</h4><p><strong>主库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 创建数据库和数据表并新增数据，在其他从属数据库查看复制状态<br>create DATABASE `db_01`;<br>use db_01;<br>CREATE TABLE tb_user(<br>id int(11) AUTO_INCREMENT PRIMARY key not null ,<br>name varchar(50) not null<br>)ENGINE = INNODB DEFAULT CHARSET=utf8mb4;<br># 插入数据<br>insert into tb_user(id,name)VALUES(null,&#x27;Tom&#x27;),(null,&#x27;Jerry&#x27;);<br># 修改数据<br>update tb_user set name=&#x27;Peter&#x27; where id =1;<br># 删除数据<br>delete from tb_user where id = 2;<br></code></pre></td></tr></table></figure><p><strong>从库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use db_01;<br>select * from tb_user;<br></code></pre></td></tr></table></figure><h3 id=""></h3>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/">主从复制</category>
      
      
      <category domain="https://superlovelace.top/tags/mysql/">mysql</category>
      
      
      <comments>https://superlovelace.top/2025/03/27/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>分布式事务Seata</title>
      <link>https://superlovelace.top/2025/03/21/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1Seata/</link>
      <guid>https://superlovelace.top/2025/03/21/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1Seata/</guid>
      <pubDate>Fri, 21 Mar 2025 08:49:33 GMT</pubDate>
      
      <description>Seata学习笔记</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Seata">Seata</h2><p>官网地址：<a href="https://seata.apache.org/zh-cn/">https://seata.apache.org/zh-cn/</a></p><h3 id="下载Seata服务器">下载<code>Seata</code>服务器</h3><p><strong>需下载与<code>springcloud</code>项目内对应的版本</strong></p><p>例如：</p><p><code>spring-cloud-alibaba</code> ：<code>2021.0.5.0</code> 对应的就是<code>Seata</code> <code>v1.6.1</code></p><p>这样服务器就下载<code>1.6.1.zip</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2021.0.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">maven-javadoc-plugin.version</span>&gt;</span>3.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">maven-javadoc-plugin.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">sentinel.version</span>&gt;</span>1.8.6<span class="hljs-tag">&lt;/<span class="hljs-name">sentinel.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">maven-gpg-plugin.version</span>&gt;</span>3.0.1<span class="hljs-tag">&lt;/<span class="hljs-name">maven-gpg-plugin.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">maven-source-plugin.version</span>&gt;</span>3.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">maven-source-plugin.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">flatten-maven-plugin.version</span>&gt;</span>1.2.7<span class="hljs-tag">&lt;/<span class="hljs-name">flatten-maven-plugin.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">revision</span>&gt;</span>2021.0.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">revision</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">nacos.client.version</span>&gt;</span>2.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">nacos.client.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">seata.version</span>&gt;</span>1.6.1<span class="hljs-tag">&lt;/<span class="hljs-name">seata.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">spring.context.support.version</span>&gt;</span>1.0.11<span class="hljs-tag">&lt;/<span class="hljs-name">spring.context.support.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>版本历史</strong>：<a href="https://seata.apache.org/zh-cn/release-history/seata-server">https://seata.apache.org/zh-cn/release-history/seata-server</a></p><h4 id="Seata-2-x"><a href="https://seata.apache.org/zh-cn/release-history/seata-server#seata-2x">Seata 2.x</a></h4><table><thead><tr><th>发布日期</th><th>版本号</th><th>二进制下载</th><th>docker 镜像</th><th>checksum</th><th>发布说明</th><th>参考文档</th><th>是否 ASF 版本</th></tr></thead><tbody><tr><td>2023-11-24</td><td>2.0.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v2.0.0/seata-server-2.0.0.zip">2.0.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=2.0.0">seataio/seata-server:2.0.0</a></td><td>5c5c6a98649f37ed7894743b21bc8777</td><td><a href="https://seata.apache.org/zh-cn/docs/release-notes/">2.0.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/user/quickstart/">2.0.x 快速开始</a></td><td>否</td></tr></tbody></table><h4 id="Seata-1-x"><a href="https://seata.apache.org/zh-cn/release-history/seata-server#seata-1x">Seata 1.x</a></h4><table><thead><tr><th>发布日期</th><th>版本号</th><th>二进制下载</th><th>docker 镜像</th><th>checksum</th><th>发布说明</th><th>参考文档</th><th>是否 ASF 版本</th></tr></thead><tbody><tr><td>2023-10-31</td><td>1.8.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.8.0/seata-server-1.8.0.zip">1.8.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.8.0">seataio/seata-server:1.8.0</a></td><td>f5de162a4577f5f96828cba75d912240</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.8/release-notes/">1.8.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.8/user/quickstart/">1.8.x 快速开始</a></td><td>否</td></tr><tr><td>2023-09-05</td><td>1.7.1</td><td><a href="https://github.com/apache/incubator-seata/download/v1.7.1/seata-server-1.7.1.zip">1.7.1.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.7.1">seataio/seata-server:1.7.1</a></td><td>5e7f41965f8f26a46b727d204eef3054</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.7/release-notes/">1.7.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.7/user/quickstart/">1.7.x 快速开始</a></td><td>否</td></tr><tr><td>2023-07-11</td><td>1.7.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.7.0/seata-server-1.7.0.zip">1.7.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.7.0">seataio/seata-server:1.7.0</a></td><td>ca1f7444f19db7245df1e460fd468d30</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.7/release-notes/">1.7.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.7/user/quickstart/">1.7.x 快速开始</a></td><td>否</td></tr><tr><td>2022-12-22</td><td>1.6.1</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.6.1/seata-server-1.6.1.zip">1.6.1.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.6.1">seataio/seata-server:1.6.1</a></td><td>736ded86ab3adca52e95d253889179ef</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.6/release-notes/">1.6.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.6/user/quickstart/">1.6.x 快速开始</a></td><td>否</td></tr><tr><td>2022-12-17</td><td>1.6.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.6.0/seata-server-1.6.0.zip">1.6.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.6.0">seataio/seata-server:1.6.0</a></td><td>cacf323b8653c549fef806049f9e01f2</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.6/release-notes/">1.6.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.6/user/quickstart/">1.6.x 快速开始</a></td><td>否</td></tr><tr><td>2022-07-13</td><td>1.5.2</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.5.2/seata-server-1.5.2.zip">1.5.2.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.5.2">seataio/seata-server:1.5.2</a></td><td>41dbc4e3519a71d92afc212bb71a41c4</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.5/release-notes/">1.5.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.5/user/quickstart/">1.5.x 快速开始</a></td><td>否</td></tr><tr><td>2022-05-17</td><td>1.5.1</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.5.1/seata-server-1.5.1.zip">1.5.1.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.5.1">seataio/seata-server:1.5.1</a></td><td>3f75a4dc7bf553849dd439cc0faa2fdc</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.5/release-notes/">1.5.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.5/user/quickstart/">1.5.x 快速开始</a></td><td>否</td></tr><tr><td>2021-04-25</td><td>1.4.2</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.4.2/seata-server-1.4.2.zip">1.4.2.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.4.2">seataio/seata-server:1.4.2</a></td><td>4fb356c3c08e0bbebe2af66419f62f2d</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/release-notes/">1.4.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/user/quickstart/">1.4.x 快速开始</a></td><td>否</td></tr><tr><td>2021-02-08</td><td>1.4.1</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.4.1/seata-server-1.4.1.zip">1.4.1.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.4.1">seataio/seata-server:1.4.1</a></td><td>fd5f05b3d2894e6f6cb6ab7ab21c5207</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/release-notes/">1.4.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/user/quickstart/">1.4.x 快速开始</a></td><td>否</td></tr><tr><td>2020-11-02</td><td>1.4.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.4.0/seata-server-1.4.0.zip">1.4.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.4.0">seataio/seata-server:1.4.0</a></td><td>5a8304aee9ba2bdf80a7f96cb2328f69</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/release-notes/">1.4.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.4/user/quickstart/">1.4.x 快速开始</a></td><td>否</td></tr><tr><td>2020-07-16</td><td>1.3.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.3.0/seata-server-1.3.0.zip">1.3.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.3.0">seataio/seata-server:1.3.0</a></td><td>d888a04eb35f1de7cd7e89efabbbe779</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.3/release-notes/">1.3.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.3/user/quickstart/">1.3.x 快速开始</a></td><td>否</td></tr><tr><td>2020-04-21</td><td>1.2.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.2.0/seata-server-1.2.0.zip">1.2.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.2.0">seataio/seata-server:1.2.0</a></td><td>420ccff3f69377ee2114c9a390a5e0e3</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.2/release-notes/">1.2.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.2/user/quickstart/">1.2.x 快速开始</a></td><td>否</td></tr><tr><td>2020-02-20</td><td>1.1.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.1.0/seata-server-1.1.0.zip">1.1.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.1.0">seataio/seata-server:1.1.0</a></td><td>1653d4af05bccf48c8417a829c9ca0cf</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.1/release-notes/">1.1.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.1/user/quickstart/">1.1.x 快速开始</a></td><td>否</td></tr><tr><td>2019-12-21</td><td>1.0.0</td><td><a href="https://github.com/apache/incubator-seata/releases/download/v1.0.0/seata-server-1.0.0.zip">1.0.0.zip</a></td><td><a href="https://hub.docker.com/r/seataio/seata-server/tags?page=1&amp;name=1.0.0">seataio/seata-server:1.0.0</a></td><td>c889eab52fc658cd1c4a293858ded87f</td><td><a href="https://seata.apache.org/zh-cn/docs/v1.0/release-notes/">1.0.x 发布说明</a></td><td><a href="https://seata.apache.org/zh-cn/docs/v1.0/user/quickstart/">1.0.x 快速开始</a></td><td>否</td></tr></tbody></table><h3 id="配置Seata">配置<code>Seata</code></h3><h4 id="配置数据库">配置数据库</h4><p>表<code>sql文件</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># sql文件地址 （dm、mysql、oracle、postgresql）</span><br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/apache/i</span>ncubator-seata<span class="hljs-regexp">/tree/m</span>aster<span class="hljs-regexp">/script/</span>server/db<br></code></pre></td></tr></table></figure><h4 id="配置yml">配置yml</h4><p>路径：<code>seata\conf\application.yml</code></p><p>配置示例（根据需要修改）：</p><p>注：建议自己学习的话，先用默认类型<code>file</code>，之后再尝试将注册中心改成<code>nacos</code>等，这样修改后，就必须先启动<code>nacos</code>后，才能再启动<code>seata</code>了，以<code>nacos</code>作为注册中心可以方便集中管理配置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment">#  Copyright 1999-2019 Seata.io Group.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment">#  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">#  You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">#  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment">#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">#  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">#  limitations under the License.</span><br><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">7091</span><br><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">seata-server</span><br><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">config:</span> <span class="hljs-string">classpath:logback-spring.xml</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">$&#123;user.home&#125;/logs/seata</span><br>  <span class="hljs-attr">extend:</span><br>    <span class="hljs-attr">logstash-appender:</span><br>      <span class="hljs-attr">destination:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:4560</span><br>    <span class="hljs-attr">kafka-appender:</span><br>      <span class="hljs-attr">bootstrap-servers:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9092</span><br>      <span class="hljs-attr">topic:</span> <span class="hljs-string">logback_to_logstash</span><br><br><span class="hljs-attr">seata:</span><br>  <span class="hljs-attr">config:</span><br>    <span class="hljs-comment"># support: nacos 、 consul 、 apollo 、 zk  、 etcd3</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span><br>      <span class="hljs-attr">namespace:</span><br>      <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br>      <span class="hljs-attr">username:</span><br>      <span class="hljs-attr">password:</span><br>      <span class="hljs-attr">context-path:</span><br>      <span class="hljs-comment">##if use MSE Nacos with auth, mutex with username/password attribute</span><br>      <span class="hljs-comment">#access-key:</span><br>      <span class="hljs-comment">#secret-key:</span><br>      <span class="hljs-attr">data-id:</span> <span class="hljs-string">seataServer.properties</span><br>    <span class="hljs-attr">consul:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8500</span><br>      <span class="hljs-attr">acl-token:</span><br>      <span class="hljs-attr">key:</span> <span class="hljs-string">seata.properties</span><br>    <span class="hljs-attr">apollo:</span><br>      <span class="hljs-attr">appId:</span> <span class="hljs-string">seata-server</span><br>      <span class="hljs-attr">apollo-meta:</span> <span class="hljs-string">http://192.168.1.204:8801</span><br>      <span class="hljs-attr">apollo-config-service:</span> <span class="hljs-string">http://192.168.1.204:8080</span><br>      <span class="hljs-attr">namespace:</span> <span class="hljs-string">application</span><br>      <span class="hljs-attr">apollo-access-key-secret:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">seata</span><br>    <span class="hljs-attr">zk:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:2181</span><br>      <span class="hljs-attr">session-timeout:</span> <span class="hljs-number">6000</span><br>      <span class="hljs-attr">connect-timeout:</span> <span class="hljs-number">2000</span><br>      <span class="hljs-attr">username:</span><br>      <span class="hljs-attr">password:</span><br>      <span class="hljs-attr">node-path:</span> <span class="hljs-string">/seata/seata.properties</span><br>    <span class="hljs-attr">etcd3:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">http://localhost:2379</span><br>      <span class="hljs-attr">key:</span> <span class="hljs-string">seata.properties</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-comment"># support: nacos 、 eureka 、 redis 、 zk  、 consul 、 etcd3 、 sofa</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">preferred-networks:</span> <span class="hljs-number">30.240</span><span class="hljs-string">.*</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">application:</span> <span class="hljs-string">seata-server</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span><br>      <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br>      <span class="hljs-attr">namespace:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">username:</span><br>      <span class="hljs-attr">password:</span><br>      <span class="hljs-attr">context-path:</span><br>      <span class="hljs-comment">##if use MSE Nacos with auth, mutex with username/password attribute</span><br>      <span class="hljs-comment">#access-key:</span><br>      <span class="hljs-comment">#secret-key:</span><br>    <span class="hljs-attr">eureka:</span><br>      <span class="hljs-attr">service-url:</span> <span class="hljs-string">http://localhost:8761/eureka</span><br>      <span class="hljs-attr">application:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">weight:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:6379</span><br>      <span class="hljs-attr">db:</span> <span class="hljs-number">0</span><br>      <span class="hljs-attr">password:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">timeout:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">zk:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:2181</span><br>      <span class="hljs-attr">session-timeout:</span> <span class="hljs-number">6000</span><br>      <span class="hljs-attr">connect-timeout:</span> <span class="hljs-number">2000</span><br>      <span class="hljs-attr">username:</span><br>      <span class="hljs-attr">password:</span><br>    <span class="hljs-attr">consul:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8500</span><br>      <span class="hljs-attr">acl-token:</span><br>    <span class="hljs-attr">etcd3:</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">http://localhost:2379</span><br>    <span class="hljs-attr">sofa:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9603</span><br>      <span class="hljs-attr">application:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">region:</span> <span class="hljs-string">DEFAULT_ZONE</span><br>      <span class="hljs-attr">datacenter:</span> <span class="hljs-string">DefaultDataCenter</span><br>      <span class="hljs-attr">cluster:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br>      <span class="hljs-attr">address-wait-time:</span> <span class="hljs-number">3000</span><br><br>  <span class="hljs-attr">server:</span><br>    <span class="hljs-attr">service-port:</span> <span class="hljs-number">8091</span> <span class="hljs-comment">#If not configured, the default is &#x27;$&#123;server.port&#125; + 1000&#x27;</span><br>    <span class="hljs-attr">max-commit-retry-timeout:</span> <span class="hljs-number">-1</span><br>    <span class="hljs-attr">max-rollback-retry-timeout:</span> <span class="hljs-number">-1</span><br>    <span class="hljs-attr">rollback-retry-timeout-unlock-enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">enable-check-auth:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">enable-parallel-request-handle:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">retry-dead-threshold:</span> <span class="hljs-number">130000</span><br>    <span class="hljs-attr">xaer-nota-retry-timeout:</span> <span class="hljs-number">60000</span><br>    <span class="hljs-attr">enableParallelRequestHandle:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">recovery:</span><br>      <span class="hljs-attr">committing-retry-period:</span> <span class="hljs-number">1000</span><br>      <span class="hljs-attr">async-committing-retry-period:</span> <span class="hljs-number">1000</span><br>      <span class="hljs-attr">rollbacking-retry-period:</span> <span class="hljs-number">1000</span><br>      <span class="hljs-attr">timeout-retry-period:</span> <span class="hljs-number">1000</span><br>    <span class="hljs-attr">undo:</span><br>      <span class="hljs-attr">log-save-days:</span> <span class="hljs-number">7</span><br>      <span class="hljs-attr">log-delete-period:</span> <span class="hljs-number">86400000</span><br>    <span class="hljs-attr">session:</span><br>      <span class="hljs-attr">branch-async-queue-size:</span> <span class="hljs-number">5000</span> <span class="hljs-comment">#branch async remove queue size</span><br>      <span class="hljs-attr">enable-branch-async-remove:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#enable to asynchronous remove branchSession</span><br>  <span class="hljs-attr">store:</span><br>    <span class="hljs-comment"># support: file 、 db 、 redis</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">session:</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">lock:</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">file:</span><br>      <span class="hljs-attr">dir:</span> <span class="hljs-string">sessionStore</span><br>      <span class="hljs-attr">max-branch-session-size:</span> <span class="hljs-number">16384</span><br>      <span class="hljs-attr">max-global-session-size:</span> <span class="hljs-number">512</span><br>      <span class="hljs-attr">file-write-buffer-cache-size:</span> <span class="hljs-number">16384</span><br>      <span class="hljs-attr">session-reload-read-size:</span> <span class="hljs-number">100</span><br>      <span class="hljs-attr">flush-disk-mode:</span> <span class="hljs-string">async</span><br>    <span class="hljs-attr">db:</span><br>      <span class="hljs-attr">datasource:</span> <span class="hljs-string">druid</span><br>      <span class="hljs-attr">db-type:</span> <span class="hljs-string">mysql</span><br>      <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.jdbc.Driver</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/seata?rewriteBatchedStatements=true</span><br>      <span class="hljs-attr">user:</span> <span class="hljs-string">mysql</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">mysql</span><br>      <span class="hljs-attr">min-conn:</span> <span class="hljs-number">10</span><br>      <span class="hljs-attr">max-conn:</span> <span class="hljs-number">100</span><br>      <span class="hljs-attr">global-table:</span> <span class="hljs-string">global_table</span><br>      <span class="hljs-attr">branch-table:</span> <span class="hljs-string">branch_table</span><br>      <span class="hljs-attr">lock-table:</span> <span class="hljs-string">lock_table</span><br>      <span class="hljs-attr">distributed-lock-table:</span> <span class="hljs-string">distributed_lock</span><br>      <span class="hljs-attr">query-limit:</span> <span class="hljs-number">1000</span><br>      <span class="hljs-attr">max-wait:</span> <span class="hljs-number">5000</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-string">single</span><br>      <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>      <span class="hljs-attr">min-conn:</span> <span class="hljs-number">10</span><br>      <span class="hljs-attr">max-conn:</span> <span class="hljs-number">100</span><br>      <span class="hljs-attr">password:</span><br>      <span class="hljs-attr">max-total:</span> <span class="hljs-number">100</span><br>      <span class="hljs-attr">query-limit:</span> <span class="hljs-number">1000</span><br>      <span class="hljs-attr">single:</span><br>        <span class="hljs-attr">host:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>        <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>      <span class="hljs-attr">sentinel:</span><br>        <span class="hljs-attr">master-name:</span><br>        <span class="hljs-attr">sentinel-hosts:</span><br>  <span class="hljs-attr">metrics:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">registry-type:</span> <span class="hljs-string">compact</span><br>    <span class="hljs-attr">exporter-list:</span> <span class="hljs-string">prometheus</span><br>    <span class="hljs-attr">exporter-prometheus-port:</span> <span class="hljs-number">9898</span><br>  <span class="hljs-attr">transport:</span><br>    <span class="hljs-attr">rpc-tc-request-timeout:</span> <span class="hljs-number">15000</span><br>    <span class="hljs-attr">enable-tc-server-batch-send-response:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">shutdown:</span><br>      <span class="hljs-attr">wait:</span> <span class="hljs-number">3</span><br>    <span class="hljs-attr">thread-factory:</span><br>      <span class="hljs-attr">boss-thread-prefix:</span> <span class="hljs-string">NettyBoss</span><br>      <span class="hljs-attr">worker-thread-prefix:</span> <span class="hljs-string">NettyServerNIOWorker</span><br>      <span class="hljs-attr">boss-thread-size:</span> <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="微服务集成Seata">微服务集成Seata</h3><h4 id="引入依赖">引入依赖</h4><p>对应的服务都需要引入此依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--统一配置管理--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--读取bootstrap文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--seata--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="修改配置">修改配置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">seata:</span><br>  <span class="hljs-attr">registry:</span> <span class="hljs-comment"># TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">nacos</span> <span class="hljs-comment"># 注册中心类型 nacos</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span> <span class="hljs-comment"># nacos地址</span><br>      <span class="hljs-attr">namespace:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># namespace，默认为空</span><br>      <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span> <span class="hljs-comment"># 分组，需与seata配置文件中的分组一致</span><br>      <span class="hljs-attr">application:</span> <span class="hljs-string">seata-server</span> <span class="hljs-comment"># seata服务名称</span><br>      <span class="hljs-attr">username:</span> <br>      <span class="hljs-attr">password:</span> <br>  <span class="hljs-attr">tx-service-group:</span> <span class="hljs-string">hmall</span> <span class="hljs-comment"># 事务组名称</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">vgroup-mapping:</span> <span class="hljs-comment"># 事务组与tc集群的映射关系</span><br>      <span class="hljs-attr">hmall:</span> <span class="hljs-string">&quot;default&quot;</span><br>    <span class="hljs-attr">grouplist:</span><br>      <span class="hljs-attr">default:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8091</span> <span class="hljs-comment"># tc集群地址</span><br>      <span class="hljs-attr">default2:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8091</span><br>    <span class="hljs-attr">disable-global-transaction:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否禁用全局事务</span><br>    <span class="hljs-attr">enable-degrade:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否开启降级</span><br>  <span class="hljs-attr">data-source-proxy-mode:</span> <span class="hljs-string">AT</span> <span class="hljs-comment"># 事务代理模式 AT模式[最终一致] XA[强一致]</span><br></code></pre></td></tr></table></figure><p>还有一种方法是在<code>resource</code>文件夹下创建<code>file.conf</code></p><p>通常只配置<code>service</code>内的选项即可，其他默认。这种方式好像是1.0版本以前的配置方法，只不过现在也兼容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs bash">transport &#123;<br>  <span class="hljs-comment"># Seata 传输层配置</span><br>  <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;TCP&quot;</span>                  <span class="hljs-comment"># 传输类型，默认 TCP</span><br>  server: <span class="hljs-string">&quot;NIO&quot;</span>                <span class="hljs-comment"># 服务端类型，默认 NIO</span><br>  heartbeat: <span class="hljs-literal">true</span>              <span class="hljs-comment"># 是否开启心跳检测</span><br>  serialization: <span class="hljs-string">&quot;seata&quot;</span>       <span class="hljs-comment"># 序列化方式，默认 &quot;seata&quot;</span><br>  compressor: <span class="hljs-string">&quot;none&quot;</span>           <span class="hljs-comment"># 压缩方式，默认 &quot;none&quot;</span><br>&#125;<br><br>service &#123;<br>  <span class="hljs-comment"># 事务组映射配置</span><br>  vgroupMapping.default_tx_group: <span class="hljs-string">&quot;default&quot;</span>  <span class="hljs-comment"># 默认事务组映射</span><br>  <span class="hljs-comment"># Seata 服务器地址列表</span><br>  default.grouplist: <span class="hljs-string">&quot;127.0.0.1:8091&quot;</span><br>  <span class="hljs-comment"># 是否开启降级处理</span><br>  enableDegrade: <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 是否禁用全局事务</span><br>  disableGlobalTransaction: <span class="hljs-literal">false</span><br>&#125;<br><br>client &#123;<br>  <span class="hljs-comment"># 客户端配置</span><br>  <span class="hljs-built_in">rm</span> &#123;<br>    asyncCommitBufferLimit: 10000  <span class="hljs-comment"># 异步提交缓存限制</span><br>    reportRetryCount: 5           <span class="hljs-comment"># 报告重试次数</span><br>    tableMetaCheckEnable: <span class="hljs-literal">false</span>    <span class="hljs-comment"># 是否开启表元数据检查</span><br>    reportSuccessEnable: <span class="hljs-literal">false</span>     <span class="hljs-comment"># 是否报告成功</span><br>  &#125;<br>  tm &#123;<br>    commitRetryCount: 5            <span class="hljs-comment"># 提交重试次数</span><br>    rollbackRetryCount: 5          <span class="hljs-comment"># 回滚重试次数</span><br>  &#125;<br>  undo &#123;<br>    dataValidation: <span class="hljs-literal">true</span>           <span class="hljs-comment"># 是否开启数据验证</span><br>    logSerialization: <span class="hljs-string">&quot;jackson&quot;</span>    <span class="hljs-comment"># Undo 日志序列化方式</span><br>    logTable: <span class="hljs-string">&quot;undo_log&quot;</span>           <span class="hljs-comment"># Undo 日志表名</span><br>  &#125;<br>  loadBalance &#123;<br>    <span class="hljs-built_in">type</span>: <span class="hljs-string">&quot;Random&quot;</span>                 <span class="hljs-comment"># 负载均衡策略，默认随机</span><br>    virtualNodes: 10               <span class="hljs-comment"># 虚拟节点数</span><br>  &#125;<br>&#125;<br><br>store &#123;<br>  <span class="hljs-comment"># 数据存储配置</span><br>  mode: <span class="hljs-string">&quot;file&quot;</span>                     <span class="hljs-comment"># 存储模式，支持 file、db、redis</span><br>  file &#123;<br>    <span class="hljs-built_in">dir</span>: <span class="hljs-string">&quot;file_store/seata&quot;</span>         <span class="hljs-comment"># 文件存储目录</span><br>  &#125;<br>  db &#123;<br>    datasource: <span class="hljs-string">&quot;druid&quot;</span>            <span class="hljs-comment"># 数据源类型</span><br>    dbType: <span class="hljs-string">&quot;mysql&quot;</span>                <span class="hljs-comment"># 数据库类型</span><br>    url: <span class="hljs-string">&quot;jdbc:mysql://127.0.0.1:3306/seata&quot;</span>  <span class="hljs-comment"># 数据库 URL</span><br>    user: <span class="hljs-string">&quot;root&quot;</span>                   <span class="hljs-comment"># 数据库用户名</span><br>    password: <span class="hljs-string">&quot;root&quot;</span>               <span class="hljs-comment"># 数据库密码</span><br>    minConn: 5                     <span class="hljs-comment"># 最小连接数</span><br>    maxConn: 30                    <span class="hljs-comment"># 最大连接数</span><br>    globalTable: <span class="hljs-string">&quot;global_table&quot;</span>    <span class="hljs-comment"># 全局事务表名</span><br>    branchTable: <span class="hljs-string">&quot;branch_table&quot;</span>    <span class="hljs-comment"># 分支事务表名</span><br>    lockTable: <span class="hljs-string">&quot;lock_table&quot;</span>        <span class="hljs-comment"># 锁表名</span><br>  &#125;<br>&#125;<br><br>lock &#123;<br>  <span class="hljs-comment"># 锁配置</span><br>  mode: <span class="hljs-string">&quot;file&quot;</span>                     <span class="hljs-comment"># 锁模式，支持 file、db、redis</span><br>&#125;<br><br>recovery &#123;<br>  <span class="hljs-comment"># 事务恢复配置</span><br>  committingRetryPeriod: 1000      <span class="hljs-comment"># 提交重试间隔（毫秒）</span><br>  asynCommittingRetryPeriod: 1000  <span class="hljs-comment"># 异步提交重试间隔（毫秒）</span><br>  rollbackingRetryPeriod: 1000     <span class="hljs-comment"># 回滚重试间隔（毫秒）</span><br>  timeoutRetryPeriod: 1000         <span class="hljs-comment"># 超时重试间隔（毫秒）</span><br>&#125;<br><br>transaction &#123;<br>  <span class="hljs-comment"># 全局事务配置</span><br>  undo.dataValidation: <span class="hljs-literal">true</span>        <span class="hljs-comment"># 是否开启 Undo 数据验证</span><br>  undo.logSerialization: <span class="hljs-string">&quot;jackson&quot;</span> <span class="hljs-comment"># Undo 日志序列化方式</span><br>  undo.logTable: <span class="hljs-string">&quot;undo_log&quot;</span>        <span class="hljs-comment"># Undo 日志表名</span><br>&#125;<br><br>support &#123;<br>  <span class="hljs-comment"># 支持配置</span><br>  spring &#123;<br>    datasource.autoproxy: <span class="hljs-literal">false</span>    <span class="hljs-comment"># 是否开启数据源自动代理</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="添加数据库表">添加数据库表</h4><p><code>SEATA AT 模式</code>需要 <code>UNDO_LOG</code> 表。</p><p>对于<code>undo_log</code>表，是用来记录中间数据的，若各个微服务子项目共用一个数据库，那么只创建一个<code>undo_log</code>表即可。若各个微服务子项目有各自的数据库，那么就需要在每个数据库中创建<code>undo_log</code>表。</p><p>每个版本，不同的数据库对应的创建语句可能有所不同，具体根据以下地址获取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改对应的版本访问即可（v1.6.1）</span><br>https://github.com/apache/incubator-seata/tree/v1.6.1/script/client/at/db<br></code></pre></td></tr></table></figure><p>以下是<code>Seata v1.6.1 mysql</code> 对应的<code>undo_log</code>创建语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- for AT mode you must to init this sql for you business database. the seata server not need it.</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `undo_log`<br>(<br>    `branch_id`     <span class="hljs-type">BIGINT</span>       <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;branch transaction id&#x27;</span>,<br>    `xid`           <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;global transaction id&#x27;</span>,<br>    `context`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;undo_log context,such as serialization&#x27;</span>,<br>    `rollback_info` LONGBLOB     <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;rollback info&#x27;</span>,<br>    `log_status`    <span class="hljs-type">INT</span>(<span class="hljs-number">11</span>)      <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;0:normal status,1:defense status&#x27;</span>,<br>    `log_created`   DATETIME(<span class="hljs-number">6</span>)  <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;create datetime&#x27;</span>,<br>    `log_modified`  DATETIME(<span class="hljs-number">6</span>)  <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;modify datetime&#x27;</span>,<br>    <span class="hljs-keyword">UNIQUE</span> KEY `ux_undo_log` (`xid`, `branch_id`)<br>) ENGINE <span class="hljs-operator">=</span> InnoDB<br>  AUTO_INCREMENT <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">DEFAULT</span> CHARSET <span class="hljs-operator">=</span> utf8mb4 COMMENT <span class="hljs-operator">=</span><span class="hljs-string">&#x27;AT transaction mode undo table&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="测试">测试</h4><p>TC即调用各个子服务的加了注解<code>@GlobalTransactional</code>的服务应用。</p><p>在对应的TC<code>Service</code>层添加注解<code>@GlobalTransactional</code>即可。</p><p>其他调用的服务有事务注解<code>@Transactional</code>即可。</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GlobalTransactional</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buyItem</span><span class="hljs-params">(Long userId, Long itemId, Integer itemCount)</span> &#123;<br>    <span class="hljs-comment">// 1.减库存</span><br><br>    itemClient.deductStock(itemId, itemCount);<br>    <span class="hljs-comment">// 2.生成订单</span><br>    <span class="hljs-type">BigDecimal</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> BigDecimal.valueOf(<span class="hljs-number">10.0</span>);<br>    <span class="hljs-type">BigDecimal</span> <span class="hljs-variable">totalPrice</span> <span class="hljs-operator">=</span> price.multiply(BigDecimal.valueOf(itemCount));<br>    orderClient.createOrder(userId, itemId, itemCount, price.doubleValue(), totalPrice.doubleValue());<br>    <span class="hljs-comment">// 3.扣款</span><br>    userClient.deductMoney(userId, totalPrice.doubleValue());<br>&#125;<br></code></pre></td></tr></table></figure><p>调用此服务时，会先调用商品服务，扣减商品库存，然后调用订单服务创建订单，最后调用用户服务扣减余额。在此期间，任何一个服务出现错误都之前的数据都将执行回滚操作。<code>Seata</code>通过事务锁确保一致性，而非数据库表锁。</p><h3 id="Seata-模式">Seata 模式</h3><h4 id="AT模式【默认】">AT模式【默认】</h4><p><a href="https://seata.apache.org/zh-cn/docs/dev/mode/at-mode">官方文档关于AT模式的介绍</a></p><p><strong>此模式基于二阶提交协议</strong>：</p><p>两个进程同时进入事务的情况下：</p><p>有两个全局事务TX1，TX2，都是对同一张表进行减库存操作。</p><p><strong>一阶段：</strong></p><p>TX1先开启本地事务，获取并创建原始数据快照，更新数据，获取全局锁，提交本地事务，释放本地锁。</p><p>TX2先开启本地事务，获取并创建原始数据快照，更新数据，等待获取TX1全局锁，获取全局锁，提交本地事务，释放本地锁。</p><p><strong>二阶段：</strong></p><p>TX1执行期间无异常，释放全局锁。TX2得到全局锁，提交本地事务。</p><p>TX1执行异常，重新获取本地锁，进行反向补偿的更新操作，实现分支的回滚。TX2还在等待全局锁，而且持有的本地锁未释放。TX1会进行分支回滚重试，知道TX2全局锁等待超时，释放本地锁后，执行回滚。</p><p><strong>AT 分支的工作过程</strong>：</p><p><strong>一阶段：</strong></p><p>过程：</p><p>1、解析 SQL：得到 SQL 的类型（UPDATE），表（product），条件（where name = ‘TXC’）等相关的信息。</p><p>2、查询前镜像：根据解析得到的条件信息，生成查询语句，定位数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id, name, since <span class="hljs-keyword">from</span> product <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;TXC&#x27;</span>;<br></code></pre></td></tr></table></figure><p>得到前镜像：</p><table><thead><tr><th>id</th><th>name</th><th>since</th></tr></thead><tbody><tr><td>1</td><td>TXC</td><td>2014</td></tr></tbody></table><p>3、执行业务 SQL：更新这条记录的 name 为 ‘GTS’。</p><p>4、查询后镜像：根据前镜像的结果，通过 <strong>主键</strong> 定位数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id, name, since <span class="hljs-keyword">from</span> product <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>得到后镜像：</p><table><thead><tr><th>id</th><th>name</th><th>since</th></tr></thead><tbody><tr><td>1</td><td>GTS</td><td>2014</td></tr></tbody></table><p>5、插入回滚日志：把前后镜像数据以及业务 SQL 相关的信息组成一条回滚日志记录，插入到 <code>UNDO_LOG</code> 表中。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;branchId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">641789253</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;undoItems&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;afterImage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;rows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;fields&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;id&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;name&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GTS&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;since&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2014&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;tableName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;product&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;beforeImage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;rows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;fields&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;id&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;name&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;TXC&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;since&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2014&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;tableName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;product&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;sqlType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UPDATE&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;xid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xid:xxx&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>6、提交前，向 TC 注册分支：申请 <code>product</code> 表中，主键值等于 1 的记录的 <strong>全局锁</strong> 。</p><p>7、本地事务提交：业务数据的更新和前面步骤中生成的 UNDO LOG 一并提交。</p><p>8、将本地事务提交的结果上报给 TC。</p><p><strong>二阶段-回滚</strong></p><p>1、收到 TC 的分支回滚请求，开启一个本地事务，执行如下操作。</p><p>2、通过 XID 和 Branch ID 查找到相应的 UNDO LOG 记录。</p><p>3、数据校验：拿 UNDO LOG 中的后镜与当前数据进行比较，如果有不同，说明数据被当前全局事务之外的动作做了修改。这种情况，需要根据配置策略来做处理，详细的说明在另外的文档中介绍。</p><p>4、根据 UNDO LOG 中的前镜像和业务 SQL 的相关信息生成并执行回滚的语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> product <span class="hljs-keyword">set</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;TXC&#x27;</span> <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>5、提交本地事务。并把本地事务的执行结果（即分支事务回滚的结果）上报给 TC。</p><p><strong>二阶段-提交</strong></p><ol><li>收到 TC 的分支提交请求，把请求放入一个异步任务的队列中，马上返回提交成功的结果给 TC。</li><li>异步任务阶段的分支提交请求将异步和批量地删除相应 UNDO LOG 记录。</li></ol><p><strong>示例：</strong></p><p><strong>1、正常提交成功的情况：</strong></p><p>业务服务<code>@GlobalTransactional</code>控制台输出：（<code>hmall-service</code>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">2025-03-21 16:06:35.184  INFO 23500 --- [io-8079-exec-10] i.seata.tm.api.DefaultGlobalTransaction  : Begin new global transaction [192.168.56.1:8091:2351510230618673165]<br>2025-03-21 16:06:35.730  INFO 23500 --- [io-8079-exec-10] i.seata.tm.api.DefaultGlobalTransaction  : Suspending current transaction, xid = 192.168.56.1:8091:2351510230618673165<br>2025-03-21 16:06:35.730  INFO 23500 --- [io-8079-exec-10] i.seata.tm.api.DefaultGlobalTransaction  : [192.168.56.1:8091:2351510230618673165] commit status: Committed<br></code></pre></td></tr></table></figure><p>库存服务控制台输出：(<code>item-service</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">2025-03-21 16:06:35.190 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.selectById    : ==&gt;  Preparing: SELECT id,name,stock,version,deleted FROM t_item WHERE id=? AND deleted=0<br>2025-03-21 16:06:35.191 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.selectById    : ==&gt; Parameters: 3(Long)<br>2025-03-21 16:06:35.194 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.selectById    : &lt;==      Total: 1<br>2025-03-21 16:06:35.195 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.updateById    : ==&gt;  Preparing: UPDATE t_item SET name=?, stock=?, version=? WHERE id=? AND version=? AND deleted=0<br>2025-03-21 16:06:35.196 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.updateById    : ==&gt; Parameters: 测试商品(String), 93(Integer), 8(Integer), 3(Long), 7(Integer)<br>2025-03-21 16:06:35.209 DEBUG 21832 --- [nio-8083-exec-7] c.h.item.mapper.ItemMapper.updateById    : &lt;==    Updates: 1<br>2025-03-21 16:06:35.209  INFO 21832 --- [nio-8083-exec-7] c.h.item.service.impl.ItemServiceImpl    : 扣减库存成功，商品id：3，商品库存：94, 订单商品数量：1,剩余库存：93<br>2025-03-21 16:06:35.218 DEBUG 21832 --- [nio-8083-exec-7] com.hmall.item.advice.AopAdvice          : ======================================<br>2025-03-21 16:06:35.218 DEBUG 21832 --- [nio-8083-exec-7] com.hmall.item.advice.AopAdvice          : 执行方法 &gt;&gt;&gt; deductStock<br>2025-03-21 16:06:35.218 DEBUG 21832 --- [nio-8083-exec-7] com.hmall.item.advice.AopAdvice          : 方法参数 &gt;&gt;&gt; [3, 1]<br>2025-03-21 16:06:35.218 DEBUG 21832 --- [nio-8083-exec-7] com.hmall.item.advice.AopAdvice          : 运行时间 &gt;&gt;&gt; 30ms<br>2025-03-21 16:06:35.218 DEBUG 21832 --- [nio-8083-exec-7] com.hmall.item.advice.AopAdvice          : ======================================<br>2025-03-21 16:06:36.472  INFO 21832 --- [h_RMROLE_1_5_24] i.s.c.r.p.c.RmBranchCommitProcessor      : rm client handle branch commit process:xid=192.168.56.1:8091:2351510230618673165,branchId=2351510230618673166,branchType=AT,resourceId=jdbc:mysql://localhost:3306/hmall,applicationData=&#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.472  INFO 21832 --- [h_RMROLE_1_5_24] io.seata.rm.AbstractRMHandler            : Branch committing: 192.168.56.1:8091:2351510230618673165 2351510230618673166 jdbc:mysql://localhost:3306/hmall &#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.472  INFO 21832 --- [h_RMROLE_1_5_24] io.seata.rm.AbstractRMHandler            : Branch commit result: PhaseTwo_Committed<br></code></pre></td></tr></table></figure><p>订单服务控制台输出：（<code>order-serivce</code>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">2025-03-21 16:06:35.226  INFO 15952 --- [nio-8082-exec-3] c.h.order.service.impl.OrderServiceImpl  : 创建订单成功: OrderDO(id=202503211606355, userId=1, itemId=3, itemCount=1, itemPrice=10.0, totalPrice=10.0, createTime=Fri Mar 21 16:06:35 CST 2025, version=null, deleted=null)<br>2025-03-21 16:06:36.475  INFO 15952 --- [h_RMROLE_1_2_24] i.s.c.r.p.c.RmBranchCommitProcessor      : rm client handle branch commit process:xid=192.168.56.1:8091:2351510230618673165,branchId=2351510230618673167,branchType=AT,resourceId=jdbc:mysql://localhost:3306/hmall,applicationData=&#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.476  INFO 15952 --- [h_RMROLE_1_2_24] io.seata.rm.AbstractRMHandler            : Branch committing: 192.168.56.1:8091:2351510230618673165 2351510230618673167 jdbc:mysql://localhost:3306/hmall &#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.476  INFO 15952 --- [h_RMROLE_1_2_24] io.seata.rm.AbstractRMHandler            : Branch commit result: PhaseTwo_Committed<br></code></pre></td></tr></table></figure><p>用户服务控制台输出：(<code>user-service</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">2025-03-21 16:06:35.299  INFO 17088 --- [nio-8081-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &#x27;dispatcherServlet&#x27;<br>2025-03-21 16:06:35.300  INFO 17088 --- [nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#x27;dispatcherServlet&#x27;<br>2025-03-21 16:06:35.302  INFO 17088 --- [nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms<br>2025-03-21 16:06:35.381 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.selectById    : ==&gt;  Preparing: SELECT id,username,password,money,birthday,gender,phone,email,status,create_time,update_time,delete_time,version,deleted,remark FROM t_user WHERE id=? AND deleted=0<br>2025-03-21 16:06:35.466 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.selectById    : ==&gt; Parameters: 1(Long)<br>2025-03-21 16:06:35.481 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.selectById    : &lt;==      Total: 1<br>2025-03-21 16:06:35.538 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.updateById    : ==&gt;  Preparing: UPDATE t_user SET username=?, password=?, money=?, birthday=?, gender=?, phone=?, status=?, create_time=?, version=? WHERE id=? AND version=? AND deleted=0<br>2025-03-21 16:06:35.577 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.updateById    : ==&gt; Parameters: peter(String), 123(String), 750.0(BigDecimal), 2025-03-12 17:07:12.0(Timestamp), 0(Integer), 13554321234(String), 0(Integer), 2025-03-12 17:07:33.0(Timestamp), 9(Integer), 1(Long), 8(Integer)<br>2025-03-21 16:06:35.651 DEBUG 17088 --- [nio-8081-exec-1] c.h.user.mapper.UserMapper.updateById    : &lt;==    Updates: 1<br>2025-03-21 16:06:35.651  INFO 17088 --- [nio-8081-exec-1] c.h.user.service.impl.UserServiceImpl    : 扣减余成功，用户id：1，用户余额：760.0，扣减金额：10.0，剩余余额：750.0<br>2025-03-21 16:06:35.714 DEBUG 17088 --- [nio-8081-exec-1] com.hmall.user.advice.AopAdvice          : ======================================<br>2025-03-21 16:06:35.714 DEBUG 17088 --- [nio-8081-exec-1] com.hmall.user.advice.AopAdvice          : 执行方法 &gt;&gt;&gt; deductMoney<br>2025-03-21 16:06:35.714 DEBUG 17088 --- [nio-8081-exec-1] com.hmall.user.advice.AopAdvice          : 方法参数 &gt;&gt;&gt; [1, 10.0]<br>2025-03-21 16:06:35.714 DEBUG 17088 --- [nio-8081-exec-1] com.hmall.user.advice.AopAdvice          : 运行时间 &gt;&gt;&gt; 376ms<br>2025-03-21 16:06:35.714 DEBUG 17088 --- [nio-8081-exec-1] com.hmall.user.advice.AopAdvice          : ======================================<br>2025-03-21 16:06:36.481  INFO 17088 --- [h_RMROLE_1_1_24] i.s.c.r.p.c.RmBranchCommitProcessor      : rm client handle branch commit process:xid=192.168.56.1:8091:2351510230618673165,branchId=2351510230618673168,branchType=AT,resourceId=jdbc:mysql://localhost:3306/hmall,applicationData=&#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.483  INFO 17088 --- [h_RMROLE_1_1_24] io.seata.rm.AbstractRMHandler            : Branch committing: 192.168.56.1:8091:2351510230618673165 2351510230618673168 jdbc:mysql://localhost:3306/hmall &#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:06:36.484  INFO 17088 --- [h_RMROLE_1_1_24] io.seata.rm.AbstractRMHandler            : Branch commit result: PhaseTwo_Committed<br></code></pre></td></tr></table></figure><p><strong>2、其中一个服务异常，其他分支执行回滚的情况：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">2025-03-21 16:14:48.432  INFO 22796 --- [nio-8083-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &#x27;dispatcherServlet&#x27;<br>2025-03-21 16:14:48.433  INFO 22796 --- [nio-8083-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#x27;dispatcherServlet&#x27;<br>2025-03-21 16:14:48.434  INFO 22796 --- [nio-8083-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms<br>2025-03-21 16:14:48.539 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.selectById    : ==&gt;  Preparing: SELECT id,name,stock,version,deleted FROM t_item WHERE id=? AND deleted=0<br>2025-03-21 16:14:48.656 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.selectById    : ==&gt; Parameters: 3(Long)<br>2025-03-21 16:14:48.671 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.selectById    : &lt;==      Total: 1<br>2025-03-21 16:14:48.731 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.updateById    : ==&gt;  Preparing: UPDATE t_item SET name=?, stock=?, version=? WHERE id=? AND version=? AND deleted=0<br>2025-03-21 16:14:48.752 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.updateById    : ==&gt; Parameters: 测试商品(String), 92(Integer), 9(Integer), 3(Long), 8(Integer)<br>2025-03-21 16:14:48.839 DEBUG 22796 --- [nio-8083-exec-1] c.h.item.mapper.ItemMapper.updateById    : &lt;==    Updates: 1<br>2025-03-21 16:14:48.839  INFO 22796 --- [nio-8083-exec-1] c.h.item.service.impl.ItemServiceImpl    : 扣减库存成功，商品id：3，商品库存：93, 订单商品数量：1,剩余库存：92<br>2025-03-21 16:14:48.914 DEBUG 22796 --- [nio-8083-exec-1] com.hmall.item.advice.AopAdvice          : ======================================<br>2025-03-21 16:14:48.915 DEBUG 22796 --- [nio-8083-exec-1] com.hmall.item.advice.AopAdvice          : 执行方法 &gt;&gt;&gt; deductStock<br>2025-03-21 16:14:48.915 DEBUG 22796 --- [nio-8083-exec-1] com.hmall.item.advice.AopAdvice          : 方法参数 &gt;&gt;&gt; [3, 1]<br>2025-03-21 16:14:48.915 DEBUG 22796 --- [nio-8083-exec-1] com.hmall.item.advice.AopAdvice          : 运行时间 &gt;&gt;&gt; 436ms<br>2025-03-21 16:14:48.915 DEBUG 22796 --- [nio-8083-exec-1] com.hmall.item.advice.AopAdvice          : ======================================<br>2025-03-21 16:15:49.558  INFO 22796 --- [h_RMROLE_1_1_24] i.s.c.r.p.c.RmBranchRollbackProcessor    : rm handle branch rollback process:xid=192.168.56.1:8091:2351510230618673169,branchId=2351510230618673170,branchType=AT,resourceId=jdbc:mysql://localhost:3306/hmall,applicationData=&#123;&quot;autoCommit&quot;:false&#125;<br>2025-03-21 16:15:49.561  INFO 22796 --- [h_RMROLE_1_1_24] io.seata.rm.AbstractRMHandler            : Branch Rollbacking: 192.168.56.1:8091:2351510230618673169 2351510230618673170 jdbc:mysql://localhost:3306/hmall<br>2025-03-21 16:15:49.613  INFO 22796 --- [h_RMROLE_1_1_24] i.s.r.d.undo.AbstractUndoLogManager      : xid 192.168.56.1:8091:2351510230618673169 branch 2351510230618673170, undo_log deleted with GlobalFinished<br>2025-03-21 16:15:49.616  INFO 22796 --- [h_RMROLE_1_1_24] io.seata.rm.AbstractRMHandler            : Branch Rollbacked result: PhaseTwo_Rollbacked<br></code></pre></td></tr></table></figure><h4 id="XA模式">XA模式</h4><p><a href="https://seata.apache.org/zh-cn/docs/dev/mode/xa-mode">官方文档关于XA模式的介绍</a></p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category>
      
      
      <category domain="https://superlovelace.top/tags/Seata/">Seata</category>
      
      
      <comments>https://superlovelace.top/2025/03/21/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1Seata/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>代码覆盖率</title>
      <link>https://superlovelace.top/2025/03/14/%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87/</link>
      <guid>https://superlovelace.top/2025/03/14/%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87/</guid>
      <pubDate>Fri, 14 Mar 2025 15:39:36 GMT</pubDate>
      
      <description>通过配置测试插件，获取项目代码覆盖率。包含基本配置和使用示例。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="代码覆盖率">代码覆盖率</h2><h3 id="一、Maven依赖">一、Maven依赖</h3><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">finalName</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- maven基础编译插件，默认启用，可不显式配置 --&gt;</span><br>        <span class="hljs-comment">&lt;!-- 首次打包，不包含依赖包和tomcat服务器，此jar包不可直接运行 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">encoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">encoding</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- spring-boot-maven编译插件 --&gt;</span><br>        <span class="hljs-comment">&lt;!-- 二次重新打包，加入依赖包并嵌入tomcat服务后重新打包成可执行的jar包  --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.18<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>$&#123;main.class&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">skip</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skip</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>repackage<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>repackage<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- Maven测试生命周期运行单元测试插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.0-M5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- jacoco代码覆盖率插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.jacoco<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jacoco-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.8.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 包含的测试类 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*Test.java<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 排除的测试类 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">excludes</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>**/*IntegrationTest.java<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">excludes</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 并行测试 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">parallel</span>&gt;</span>methods<span class="hljs-tag">&lt;/<span class="hljs-name">parallel</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">threadCount</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">threadCount</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 忽略测试失败 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">testFailureIgnore</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">testFailureIgnore</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>prepare-agent<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>report<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>report<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="二、测试类型">二、测试类型</h3><h4 id="2-1、单元测试">2.1、单元测试</h4><ul><li><strong>适用场景</strong>：测试单个类或方法的逻辑。</li><li><strong>工具</strong>：JUnit、TestNG 等。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testAdd</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">Calculator</span> <span class="hljs-variable">calculator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Calculator</span>();<br>    assertEquals(<span class="hljs-number">5</span>, calculator.add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-2、集成测试">2.2、集成测试</h4><ul><li><strong>适用场景</strong>：测试多个模块或组件的交互，例如数据库访问、REST API 调用等。</li><li><strong>工具</strong>：Spring Boot Test、Testcontainers 等。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.user.service.impl;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br><span class="hljs-keyword">import</span> com.hmall.user.UserApplication;<br><span class="hljs-keyword">import</span> com.hmall.user.service.UserService;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br><span class="hljs-keyword">import</span> org.springframework.boot.test.context.SpringBootTest;<br><span class="hljs-keyword">import</span> org.springframework.test.context.ActiveProfiles;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> org.junit.jupiter.api.Assertions.*;<br><br><span class="hljs-meta">@ActiveProfiles(&quot;dev&quot;)</span><br><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImplTest</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">getUserById</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 非空判断</span><br>        assertNotNull(userService.getUserById(<span class="hljs-number">1L</span>));<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">listUsers</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 非空判断</span><br>        assertNotNull(userService.listUsers(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-3、端到端测试">2.3、端到端测试</h4><ul><li><strong>适用场景</strong>：测试整个系统的功能，模拟用户操作。</li><li><strong>工具</strong>：Selenium、Cypress 等。</li></ul><p>若用<code>Selenium</code>，则需要引入对应的依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Selenium Java 客户端库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.seleniumhq.selenium<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>selenium-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.10.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span> <span class="hljs-comment">&lt;!-- 使用最新版本 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- WebDriverManager（可选，用于自动管理浏览器驱动） --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.github.bonigarcia<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>webdrivermanager<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.5.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span> <span class="hljs-comment">&lt;!-- 使用最新版本 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>此种就无法自动生成测试类了，只能自行创建。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hmall.user;<br><br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Disabled;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br><span class="hljs-keyword">import</span> org.openqa.selenium.By;<br><span class="hljs-keyword">import</span> org.openqa.selenium.WebDriver;<br><span class="hljs-keyword">import</span> org.openqa.selenium.chrome.ChromeDriver;<br><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> org.junit.jupiter.api.Assertions.assertTrue;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 端到端测试</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ClientToClientTest</span> &#123;<br>    <br>    <span class="hljs-meta">@Disabled(&quot;示例程序，无需执行测试！&quot;)</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testLogin</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">WebDriver</span> <span class="hljs-variable">driver</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChromeDriver</span>();<br>        driver.get(<span class="hljs-string">&quot;https://example.com/login&quot;</span>);<br>        driver.findElement(By.id(<span class="hljs-string">&quot;username&quot;</span>)).sendKeys(<span class="hljs-string">&quot;user&quot;</span>);<br>        driver.findElement(By.id(<span class="hljs-string">&quot;password&quot;</span>)).sendKeys(<span class="hljs-string">&quot;pass&quot;</span>);<br>        driver.findElement(By.id(<span class="hljs-string">&quot;submit&quot;</span>)).click();<br>        <span class="hljs-comment">// 判断登录成功后跳转的页面是否包含预期的内容（仪表盘）</span><br>        assertTrue(driver.getCurrentUrl().contains(<span class="hljs-string">&quot;dashboard&quot;</span>));<br>        driver.quit();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="三、执行测试">三、执行测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs shell">[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ user-service ---<br>[INFO] <br>[INFO] -------------------------------------------------------<br>[INFO]  T E S T S<br>[INFO] -------------------------------------------------------<br>[INFO] Running com.hmall.user.service.impl.UserServiceImplTest<br>22:17:08.639 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]<br>22:17:08.663 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]<br>22:17:08.730 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.hmall.user.service.impl.UserServiceImplTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]<br>22:17:08.746 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.hmall.user.service.impl.UserServiceImplTest], using SpringBootContextLoader<br>22:17:08.755 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.hmall.user.service.impl.UserServiceImplTest]: class path resource [com/hmall/user/service/impl/UserServiceImplTest-context.xml] does not exist<br>22:17:08.756 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.hmall.user.service.impl.UserServiceImplTest]: class path resource [com/hmall/user/service/impl/UserServiceImplTestContext.groovy] does not exist<br>22:17:08.757 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.hmall.user.service.impl.UserServiceImplTest]: no resource found for suffixes &#123;-context.xml, Context.groovy&#125;.<br>22:17:08.758 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.hmall.user.service.impl.UserServiceImplTest]: UserServiceImplTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.<br>22:17:08.942 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\home\hmall\user-service\target\classes\com\hmall\user\UserApplication.class]<br>22:17:08.944 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.hmall.user.UserApplication for test class com.hmall.user.service.impl.UserServiceImplTest<br>22:17:09.087 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.hmall.user.service.impl.UserServiceImplTest]: using defaults.<br>22:17:09.088 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]<br>22:17:09.117 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4946485c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ae958b0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7c682e26, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ff074a0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@340fc1aa, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34a33343, org.springframework.test.context.transaction.TransactionalTestExecutionListener@98722ef, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@459e120b, org.springframework.test.context.event.EventPublishingTestExecutionListener@fd69983, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@22429a11, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@126254ec, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@275902e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c788d08, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2adc1e84, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2a99fa07]<br>22:17:09.123 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7fb82f73 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2f166d61 testClass = UserServiceImplTest, locations = &#x27;&#123;&#125;&#x27;, classes = &#x27;&#123;class com.hmall.user.UserApplication&#125;&#x27;, contextInitializerClasses = &#x27;[]&#x27;, activeProfiles = &#x27;&#123;dev&#125;&#x27;, propertySourceLocations = &#x27;&#123;&#125;&#x27;, propertySourceProperties = &#x27;&#123;org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true&#125;&#x27;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@294aba23, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@46e3559f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@74024f3, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@9ab310b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@61874b9d, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4763c727], resourceBasePath = &#x27;src/main/webapp&#x27;, contextLoader = &#x27;org.springframework.boot.test.context.SpringBootContextLoader&#x27;, parent = [null]], attributes = map[&#x27;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&#x27; -&gt; false]], class annotated with @DirtiesContext [false] with mode [null].<br>22:17:09.142 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7fb82f73 testClass = UserServiceImplTest, testInstance = com.hmall.user.service.impl.UserServiceImplTest@778197c0, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2f166d61 testClass = UserServiceImplTest, locations = &#x27;&#123;&#125;&#x27;, classes = &#x27;&#123;class com.hmall.user.UserApplication&#125;&#x27;, contextInitializerClasses = &#x27;[]&#x27;, activeProfiles = &#x27;&#123;dev&#125;&#x27;, propertySourceLocations = &#x27;&#123;&#125;&#x27;, propertySourceProperties = &#x27;&#123;org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true&#125;&#x27;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@294aba23, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@46e3559f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@74024f3, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@9ab310b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@61874b9d, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4763c727], resourceBasePath = &#x27;src/main/webapp&#x27;, contextLoader = &#x27;org.springframework.boot.test.context.SpringBootContextLoader&#x27;, parent = [null]], attributes = map[&#x27;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&#x27; -&gt; false, &#x27;org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents&#x27; -&gt; false]]].<br>22:17:09.221 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running<br>2025-03-14 22:17:10.982  INFO 5408 --- [           main] c.a.n.client.env.SearchableProperties    : properties search order:PROPERTIES-&gt;JVM-&gt;ENV-&gt;DEFAULT_SETTING<br>2025-03-14 22:17:11.879  INFO 5408 --- [           main] c.a.n.p.a.s.c.ClientAuthPluginManager    : [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.<br>2025-03-14 22:17:11.879  INFO 5408 --- [           main] c.a.n.p.a.s.c.ClientAuthPluginManager    : [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.<br><br>  .   ____          _            __ _ _<br> /\\ / ___&#x27;_ __ _ _(_)_ __  __ _ \ \ \ \<br>( ( )\___ | &#x27;_ | &#x27;_| | &#x27;_ \/ _` | \ \ \ \<br> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )<br>  &#x27;  |____| .__|_| |_|_| |_\__, | / / / /<br> =========|_|==============|___/=/_/_/_/<br> :: Spring Boot ::               (v2.7.18)<br><br>2025-03-14 22:17:15.324  WARN 5408 --- [           main] c.a.c.n.c.NacosPropertySourceBuilder     : Ignore the empty nacos configuration and get it based on dataId[user-service] &amp; group[DEFAULT_GROUP]<br>2025-03-14 22:17:15.333  WARN 5408 --- [           main] c.a.c.n.c.NacosPropertySourceBuilder     : Ignore the empty nacos configuration and get it based on dataId[user-service.properties] &amp; group[DEFAULT_GROUP]<br>2025-03-14 22:17:15.340  WARN 5408 --- [           main] c.a.c.n.c.NacosPropertySourceBuilder     : Ignore the empty nacos configuration and get it based on dataId[user-service-dev.properties] &amp; group[DEFAULT_GROUP]<br>2025-03-14 22:17:15.341  INFO 5408 --- [           main] b.c.PropertySourceBootstrapConfiguration : Located property source: [BootstrapPropertySource &#123;name=&#x27;bootstrapProperties-user-service-dev.properties,DEFAULT_GROUP&#x27;&#125;, BootstrapPropertySource &#123;name=&#x27;bootstrapProperties-user-service.properties,DEFAULT_GROUP&#x27;&#125;, BootstrapPropertySource &#123;name=&#x27;bootstrapProperties-user-service,DEFAULT_GROUP&#x27;&#125;]<br>2025-03-14 22:17:15.380  INFO 5408 --- [           main] c.h.u.service.impl.UserServiceImplTest   : The following 1 profile is active: &quot;dev&quot;<br>2025-03-14 22:17:16.133  INFO 5408 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode<br>2025-03-14 22:17:16.137  INFO 5408 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.<br>2025-03-14 22:17:16.173  INFO 5408 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.<br>2025-03-14 22:17:16.489  INFO 5408 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=02dfcb6a-428d-35d6-8d28-7cff4d04a8d4<br>2025-03-14 22:17:17.644  INFO 5408 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8081 (http)<br>2025-03-14 22:17:17.659  INFO 5408 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]<br>2025-03-14 22:17:17.660  INFO 5408 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.83]<br>2025-03-14 22:17:17.856  INFO 5408 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext<br>2025-03-14 22:17:17.856  INFO 5408 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2467 ms<br>2025-03-14 22:17:18.240  INFO 5408 --- [           main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource<br>2025-03-14 22:17:19.217  INFO 5408 --- [           main] com.alibaba.druid.pool.DruidDataSource   : &#123;dataSource-1&#125; inited<br> _ _   |_  _ _|_. ___ _ |    _ <br>| | |\/|_)(_| | |_\  |_)||_|_\ <br>     /               |         <br>                        3.4.3 <br>2025-03-14 22:17:22.943  INFO 5408 --- [           main] o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname<br>2025-03-14 22:17:23.467 DEBUG 5408 --- [           main] o.s.d.r.l.RedisMessageListenerContainer  : Starting RedisMessageListenerContainer...<br>2025-03-14 22:17:23.468 DEBUG 5408 --- [           main] o.s.d.r.l.RedisMessageListenerContainer  : Postpone listening for Redis messages until actual listeners are added.<br>2025-03-14 22:17:24.957  INFO 5408 --- [           main] o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname<br>2025-03-14 22:17:25.305  INFO 5408 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8081 (http) with context path &#x27;&#x27;<br>2025-03-14 22:17:25.328  INFO 5408 --- [           main] c.a.n.p.a.s.c.ClientAuthPluginManager    : [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.<br>2025-03-14 22:17:25.328  INFO 5408 --- [           main] c.a.n.p.a.s.c.ClientAuthPluginManager    : [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.<br>2025-03-14 22:17:25.477  INFO 5408 --- [           main] c.a.c.n.registry.NacosServiceRegistry    : nacos registry, DEFAULT_GROUP user-service 192.168.56.1:8081 register finished<br>2025-03-14 22:17:26.784  INFO 5408 --- [           main] o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname<br>2025-03-14 22:17:26.794  INFO 5408 --- [           main] c.h.u.service.impl.UserServiceImplTest   : Started UserServiceImplTest in 17.593 seconds (JVM running for 19.159)<br>2025-03-14 22:17:26.816  INFO 5408 --- [           main] c.a.c.n.refresh.NacosContextRefresher    : [Nacos Config] Listening config: dataId=user-service.properties, group=DEFAULT_GROUP<br>2025-03-14 22:17:26.817  INFO 5408 --- [           main] c.a.c.n.refresh.NacosContextRefresher    : [Nacos Config] Listening config: dataId=user-service, group=DEFAULT_GROUP<br>2025-03-14 22:17:26.818  INFO 5408 --- [           main] c.a.c.n.refresh.NacosContextRefresher    : [Nacos Config] Listening config: dataId=user-service-dev.properties, group=DEFAULT_GROUP<br>2025-03-14 22:17:28.212 DEBUG 5408 --- [           main] c.h.u.m.UserMapper.listUsers_mpCount     : ==&gt;  Preparing: SELECT COUNT(*) FROM t_user<br>2025-03-14 22:17:28.461 DEBUG 5408 --- [           main] c.h.u.m.UserMapper.listUsers_mpCount     : ==&gt; Parameters: <br>2025-03-14 22:17:28.510 DEBUG 5408 --- [           main] c.h.u.m.UserMapper.listUsers_mpCount     : &lt;==      Total: 1<br>2025-03-14 22:17:28.518 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.listUsers     : ==&gt;  Preparing: select id,username,password,birthday,gender,phone, email,status,create_time,update_time,delete_time, version,deleted,remark from t_user LIMIT ?<br>2025-03-14 22:17:28.523 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.listUsers     : ==&gt; Parameters: 10(Long)<br>2025-03-14 22:17:28.529 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.listUsers     : &lt;==      Total: 1<br>2025-03-14 22:17:28.575  INFO 5408 --- [           main] c.h.user.service.impl.UserServiceImpl    : 查询用户信息：1<br>2025-03-14 22:17:28.576 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.getUserById   : ==&gt;  Preparing: select id,username,password,birthday,gender,phone, email,status,create_time,update_time,delete_time, version,deleted,remark from t_user where id = ?<br>2025-03-14 22:17:28.616 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.getUserById   : ==&gt; Parameters: 1(Long)<br>2025-03-14 22:17:28.618 DEBUG 5408 --- [           main] c.h.user.mapper.UserMapper.getUserById   : &lt;==      Total: 1<br>[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.084 s - in com.hmall.user.service.impl.UserServiceImplTest<br>[INFO] <br>[INFO] Results:<br>[INFO] <br>[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0<br>[INFO] <br>[INFO] <br>[INFO] --- jacoco-maven-plugin:0.8.7:report (report) @ user-service ---<br>[INFO] Loading execution data file D:\home\hmall\user-service\target\jacoco.exec<br>[INFO] Analyzed bundle &#x27;user-service&#x27; with 22 classes<br>[INFO] ------------------------------------------------------------------------<br>[INFO] BUILD SUCCESS<br>[INFO] ------------------------------------------------------------------------<br>[INFO] Total time:  36.816 s<br>[INFO] Finished at: 2025-03-14T22:17:30+08:00<br>[INFO] ------------------------------------------------------------------------<br><br>进程已结束，退出代码为 0<br></code></pre></td></tr></table></figure><h3 id="四、测试报告">四、测试报告</h3><p>此目录下有<code>surefire</code>生成的测试报告：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">\target\surefire-reports\<br></code></pre></td></tr></table></figure><p>此目录下生成了代码覆盖率报告（文件为<code>index.html</code>）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">\target\site\jacoco\<br></code></pre></td></tr></table></figure><h3 id="五、代码覆盖率报告">五、代码覆盖率报告</h3><p><code>JaCoCo</code> 报告通常以 HTML 格式呈现，各列对应的含义：</p><ol><li><strong>Element（元素）</strong></li></ol><ul><li><strong>含义</strong>：表示代码的层级或类型，例如类、方法、包等。</li><li><strong>示例：</strong><ul><li><code>com.example.Calculator</code>（类）</li><li><code>com.example.Calculator#add</code>（方法）</li><li><code>com.example</code>（包）</li></ul></li></ul><ol start="2"><li><strong>Missed Instructions（未覆盖的指令）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>字节码指令</strong> 数量。</li><li><strong>说明</strong>：JaCoCo 在字节码级别统计覆盖率，每条 Java 代码可能对应多条字节码指令。</li><li><strong>目标</strong>：尽量减少未覆盖的指令数。</li></ul><ol start="3"><li><strong>Cov. (Instructions Coverage)（指令覆盖率）</strong></li></ol><ul><li><p><strong>含义</strong>：已执行的字节码指令占总指令数的百分比。</p></li><li><p><strong>公式：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">指令覆盖率 = <span class="hljs-comment">(总指令数 - 未覆盖的指令数)</span> / 总指令数 * <span class="hljs-number">100</span><span class="hljs-meta">%</span><br></code></pre></td></tr></table></figure></li><li><p><strong>目标</strong>：尽量提高指令覆盖率。</p></li></ul><ol start="4"><li><strong>Missed Branches（未覆盖的分支）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>分支</strong> 数量。</li><li><strong>说明</strong>：分支指 <code>if</code>、<code>switch</code>、<code>for</code>、<code>while</code> 等条件语句的分支路径。</li><li><strong>目标</strong>：尽量减少未覆盖的分支数。</li></ul><ol start="5"><li><strong>Cov. (Branches Coverage)（分支覆盖率）</strong></li></ol><ul><li><p><strong>含义</strong>：已执行的分支占总分支数的百分比。</p></li><li><p><strong>公式：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">分支覆盖率 = <span class="hljs-comment">(总分支数 - 未覆盖的分支数)</span> / 总分支数 * <span class="hljs-number">100</span><span class="hljs-meta">%</span><br></code></pre></td></tr></table></figure></li><li><p><strong>目标</strong>：尽量提高分支覆盖率。</p></li></ul><ol start="6"><li><strong>Missed Cxty（未覆盖的圈复杂度）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>圈复杂度</strong> 数量。</li><li><strong>说明</strong>：圈复杂度（Cyclomatic Complexity）是衡量代码复杂度的指标，表示代码中独立路径的数量。</li><li><strong>目标</strong>：尽量减少未覆盖的圈复杂度。</li></ul><ol start="7"><li><strong>Cxty (Cyclomatic Complexity)（圈复杂度）</strong></li></ol><ul><li><strong>含义</strong>：代码的圈复杂度值。</li><li><strong>说明</strong>：圈复杂度越高，代码越复杂，越难维护。</li><li><strong>目标</strong>：尽量降低圈复杂度。</li></ul><ol start="8"><li><strong>Missed Lines（未覆盖的代码行）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>代码行</strong> 数量。</li><li><strong>说明</strong>：JaCoCo 统计每一行代码是否被执行。</li><li><strong>目标</strong>：尽量减少未覆盖的代码行数。</li></ul><ol start="9"><li><strong>Cov. (Lines Coverage)（行覆盖率）</strong></li></ol><ul><li><p><strong>含义</strong>：已执行的代码行占总代码行数的百分比。</p></li><li><p><strong>公式：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">行覆盖率 = <span class="hljs-comment">(总代码行数 - 未覆盖的代码行数)</span> / 总代码行数 * <span class="hljs-number">100</span><span class="hljs-meta">%</span><br></code></pre></td></tr></table></figure></li><li><p><strong>目标</strong>：尽量提高行覆盖率。</p></li></ul><ol start="10"><li><strong>Missed Methods（未覆盖的方法）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>方法</strong> 数量。</li><li><strong>说明</strong>：JaCoCo 统计每个方法是否被调用。</li><li><strong>目标</strong>：尽量减少未覆盖的方法数。</li></ul><ol start="11"><li><strong>Cov. (Methods Coverage)（方法覆盖率）</strong></li></ol><ul><li><p><strong>含义</strong>：已执行的方法占方法总数的百分比。</p></li><li><p><strong>公式：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">方法覆盖率 = <span class="hljs-comment">(总方法数 - 未覆盖的方法数)</span> / 总方法数 * <span class="hljs-number">100</span><span class="hljs-meta">%</span><br></code></pre></td></tr></table></figure></li><li><p><strong>目标</strong>：尽量提高方法覆盖率。</p></li></ul><ol start="12"><li><strong>Missed Classes（未覆盖的类）</strong></li></ol><ul><li><strong>含义</strong>：未被执行到的 <strong>类</strong> 数量。</li><li><strong>说明</strong>：JaCoCo 统计每个类是否被调用。</li><li><strong>目标</strong>：尽量减少未覆盖的类数。</li></ul><ol start="13"><li><strong>Cov. (Classes Coverage)（类覆盖率）</strong></li></ol><ul><li><p><strong>含义</strong>：已执行的类占类总数的百分比。</p></li><li><p><strong>公式：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">类覆盖率 = <span class="hljs-comment">(总类数 - 未覆盖的类数)</span> / 总类数 * <span class="hljs-number">100</span><span class="hljs-meta">%</span><br></code></pre></td></tr></table></figure></li><li><p><strong>目标</strong>：尽量提高类覆盖率。</p></li></ul><hr><p><strong>表格示例：</strong></p><table><thead><tr><th>Element</th><th>Missed Instructions</th><th>Cov.</th><th>Missed Branches</th><th>Cov.</th><th>Missed Cxty</th><th>Cxty</th><th>Missed Lines</th><th>Cov.</th><th>Missed Methods</th><th>Cov.</th><th>Missed Classes</th><th>Cov.</th></tr></thead><tbody><tr><td><code>com.example.Calculator</code></td><td>5</td><td>90%</td><td>2</td><td>80%</td><td>1</td><td>3</td><td>3</td><td>85%</td><td>1</td><td>75%</td><td>0</td><td>100%</td></tr><tr><td><code>com.example.Main</code></td><td>10</td><td>70%</td><td>3</td><td>70%</td><td>2</td><td>4</td><td>5</td><td>60%</td><td>2</td><td>50%</td><td>0</td><td>100%</td></tr></tbody></table><p><strong>解读</strong>：</p><ul><li><code>com.example.Calculator</code>：<ul><li>指令覆盖率为 90%，未覆盖 5 条指令。</li><li>分支覆盖率为 80%，未覆盖 2 个分支。</li><li>行覆盖率为 85%，未覆盖 3 行代码。</li><li>方法覆盖率为 75%，未覆盖 1 个方法。</li><li>类覆盖率为 100%，所有类都被覆盖。</li></ul></li><li><code>com.example.Main</code>：<ul><li>指令覆盖率为 70%，未覆盖 10 条指令。</li><li>分支覆盖率为 70%，未覆盖 3 个分支。</li><li>行覆盖率为 60%，未覆盖 5 行代码。</li><li>方法覆盖率为 50%，未覆盖 2 个方法。</li><li>类覆盖率为 100%，所有类都被覆盖。</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/">软件测试</category>
      
      
      <category domain="https://superlovelace.top/tags/junit/">junit</category>
      
      <category domain="https://superlovelace.top/tags/maven/">maven</category>
      
      
      <comments>https://superlovelace.top/2025/03/14/%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Maven BUILD FAILURE</title>
      <link>https://superlovelace.top/2025/03/11/Maven%E6%9E%84%E5%BB%BA%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</link>
      <guid>https://superlovelace.top/2025/03/11/Maven%E6%9E%84%E5%BB%BA%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Tue, 11 Mar 2025 13:49:33 GMT</pubDate>
      
      <description>【ERROR】 Failed to execute goal on project</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Maven-BUILD-FAILURE">Maven BUILD FAILURE</h2><h3 id="详细异常：">详细异常：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[INFO] ------------------------&lt; com.heima:hmall-api &gt;-------------------------<br>[INFO] Building hmall-api 1.0.0<br>[INFO] --------------------------------[ jar ]---------------------------------<br>Downloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/com/heima/hmall/1.0.0/hmall-1.0.0.pom<br>[INFO] ------------------------------------------------------------------------<br>[INFO] BUILD FAILURE<br>[INFO] ------------------------------------------------------------------------<br>[INFO] Total time:  1.563 s<br>[INFO] Finished at: 2025-03-11T21:47:49+08:00<br>[INFO] ------------------------------------------------------------------------<br>[ERROR] Failed to execute goal on project hmall-api: Could not resolve dependencies for project com.heima:hmall-api:jar:1.0.0: Failed to collect dependencies at com.heima:hmall-common:jar:1.0.0: Failed to read artifact descriptor for com.heima:hmall-common:jar:1.0.0: Could not find artifact com.heima:hmall:pom:1.0.0 in alimaven (http://maven.aliyun.com/nexus/content/groups/public/) -&gt; [Help 1]<br>[ERROR] <br>[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.<br>[ERROR] Re-run Maven using the -X switch to enable full debug logging.<br>[ERROR] <br>[ERROR] For more information about the errors and possible solutions, please read the following articles:<br>[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException<br><br>进程已结束，退出代码为 1<br></code></pre></td></tr></table></figure><h3 id="原因总结：">原因总结：</h3><h4 id="问题历程：">问题历程：</h4><p>我是先安装了<code>common</code>模块到本地<code>Maven</code>仓库，这个模块是直接在子模块上构建并安装的。</p><p><code>api</code>模块引用了<code>common</code>模块，但是再次构建<code>api</code>子模块是发生此异常。</p><h4 id="异常分析：">异常分析：</h4><p><code>Maven</code>需要先找到项目父模块，然后通过父模块找到子模块安装的信息。所以需要先在父模块进行一次<code>install</code>，让<code>Maven</code>仓库有此项目的父模块的信息，这样才能通过父模块找到子模块。</p><h3 id="解决方法：">解决方法：</h3><p>删除本地仓库已安装的数据，重新在父模块上执行<code>install</code>即可成功解决！之后再从子模块上构建也不会出现此类问题了。</p><p><strong>成功安装示例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">[INFO] --- maven-install-plugin:2.4:install (default-install) @ hmall-api ---<br>[INFO] Installing D:\home\hmall\hmall-api\target\hmall-api.jar to D:\repository\com\heima\hmall-api\1.0.0\hmall-api-1.0.0.jar<br>[INFO] Installing D:\home\hmall\hmall-api\pom.xml to D:\repository\com\heima\hmall-api\1.0.0\hmall-api-1.0.0.pom<br>[INFO] ------------------------------------------------------------------------<br>[INFO] Reactor Summary for hmall 1.0.0:<br>[INFO] <br>[INFO] hmall .............................................. SUCCESS [  0.592 s]<br>[INFO] hmall-common ....................................... SUCCESS [  3.135 s]<br>[INFO] hmall-api .......................................... SUCCESS [  1.446 s]<br>[INFO] ------------------------------------------------------------------------<br>[INFO] BUILD SUCCESS<br>[INFO] ------------------------------------------------------------------------<br>[INFO] Total time:  5.498 s<br>[INFO] Finished at: 2025-03-11T22:05:38+08:00<br>[INFO] ------------------------------------------------------------------------<br></code></pre></td></tr></table></figure><hr><p><strong>注：为防止安装了未完善的子模块，可以在父模块先把对应子模块的信息注释掉。</strong></p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/">问题解决</category>
      
      
      <category domain="https://superlovelace.top/tags/Maven/">Maven</category>
      
      
      <comments>https://superlovelace.top/2025/03/11/Maven%E6%9E%84%E5%BB%BA%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库分区</title>
      <link>https://superlovelace.top/2025/03/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%8C%BA/</link>
      <guid>https://superlovelace.top/2025/03/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%8C%BA/</guid>
      <pubDate>Fri, 28 Feb 2025 17:30:35 GMT</pubDate>
      
      <description>以mysql为例，介绍数据库分区。包括概念、基本操作和注意事项等。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="数据库分区">数据库分区</h2><p>在 <code>MySQL</code> 中，<strong>分区表</strong>是一种将表数据按照某种规则划分为多个独立部分的技术。分区可以显著提高查询性能、简化数据管理并优化存储效率。</p><blockquote><p>分区不改变原表数据，仍然是一张表，不同与分库分表。</p></blockquote><h3 id="一、分区表的基本概念">一、分区表的基本概念</h3><ul><li><strong>分区（Partition）</strong>：将表数据划分为多个逻辑部分，每个分区可以单独管理和存储。</li><li><strong>分区键（Partition Key）</strong>：用于决定数据如何分区的列或表达式。</li><li><strong>分区类型</strong>：<code>MySQL</code> 支持多种分区类型，包括 <strong>范围分区（RANGE）</strong>、<strong>列表分区（LIST）</strong>、<strong>哈希分区（HASH）</strong> 和 <strong>键分区（KEY）</strong>。</li></ul><h3 id="二、创建分区表的语法">二、创建分区表的语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name (<br>    column1 datatype,<br>    column2 datatype,<br>    ...<br>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> partition_type (partition_key) (<br>    <span class="hljs-keyword">PARTITION</span> partition_name1 <span class="hljs-keyword">VALUES</span> LESS THAN (value1),<br>    <span class="hljs-keyword">PARTITION</span> partition_name2 <span class="hljs-keyword">VALUES</span> LESS THAN (value2),<br>    ...<br>);<br></code></pre></td></tr></table></figure><h3 id="三、分区类型及示例">三、分区类型及示例</h3><h4 id="1-范围分区（RANGE-Partitioning）">(1) 范围分区（RANGE Partitioning）</h4><p>按某个范围值进行分区，常用于时间序列数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> orders (<br>    order_id <span class="hljs-type">INT</span>,<br>    order_date <span class="hljs-type">DATE</span>,<br>    amount <span class="hljs-type">DECIMAL</span>(<span class="hljs-number">10</span>, <span class="hljs-number">2</span>),<br>    <span class="hljs-keyword">PRIMARY</span> KEY (order_id, order_date)<br>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">RANGE</span> (<span class="hljs-keyword">YEAR</span>(order_date)) (<br>    <span class="hljs-keyword">PARTITION</span> p2021 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2022</span>),<br>    <span class="hljs-keyword">PARTITION</span> p2022 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2023</span>),<br>    <span class="hljs-keyword">PARTITION</span> p2023 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2024</span>)<br>);<br></code></pre></td></tr></table></figure><ul><li>数据会根据 <code>order_date</code> 的年份分配到不同的分区。</li></ul><h4 id="2-列表分区（LIST-Partitioning）">(2) 列表分区（LIST Partitioning）</h4><p>按某个离散值列表进行分区。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sales (<br>    sale_id <span class="hljs-type">INT</span>,<br>    region <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>),<br>    amount <span class="hljs-type">DECIMAL</span>(<span class="hljs-number">10</span>, <span class="hljs-number">2</span>),<br>    <span class="hljs-keyword">PRIMARY</span> KEY (sale_id, region)<br>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> LIST (region) (<br>    <span class="hljs-keyword">PARTITION</span> p_north <span class="hljs-keyword">VALUES</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;Beijing&#x27;</span>, <span class="hljs-string">&#x27;Tianjin&#x27;</span>),<br>    <span class="hljs-keyword">PARTITION</span> p_south <span class="hljs-keyword">VALUES</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;Guangzhou&#x27;</span>, <span class="hljs-string">&#x27;Shenzhen&#x27;</span>)<br>);<br></code></pre></td></tr></table></figure><ul><li>数据会根据 <code>region</code> 的值分配到不同的分区。</li></ul><h4 id="3-哈希分区（HASH-Partitioning）">(3) 哈希分区（HASH Partitioning）</h4><p>通过哈希函数对分区键进行计算，均匀分布数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> users (<br>    user_id <span class="hljs-type">INT</span>,<br>    username <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>),<br>    <span class="hljs-keyword">PRIMARY</span> KEY (user_id)<br>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> HASH(user_id)<br>PARTITIONS <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure><ul><li>数据会根据 <code>user_id</code> 的哈希值分配到 4 个分区中。</li></ul><h4 id="4-键分区（KEY-Partitioning）">(4) 键分区（KEY Partitioning）</h4><p>类似于哈希分区，但使用 <code>MySQL</code> 内部的哈希函数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> logs (<br>    log_id <span class="hljs-type">INT</span>,<br>    log_message TEXT,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (log_id)<br>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> KEY(log_id)<br>PARTITIONS <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure><h3 id="四、分区表的注意事项">四、分区表的注意事项</h3><h4 id="1-分区键的选择">(1) <strong>分区键的选择</strong></h4><ul><li>分区键必须是表的主键或唯一键的一部分。</li><li>如果分区键选择不当，可能导致数据分布不均匀，影响查询性能。</li></ul><h4 id="2-分区数量">(2) <strong>分区数量</strong></h4><ul><li>分区数量过多可能导致元数据管理开销增加，影响性能。</li><li>分区数量过少可能导致分区内的数据量过大，无法达到分区的效果。</li></ul><h4 id="3-分区规则">(3) <strong>分区规则</strong></h4><ul><li>分区规则必须与业务需求匹配，例如按时间分区适合时间序列数据。</li><li>如果分区规则与数据分布不匹配，可能导致查询性能下降。</li></ul><h4 id="4-分区维护">(4) <strong>分区维护</strong></h4><ul><li>分区表的数据管理（如备份、恢复、删除）需要针对每个分区进行操作。</li><li>例如，删除历史数据时，可以直接删除整个分区。</li></ul><h4 id="5-查询优化">(5) <strong>查询优化</strong></h4><ul><li>查询条件应尽量包含分区键，以便利用分区裁剪（Partition Pruning）优化性能。</li><li>如果查询条件不包含分区键，可能会导致全表扫描。</li></ul><h4 id="6-分区表的限制">(6) <strong>分区表的限制</strong></h4><ul><li>分区表不支持某些 <code>MySQL</code> 功能，如外键、全文索引等。</li><li>分区表的存储引擎必须是 <code>InnoDB</code> 或 <code>MyISAM</code>。</li></ul><h3 id="五、分区表的管理">五、分区表的管理</h3><h4 id="1-添加分区">(1) 添加分区</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> orders <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">PARTITION</span> (<br>    <span class="hljs-keyword">PARTITION</span> p2024 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2025</span>)<br>);<br></code></pre></td></tr></table></figure><h4 id="2-删除分区">(2) 删除分区</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> orders <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">PARTITION</span> p2021;<br></code></pre></td></tr></table></figure><h4 id="3-合并分区">(3) 合并分区</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> orders REORGANIZE <span class="hljs-keyword">PARTITION</span> p2021, p2022 <span class="hljs-keyword">INTO</span> (<br>    <span class="hljs-keyword">PARTITION</span> p2021_2022 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2023</span>)<br>);<br></code></pre></td></tr></table></figure><h4 id="4-查看分区信息">(4) 查看分区信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> information_schema.PARTITIONS<br><span class="hljs-keyword">WHERE</span> TABLE_NAME <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;orders&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="5-拆分分区">(5) 拆分分区</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 将other分区数据，拆分出p2019年和p2022年的分区和兜底分区p_others</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> orders REORGANIZE <span class="hljs-keyword">PARTITION</span> p_others <span class="hljs-keyword">INTO</span> (<br>    <span class="hljs-keyword">PARTITION</span> p2019 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2020</span>),<br>    <span class="hljs-keyword">PARTITION</span> p2022 <span class="hljs-keyword">VALUES</span> LESS THAN (<span class="hljs-number">2023</span>),<br>    <span class="hljs-keyword">PARTITION</span> p_others <span class="hljs-keyword">VALUES</span> LESS THAN MAXVALUE<br>);<br></code></pre></td></tr></table></figure><h3 id="六、分区表的适用场景">六、分区表的适用场景</h3><ul><li><strong>时间序列数据</strong>：例如按日期分区的日志表、订单表等。</li><li><strong>大数据量</strong>：当表的数据量非常大时，通过分区减少查询和管理的开销。</li><li><strong>数据归档</strong>：将历史数据存储到单独的分区中，便于快速删除或归档。</li></ul><h3 id="七、总结">七、总结</h3><p>分区表是一种强大的数据库设计技术，适用于大数据量、时间序列数据等场景。通过合理设计分区键和分区类型，可以显著提高查询性能和数据管理效率。然而，分区表的使用也需要谨慎，避免分区数量过多或分区键选择不当导致的性能问题。在设计和使用分区表时，应结合业务需求和数据特点，进行合理的规划和优化。</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <category domain="https://superlovelace.top/tags/MySQL/">MySQL</category>
      
      
      <comments>https://superlovelace.top/2025/03/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%8C%BA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>窗口函数</title>
      <link>https://superlovelace.top/2025/02/27/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</link>
      <guid>https://superlovelace.top/2025/02/27/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</guid>
      <pubDate>Thu, 27 Feb 2025 09:05:24 GMT</pubDate>
      
      <description>窗口函数是MySQL8.0版本新增的，相对于聚合函数把所有行聚合成一行，窗口函数可以将每一行的数据进行分别处理。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="窗口函数">窗口函数</h2><p>窗口函数是<code>MySQL8.0</code>版本新增的，相对于聚合函数把所有行聚合成一行，窗口函数可以将每一行的数据进行分别处理。</p><h3 id="一、序号函数">一、序号函数</h3><p>用来实现分组排序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 格式<br>row_number() | rank() | dense_rank() over (<br>partition by ... # 按什么字段分组/分区<br>order by ... # 按照什么排序<br>)<br></code></pre></td></tr></table></figure><p>例如：成绩表<code>Score</code>，序号函数皆以此表查询为例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| id | score |<br>| -- | ----- |<br>| 1  | 3.5   |<br>| 2  | 3.65  |<br>| 3  | 4     |<br>| 4  | 3.85  |<br>| 5  | 4     |<br>| 6  | 3.65  |<br></code></pre></td></tr></table></figure><h4 id="1-1、ROW-NUMBER">1.1、ROW_NUMBER()</h4><p>此函数进行排序时，相同的字段会分开排序。</p><p>查询成绩表，按分数进行排序，相同分数的不算在同一名（分开排）</p><p>如果不指定 <code>PARTITION BY</code>，窗口函数默认会将整个结果集视为一个分组，即不进行分组【全局排序】，计算基于所有行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT <br>    score,<br>    ROW_NUMBER() OVER (ORDER BY score DESC) AS `rank`<br>FROM Scores<br>ORDER BY score DESC;<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| score | rank |<br>| ----- | ---- |<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 4     | 2    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 3.85  | 3    |<br>| 3.65  | 4    |<br>| 3.65  | 5    |<br>| 3.5   | 6    |<br></code></pre></td></tr></table></figure><h4 id="1-2、RANK">1.2、RANK()</h4><p>此函数排序时，相同的字段会排在同一名，之后的字段排名为：<code>当前字段排名+当前排名字段总数-1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT <br>    score,<br>    RANK() OVER (ORDER BY score DESC) AS `rank`<br>FROM Scores<br>ORDER BY score DESC;<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| score | rank |<br>| ----- | ---- |<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 3.85  | 3    |<br>| 3.65  | 4    |<br>| 3.65  | 4    |<br>| 3.5   | 6    |<br></code></pre></td></tr></table></figure><h4 id="1-3、DENSE-RANK">1.3、DENSE_RANK()</h4><p>此函数排序时，相同的字段会排在同一名，之后的字段不会受当前字段重复数影响，直接就是当前排名+1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT <br>    score,<br>    DENSE_RANK() OVER (ORDER BY score DESC) AS `rank`<br>FROM Scores<br>ORDER BY score DESC;<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| score | rank |<br>| ----- | ---- |<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 3.85  | 2    |<br>| 3.65  | 3    |<br>| 3.65  | 3    |<br>| 3.5   | 4    |<br></code></pre></td></tr></table></figure><p>放在一起对比：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <br>    score,<br>    <span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> `row_number`,<br>    <span class="hljs-built_in">RANK</span>() <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> `rank`,<br>    <span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> `dense_rank`<br><span class="hljs-keyword">FROM</span> Scores<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| score | row_number | rank | dense_rank |<br>| ----- | ---------- | ---- | ---------- |<br>| 4     | 1          | 1    | 1          |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 4     | 2          | 1    | 1          |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 3.85  | 3          | 3    | 2          |<br>| 3.65  | 4          | 4    | 3          |<br>| 3.65  | 5          | 4    | 3          |<br>| 3.5   | 6          | 6    | 4          |<br></code></pre></td></tr></table></figure><p>思考：如果现在需要找出排名前3的成绩，该怎么做呢？（以<code>dense_rank()</code>排序）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT score,`rank`<br>FROM (<br>         SELECT<br>             score,<br>             DENSE_RANK() OVER (ORDER BY score DESC) AS `rank`<br>         FROM Scores<br>         ORDER BY score DESC<br>     ) as temp<br>WHERE temp.rank&lt;=3;<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| score | rank |<br>| ----- | ---- |<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 4     | 1    |  # &lt;&lt;&lt; 看这两个相同的成绩对应的排序<br>| 3.85  | 2    |<br>| 3.65  | 3    |<br>| 3.65  | 3    |<br></code></pre></td></tr></table></figure><h3 id="二、分布函数">二、分布函数</h3><p>应用场景：查询小于等于当前薪资的比例。</p><h4 id="2-1、PERCENT-RANK-【不常用】">2.1、PERCENT_RANK() 【不常用】</h4><blockquote><p>在以下场景中 <code>PERCENT_RANK()</code> 非常有用：</p><ol><li><strong>百分位数计算</strong>：<ul><li>当需要将数据划分为百分位数（如 90th percentile）时，<code>PERCENT_RANK()</code> 可以帮助确定每个值的相对位置。</li></ul></li><li><strong>数据分布分析</strong>：<ul><li>通过 <code>PERCENT_RANK()</code> 可以快速了解数据在整个数据集中的分布情况。</li></ul></li><li><strong>性能评估</strong>：<ul><li>在评估学生成绩、员工绩效等场景中，<code>PERCENT_RANK()</code> 可以直观地反映某个人在整体中的表现。</li></ul></li><li><strong>数据标准化</strong>：<ul><li>在机器学习或统计分析中，<code>PERCENT_RANK()</code> 可以用于将数据标准化到 <code>[0, 1]</code> 范围内。</li></ul></li></ol></blockquote><p>此函数基于排名的相对位置，公式为 <code>(rank - 1) / (总行数 - 1)</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    dname,<br>    salary,<br>    rank() OVER (partition by dname ORDER BY salary) AS `rank`,<br>    PERCENT_RANK() OVER (partition by dname ORDER BY salary) AS `percent_rank`<br>FROM user<br></code></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| dname | salary | rank | percent_rank |<br>| ----- | ------ | ---- | ------------ | /* 研发部总计4项*/<br>| 研发部 | 5000   | 1    | 0            | /* 0 = (1-1)/(4-1) */<br>| 研发部 | 5000   | 1    | 0            |<br>| 研发部 | 6000   | 3    | 0.6666666666 | /* 0.66 = (3-1)/(4-1) */<br>| 研发部 | 8000   | 4    | 1            |<br>| 销售部 | 3000   | 1    | 0            |<br>| 销售部 | 3000   | 1    | 0            |<br>| 销售部 | 3000   | 1    | 0            |<br>| 销售部 | 4000   | 4    | 1            |<br></code></pre></td></tr></table></figure><h4 id="2-2、CUME-DIST">2.2、CUME_DIST()</h4><p>此函数用于计算累积分布值，表示在有序数据集中，某一项的值小于或等于当前值的比例。</p><ul><li><p><strong>正序（默认）</strong>：统计每一项内，小于或等于此项的值与总数的比值。</p><p>公式为：</p><blockquote><p>CUME_DIST(x)=小于等于 x 的行数总行数CUME_DIST(<em>x</em>)=总行数小于等于 <em>x</em> 的行数</p></blockquote></li><li><p><strong>倒序</strong>：统计每一项内，大于或等于此项的值与总数的比值。</p><p>公式为：</p><blockquote><p>CUME_DIST(x)=大于等于 x 的行数总行数CUME_DIST(<em>x</em>)=总行数大于等于 <em>x</em> 的行数</p></blockquote></li></ul><p>应用场景：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    salary,<br>    cume_dist() OVER (partition by dname ORDER BY salary) AS `cume_dist`<br>FROM user<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| salary | cume_dist |<br>| ------ | --------- |<br>| 5000   | 0.5       |<br>| 5000   | 0.5       |<br>| 6000   | 0.75      |<br>| 8000   | 1         |<br>| 3000   | 0.75  |<br>| 3000   | 0.75  |<br>| 3000   | 0.75 |<br>| 4000   | 1  |<br></code></pre></td></tr></table></figure><h3 id="三、前后函数">三、前后函数</h3><p>用途：返回位于当前行的前n行或后n行的expr的值</p><h4 id="3-1、LAG-函数">3.1、<code>LAG()</code> 函数</h4><p><code>LAG()</code> 函数用于访问当前行之前的某一行的数据。</p><h5 id="语法：">语法：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">LAG(column_name, offset, default_value) OVER (PARTITION BY ... ORDER BY ...)<br></code></pre></td></tr></table></figure><ul><li><strong><code>column_name</code></strong>：要访问的列。</li><li><strong><code>offset</code></strong>：偏移量，表示要访问的行数（默认为 1，即前一行）。</li><li><strong><code>default_value</code></strong>：如果偏移量超出范围（如第一行没有前一行），则返回的默认值（可选，默认为 <code>NULL</code>）。</li></ul><h5 id="应用场景：">应用场景：</h5><ul><li>计算当前行与前一行的差值。</li><li>分析时间序列数据中的变化趋势。</li></ul><h5 id="示例：">示例：</h5><p>假设有一组每日销售数据，需要计算每天的销售额与前一天的差值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    sales_date,<br>    sales_amount,<br>    <span class="hljs-built_in">LAG</span>(sales_amount, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date) <span class="hljs-keyword">AS</span> previous_sales_amount,<br>    sales_amount <span class="hljs-operator">-</span> <span class="hljs-built_in">LAG</span>(sales_amount, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date) <span class="hljs-keyword">AS</span> sales_difference<br><span class="hljs-keyword">FROM</span><br>    daily_sales;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>sales_date</th><th>sales_amount</th><th>previous_sales_amount</th><th>sales_difference</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>0</td><td>100</td></tr><tr><td>2023-01-02</td><td>150</td><td>100</td><td>50</td></tr><tr><td>2023-01-03</td><td>200</td><td>150</td><td>50</td></tr><tr><td>2023-01-04</td><td>180</td><td>200</td><td>-20</td></tr></tbody></table><hr><h4 id="3-2、LEAD-函数">3.2、<strong><code>LEAD()</code> 函数</strong></h4><p><code>LEAD()</code> 函数用于访问当前行之后的某一行的数据。</p><h5 id="语法：-2">语法：</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">LEAD</span>(column_name, <span class="hljs-keyword">offset</span>, default_value) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ... <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ...)<br></code></pre></td></tr></table></figure><ul><li><strong><code>column_name</code></strong>：要访问的列。</li><li><strong><code>offset</code></strong>：偏移量，表示要访问的行数（默认为 1，即后一行）。</li><li><strong><code>default_value</code></strong>：如果偏移量超出范围（如最后一行没有后一行），则返回的默认值（可选，默认为 <code>NULL</code>）。</li></ul><h5 id="应用场景：-2">应用场景：</h5><ul><li>计算当前行与后一行的差值。</li><li>预测或分析未来趋势。</li></ul><h5 id="示例：-2">示例：</h5><p>假设有一组每日销售数据，需要计算每天的销售额与后一天的差值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SQLSELECT<br>    sales_date,<br>    sales_amount,<br>    LEAD(sales_amount, 1, 0) OVER (ORDER BY sales_date) AS next_sales_amount,<br>    LEAD(sales_amount, 1, 0) OVER (ORDER BY sales_date) - sales_amount AS sales_difference<br>FROM<br>    daily_sales;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>sales_date</th><th>sales_amount</th><th>next_sales_amount</th><th>sales_difference</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>150</td><td>50</td></tr><tr><td>2023-01-02</td><td>150</td><td>200</td><td>50</td></tr><tr><td>2023-01-03</td><td>200</td><td>180</td><td>-20</td></tr><tr><td>2023-01-04</td><td>180</td><td>0</td><td>-180</td></tr></tbody></table><hr><h4 id="3-3、LAG-和-LEAD-的区别">3.3、<strong><code>LAG()</code> 和 <code>LEAD()</code> 的区别</strong></h4><table><thead><tr><th>函数</th><th>方向</th><th>作用</th></tr></thead><tbody><tr><td><code>LAG()</code></td><td>向后</td><td>访问当前行之前的某一行的数据。</td></tr><tr><td><code>LEAD()</code></td><td>向前</td><td>访问当前行之后的某一行的数据。</td></tr></tbody></table><hr><h4 id="3-4、常见应用场景">3.4、<strong>常见应用场景</strong></h4><ol><li><strong>时间序列分析</strong>：<ul><li>计算每日、每月或每年的变化趋势。</li><li>例如：计算每天的销售额与前一天的差值。</li></ul></li><li><strong>相邻行比较</strong>：<ul><li>比较当前行与相邻行的值，分析变化或异常。</li><li>例如：检查库存变化或温度波动。</li></ul></li><li><strong>预测或回填数据</strong>：<ul><li>使用 <code>LEAD()</code> 预测未来值，或使用 <code>LAG()</code> 回填历史值。</li></ul></li><li><strong>数据填充</strong>：<ul><li>对于缺失值，可以使用 <code>LAG()</code> 或 <code>LEAD()</code> 从相邻行填充。</li></ul></li></ol><h3 id="总结"><strong>总结</strong></h3><ul><li><code>LAG()</code> 用于访问当前行之前的某一行的数据，适合分析历史趋势或回填数据。</li><li><code>LEAD()</code> 用于访问当前行之后的某一行的数据，适合预测未来趋势或分析未来变化。</li><li>两者在时间序列分析、相邻行比较和数据填充等场景中非常有用。如果需要分析数据的变化趋势或预测未来值，<code>LAG()</code> 和 <code>LEAD()</code> 是强大的工具。</li></ul><h4 id=""></h4><h3 id="四、头尾函数">四、头尾函数</h3><p>用于在窗口框架内访问第一行或最后一行的数据。它们通常用于计算累积值、分析趋势或提取边界值。</p><hr><h4 id="4-1、FIRST-VALUE-函数">4.1、<strong><code>FIRST_VALUE()</code> 函数</strong></h4><p><code>FIRST_VALUE()</code> 函数返回窗口框架内第一行的值。</p><h5 id="语法：-3">语法：</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">FIRST_VALUE</span>(column_name) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ... <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ... [<span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> ...])<br></code></pre></td></tr></table></figure><ul><li><strong><code>column_name</code></strong>：要访问的列。</li><li><strong><code>PARTITION BY</code></strong>：可选，用于分组。</li><li><strong><code>ORDER BY</code></strong>：指定窗口内的排序。</li><li><strong><code>ROWS BETWEEN</code></strong>：可选，定义窗口框架的范围（默认为 <code>UNBOUNDED PRECEDING AND CURRENT ROW</code>）。</li></ul><h5 id="应用场景：-3">应用场景：</h5><ul><li>计算累积值（如累积销售额）。</li><li>提取每组中的第一个值。</li></ul><h5 id="示例：-3">示例：</h5><p>假设有一组每日销售数据，需要计算每天的销售额与第一天的销售额的差值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    sales_date,<br>    sales_amount,<br>    <span class="hljs-built_in">FIRST_VALUE</span>(sales_amount) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date) <span class="hljs-keyword">AS</span> first_sales_amount,<br>    sales_amount <span class="hljs-operator">-</span> <span class="hljs-built_in">FIRST_VALUE</span>(sales_amount) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date) <span class="hljs-keyword">AS</span> sales_difference<br><span class="hljs-keyword">FROM</span><br>    daily_sales;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>sales_date</th><th>sales_amount</th><th>first_sales_amount</th><th>sales_difference</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>100</td><td>0</td></tr><tr><td>2023-01-02</td><td>150</td><td>100</td><td>50</td></tr><tr><td>2023-01-03</td><td>200</td><td>100</td><td>100</td></tr><tr><td>2023-01-04</td><td>180</td><td>100</td><td>80</td></tr></tbody></table><hr><h4 id="4-2、LAST-VALUE-函数">4.2、<strong><code>LAST_VALUE()</code> 函数</strong></h4><p><code>LAST_VALUE()</code> 函数返回窗口框架内最后一行的值。</p><h5 id="语法：-4">语法：</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">LAST_VALUE</span>(column_name) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ... <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ... [<span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> ...])<br></code></pre></td></tr></table></figure><ul><li><strong><code>column_name</code></strong>：要访问的列。</li><li><strong><code>PARTITION BY</code></strong>：可选，用于分组。</li><li><strong><code>ORDER BY</code></strong>：指定窗口内的排序。</li><li><strong><code>ROWS BETWEEN</code></strong>：可选，定义窗口框架的范围（默认为 <code>UNBOUNDED PRECEDING AND CURRENT ROW</code>）。</li></ul><h5 id="注意：">注意：</h5><p>默认情况下，<code>LAST_VALUE()</code> 的窗口框架是 <code>UNBOUNDED PRECEDING AND CURRENT ROW</code>，这意味着它只会返回当前行之前的值。为了获取整个窗口的最后一个值，需要将窗口框架设置为 <code>UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING</code>。</p><h5 id="应用场景：-4">应用场景：</h5><ul><li>计算每组中的最后一个值。</li><li>分析趋势或提取边界值。</li></ul><h5 id="示例：-4">示例：</h5><p>假设有一组每日销售数据，需要计算每天的销售额与最后一天的销售额的差值。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">SQLSELECT<br>    sales_date,<br>    sales_amount,<br>    LAST_VALUE(sales_amount) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-keyword">UNBOUNDED</span> <span class="hljs-keyword">PRECEDING</span> <span class="hljs-keyword">AND</span> <span class="hljs-keyword">UNBOUNDED</span> <span class="hljs-keyword">FOLLOWING</span>) <span class="hljs-keyword">AS</span> last_sales_amount,<br>    LAST_VALUE(sales_amount) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date <span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-keyword">UNBOUNDED</span> <span class="hljs-keyword">PRECEDING</span> <span class="hljs-keyword">AND</span> <span class="hljs-keyword">UNBOUNDED</span> <span class="hljs-keyword">FOLLOWING</span>) - sales_amount <span class="hljs-keyword">AS</span> sales_difference<br><span class="hljs-keyword">FROM</span><br>    daily_sales;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>sales_date</th><th>sales_amount</th><th>last_sales_amount</th><th>sales_difference</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>180</td><td>80</td></tr><tr><td>2023-01-02</td><td>150</td><td>180</td><td>30</td></tr><tr><td>2023-01-03</td><td>200</td><td>180</td><td>-20</td></tr><tr><td>2023-01-04</td><td>180</td><td>180</td><td>0</td></tr></tbody></table><hr><h4 id="4-3、FIRST-VALUE-和-LAST-VALUE-的区别">4.3、<strong><code>FIRST_VALUE()</code> 和 <code>LAST_VALUE()</code> 的区别</strong></h4><table><thead><tr><th>函数</th><th>作用</th><th>默认窗口框架</th></tr></thead><tbody><tr><td><code>FIRST_VALUE()</code></td><td>返回窗口框架内第一行的值。</td><td><code>UNBOUNDED PRECEDING AND CURRENT ROW</code></td></tr><tr><td><code>LAST_VALUE()</code></td><td>返回窗口框架内最后一行的值。</td><td><code>UNBOUNDED PRECEDING AND CURRENT ROW</code></td></tr></tbody></table><hr><h4 id="4-4、常见应用场景">4.4、<strong>常见应用场景</strong></h4><ol><li><strong>累积值计算</strong>：<ul><li>使用 <code>FIRST_VALUE()</code> 计算从开始到当前行的累积值。</li><li>使用 <code>LAST_VALUE()</code> 计算从当前行到结束的累积值。</li></ul></li><li><strong>趋势分析</strong>：<ul><li>使用 <code>FIRST_VALUE()</code> 和 <code>LAST_VALUE()</code> 分析数据的起始和结束趋势。</li></ul></li><li><strong>边界值提取</strong>：<ul><li>使用 <code>FIRST_VALUE()</code> 提取每组中的第一个值。</li><li>使用 <code>LAST_VALUE()</code> 提取每组中的最后一个值。</li></ul></li><li><strong>数据标准化</strong>：<ul><li>使用 <code>FIRST_VALUE()</code> 和 <code>LAST_VALUE()</code> 将数据标准化到某个范围。</li></ul></li></ol><hr><h4 id="4-5、总结">4.5、<strong>总结</strong></h4><ul><li><code>FIRST_VALUE()</code> 用于访问窗口框架内的第一个值，适合计算累积值或提取起始值。</li><li><code>LAST_VALUE()</code> 用于访问窗口框架内的最后一个值，适合分析趋势或提取边界值。</li><li>两者在累积值计算、趋势分析和边界值提取等场景中非常有用。如果需要分析数据的起始或结束趋势，<code>FIRST_VALUE()</code> 和 <code>LAST_VALUE()</code> 是强大的工具。</li></ul><h3 id="五、其他函数">五、其他函数</h3><h4 id="5-1、NTH-VALUE-函数">5.1、<strong><code>NTH_VALUE()</code> 函数</strong></h4><p><code>NTH_VALUE()</code> 函数用于返回窗口框架内第 N 行的值。</p><h5 id="语法：-5">语法：</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">NTH_VALUE</span>(column_name, N) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ... <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ... [<span class="hljs-keyword">ROWS</span> <span class="hljs-keyword">BETWEEN</span> ...])<br></code></pre></td></tr></table></figure><ul><li><strong><code>column_name</code></strong>：要访问的列。</li><li><strong><code>N</code></strong>：指定要返回的行号（例如，<code>1</code> 表示第一行，<code>2</code> 表示第二行，依此类推）。</li><li><strong><code>PARTITION BY</code></strong>：可选，用于分组。</li><li><strong><code>ORDER BY</code></strong>：指定窗口内的排序。</li><li><strong><code>ROWS BETWEEN</code></strong>：可选，定义窗口框架的范围（默认为 <code>UNBOUNDED PRECEDING AND CURRENT ROW</code>）。</li></ul><h5 id="应用场景：-5">应用场景：</h5><ul><li>提取窗口框架内指定行的值。</li><li>分析数据集中特定位置的值。</li></ul><h5 id="示例：-5">示例：</h5><p>假设有一组每日销售数据，需要获取每天销售额的第二个值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    sales_date,<br>    sales_amount,<br>    <span class="hljs-built_in">NTH_VALUE</span>(sales_amount, <span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> sales_date) <span class="hljs-keyword">AS</span> second_sales_amount<br><span class="hljs-keyword">FROM</span><br>    daily_sales;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>sales_date</th><th>sales_amount</th><th>second_sales_amount</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>NULL</td></tr><tr><td>2023-01-02</td><td>150</td><td>150</td></tr><tr><td>2023-01-03</td><td>200</td><td>150</td></tr><tr><td>2023-01-04</td><td>180</td><td>150</td></tr></tbody></table><p>注意：如果窗口框架内没有第 N 行，<code>NTH_VALUE()</code> 会返回 <code>NULL</code>。</p><hr><h4 id="5-2、NTILE-函数">5.2、<strong><code>NTILE()</code> 函数</strong></h4><p><code>NTILE()</code> 函数用于将数据分区划分为指定数量的桶（bucket），并为每一行分配一个桶号。</p><h5 id="语法：-6">语法：</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">NTILE</span>(N) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ... <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ...)<br></code></pre></td></tr></table></figure><ul><li><strong><code>N</code></strong>：指定要划分的桶数。</li><li><strong><code>PARTITION BY</code></strong>：可选，用于分组。</li><li><strong><code>ORDER BY</code></strong>：指定窗口内的排序。</li></ul><h5 id="应用场景：-6">应用场景：</h5><ul><li>将数据划分为百分位数、四分位数等。</li><li>数据分箱（binning）或分组。</li></ul><h5 id="示例：-6">示例：</h5><p>假设有一组学生成绩数据，需要将成绩分为 4 个等级（四分位数）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    student_id,<br>    score,<br>    <span class="hljs-built_in">NTILE</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score) <span class="hljs-keyword">AS</span> quartile<br><span class="hljs-keyword">FROM</span><br>    student_scores;<br></code></pre></td></tr></table></figure><p>结果可能如下：</p><table><thead><tr><th>student_id</th><th>score</th><th>quartile</th></tr></thead><tbody><tr><td>1</td><td>50</td><td>1</td></tr><tr><td>2</td><td>60</td><td>1</td></tr><tr><td>3</td><td>70</td><td>2</td></tr><tr><td>4</td><td>80</td><td>3</td></tr><tr><td>5</td><td>90</td><td>4</td></tr></tbody></table><hr><h4 id="5-3、NTH-VALUE-和-NTILE-的区别">5.3、<strong><code>NTH_VALUE()</code> 和 <code>NTILE()</code> 的区别</strong></h4><table><thead><tr><th>函数</th><th>作用</th><th>主要用途</th></tr></thead><tbody><tr><td><code>NTH_VALUE()</code></td><td>返回窗口框架内第 N 行的值。</td><td>提取指定位置的值。</td></tr><tr><td><code>NTILE()</code></td><td>将数据划分为 N 个桶并分配桶号。</td><td>数据分箱、百分位数或分组。</td></tr></tbody></table><hr><h4 id="5-4、常见应用场景">5.4、<strong>常见应用场景</strong></h4><h5 id="NTH-VALUE-的应用场景"><strong><code>NTH_VALUE()</code> 的应用场景</strong></h5><ol><li><strong>提取特定位置的值</strong>：<ul><li>例如，获取某个月的第二高销售额或第三低温度。</li></ul></li><li><strong>分析数据集中特定位置的值</strong>：<ul><li>例如，找到某个时间段的中间值。</li></ul></li><li><strong>数据填充或回填</strong>：<ul><li>例如，用第 N 行的值填充缺失值。</li></ul></li></ol><h5 id="NTILE-的应用场景"><strong><code>NTILE()</code> 的应用场景</strong></h5><ol><li><strong>百分位数计算</strong>：<ul><li>例如，将成绩分为 100 个百分位数。</li></ul></li><li><strong>数据分箱（Binning）</strong>：<ul><li>例如，将销售额分为高、中、低三组。</li></ul></li><li><strong>分组分析</strong>：<ul><li>例如，将用户活跃度分为 5 个等级。</li></ul></li></ol><hr><h4 id="5-5、总结">5.5、<strong>总结</strong></h4><ul><li><strong><code>NTH_VALUE()</code></strong>：用于提取窗口框架内第 N 行的值，适合分析特定位置的数据。</li><li><strong><code>NTILE()</code></strong>：用于将数据划分为指定数量的桶，适合数据分箱、百分位数计算或分组分析。</li></ul><p>如果需要提取特定位置的值，使用 <code>NTH_VALUE()</code>；如果需要将数据划分为多个组或桶，使用 <code>NTILE()</code>。两者在数据分析和处理中都非常有用，但应用场景不同。</p><h3 id="六、开窗聚合函数">六、开窗聚合函数</h3><p>以此数据表为例：<code>user</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| id    | dname | ename  | salary |<br>| ----- | ----- | -----  | ------ |<br>| 1     | 研发部 | 张三    | 5000   |  <br>| 2     | 研发部 | 李四    | 6000   |  <br>| 3     | 研发部 | 王五    | 5000   | <br>| 4     | 研发部 | 赵四    | 8000   |  <br>| 5     | 销售部 | 卡尔    | 3000   | <br>| 6     | 销售部 | 可可    | 3000   | <br>| 7     | 销售部 | 丽丽    | 4000   | <br>| 8     | 销售部 | 楠楠    | 3000   | <br></code></pre></td></tr></table></figure><h4 id="6-1、SUM-聚合函数-开窗函数">6.1、SUM()聚合函数 + 开窗函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    salary,<br>    sum(salary) over (order by id desc) as `total`<br>FROM user<br>ORDER BY id DESC;<br></code></pre></td></tr></table></figure><p>结果：每行都是把之前的所有行加起来求和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| salary | total  |<br>| ------ | ------ |<br>| 3000   | 3000   |  <br>| 4000   | 7000   |  /* 7000 = 3000 + 4000 */<br>| 3000   | 10000  |  /* 10000 = 7000 + 3000 */<br>| 3000   | 13000  |  /* 以此类推 */<br>| 8000   | 21000  |  <br>| 5000   | 26000  |  <br>| 6000   | 32000  |  <br>| 5000   | 37000  |  <br></code></pre></td></tr></table></figure><hr><p>如果不加<code>order by</code>，每一行都会显示与排序字段相同的所有行求和的最终值，可以用来对比个人与总体的数据。【这次以部门分组，这样后面的求和就是此人所在组的总值】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    dname,<br>    salary,<br>    sum(salary) over (PARTITION BY dname) as `sum`<br>FROM user<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| dname | salary | sum    |<br>| ----- | -----  | ------ |<br>| 研发部 | 5000   | 24000  |  <br>| 研发部 | 6000   | 24000  |  <br>| 研发部 | 5000   | 24000  | <br>| 研发部 | 8000   | 24000  |  <br>| 销售部 | 3000   | 10000  | <br>| 销售部 | 3000   | 10000  | <br>| 销售部 | 4000   | 10000  | <br>| 销售部 | 3000   | 10000  | <br></code></pre></td></tr></table></figure><hr><p>还可以指定求和范围：</p><p><code>rows between unbounded preceding and current row</code> 这个就是从起始行到当前行</p><p><code>rows between 3 preceding and current row</code> 这个就是从我的前3行开始到当前行</p><p><code>rows between 3 preceding and 1 following</code> 这个就是从我的前3行开始到我的后一行</p><p><code>rows between current and unbounded following</code> 这个就是从当前行到最后一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    dname,<br>    salary,<br>    sum(salary) over (partition by dname order by dname rows between unbounded preceding and current row) as `sum`<br>FROM user<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| dname | salary | sum    |<br>| ----- | -----  | ------ |<br>| 研发部 | 5000   | 5000   |  <br>| 研发部 | 6000   | 11000  |  <br>| 研发部 | 5000   | 16000  | <br>| 研发部 | 8000   | 24000  |  <br>| 销售部 | 3000   | 30000  | <br>| 销售部 | 3000   | 60000  | <br>| 销售部 | 4000   | 10000  | <br>| 销售部 | 3000   | 13000  | <br></code></pre></td></tr></table></figure><h4 id="6-2、AVG-聚合函数-开窗函数">6.2、AVG()聚合函数 + 开窗函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    salary,<br>    <span class="hljs-built_in">avg</span>(salary) <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> `avg`<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><p>结果：每行都是把之前的所有行加起来求平均值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| salary | avg       |<br>| ------ | --------- |<br>| 3000   | 3000.0000 | <br>| 4000   | 3500.0000 |  /* 7000/2  ## (7000 = 4000 + 3000) */<br>| 3000   | 3333.3333 |  /* 10000/3 ## (10000 = 7000 + 3000) */<br>| 3000   | 3250.0000 |  /* 以此类推 */<br>| 8000   | 4200.0000 |  <br>| 5000   | 4333.3333 |  <br>| 6000   | 4571.4286 |  <br>| 5000   | 4625.0000 |  <br></code></pre></td></tr></table></figure><h4 id="6-3、MIN-聚合函数-开窗函数">6.3、MIN()聚合函数 + 开窗函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    salary,<br>    min(salary) over (order by id desc) as `min`<br>FROM user<br>ORDER BY id DESC;<br></code></pre></td></tr></table></figure><p>结果：每一行都与之前的所有行相比得出最小值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| salary |  min  |<br>| ------ | ----- |<br>| 3000   | 3000  | <br>| 4000   | 3000  |  <br>| 3000   | 3000  | <br>| 3000   | 3000  | <br>| 8000   | 3000  |  <br>| 5000   | 3000  |  <br>| 6000   | 3000  | <br>| 5000   | 3000  |  <br></code></pre></td></tr></table></figure><h4 id="6-4、MAX-聚合函数-开窗函数">6.4、MAX()聚合函数 + 开窗函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT<br>    salary,<br>    max(salary) over (order by id desc) as `max`<br>FROM user<br>ORDER BY id DESC;<br></code></pre></td></tr></table></figure><p>结果：每一行都与之前的所有行相比得出最大值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">| salary |  max  |<br>| ------ | ----- |<br>| 3000   | 3000  | <br>| 4000   | 4000  |  <br>| 3000   | 4000  | <br>| 3000   | 4000  |  <br>| 8000   | 8000  |  <br>| 5000   | 8000  |  <br>| 6000   | 8000  | <br>| 5000   | 8000  | <br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <category domain="https://superlovelace.top/tags/MySQL/">MySQL</category>
      
      
      <comments>https://superlovelace.top/2025/02/27/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>idea插件推荐</title>
      <link>https://superlovelace.top/2025/02/24/idea%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</link>
      <guid>https://superlovelace.top/2025/02/24/idea%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</guid>
      <pubDate>Mon, 24 Feb 2025 12:38:05 GMT</pubDate>
      
      <description>idea插件推荐</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="idea插件推荐"><code>idea</code>插件推荐</h2><h3 id="一、Chinese-Simplified-Language-Pack-中文语言包">一、Chinese (Simplified) Language Pack / 中文语言包</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----">https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----</a></p><p>简介：此插件是idea的中文汉化插件，还是非常好用的，基本上安装完<code>idea</code>后必装的插件了。</p><h3 id="二、Maven-Search">二、Maven-Search</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/17170-maven-search">https://plugins.jetbrains.com/plugin/17170-maven-search</a></p><p>简介：这是<code>Maven</code>依赖包的快速搜索插件，可以方便查找所需要的<code>Maven</code>依赖。</p><h3 id="三、MyBatisX">三、MyBatisX</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/10119-mybatisx">https://plugins.jetbrains.com/plugin/10119-mybatisx</a></p><p>简介：这是<code>MyBatisPlus</code>推荐的插件，可以方便<code>mapper</code>接口和<code>mapper.xml</code>之间进行跳转，也方便通过数据库逆向生成实体代码。</p><h3 id="四、Apipost插件">四、Apipost插件</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/22676-apipost-helper-2-0">https://plugins.jetbrains.com/plugin/22676-apipost-helper-2-0</a></p><p>简介：这是<code>Apipost</code>开发的插件，可以方便进行简单接口测试。<code>Apipost</code>是一个非常不错的测试工具，官方声称：<code>Apipost</code> = <code>Postman</code> + <code>Swagger</code> + <code>Mock</code> + <code>Jmeter</code>。</p><p><code>Apipost</code>官方网站：<a href="https://www.apipost.cn/">https://www.apipost.cn/</a></p><h3 id="五、jclasslib">五、jclasslib</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/9248-jclasslib">https://plugins.jetbrains.com/plugin/9248-jclasslib</a></p><p>简介：这是一个方便以二进制查看类属性的插件，属于<code>jvm</code>学习期间接触到的。</p><h3 id="六、Alibaba-Java-Coding-Guidelines">六、Alibaba Java Coding Guidelines</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/9248-jclasslib">https://plugins.jetbrains.com/plugin/9248-jclasslib</a></p><p>简介：这是阿里巴巴<code>java</code>开发手册规范检测插件，若有不符合规范地方，通过点击选择检查将会提示检测到的异常，并给基本的解决方案。</p><h3 id="七、SonarQube-for-IDE">七、SonarQube for IDE</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/7973-sonarqube-for-ide">https://plugins.jetbrains.com/plugin/7973-sonarqube-for-ide</a></p><p>简介：这也是开发规范插件，但是这个会自动检测，只不过检测的比较宽泛，一些暂时的注释也会被标记应该移除。不足的是都是英文提示，有些可能看不懂，需要翻译协助。</p><h3 id="八、CheckStyle-IDEA">八、CheckStyle-IDEA</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/1065-checkstyle-idea">https://plugins.jetbrains.com/plugin/1065-checkstyle-idea</a></p><p>简介：这也是开发规范插件，需要自行点击检测，有谷歌和<code>sun</code>公司的规范。这个检测的提示是有中文的。</p><h3 id="九、Rainbow-Brackets">九、Rainbow Brackets</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets">https://plugins.jetbrains.com/plugin/10080-rainbow-brackets</a></p><p>简介：这是一个给不同嵌套层级的括号添加不同的颜色以进行区别的插件。</p><h3 id="十、String-Manipulation">十、String Manipulation</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/2162-string-manipulation">https://plugins.jetbrains.com/plugin/2162-string-manipulation</a></p><p>简介：这是一个对字符串进行格式转换的插件。例如：大小写切换、排序、过滤、递增、对齐列、grepping、转义、编码…</p><h3 id="十一、PlantUML-Integration">十一、PlantUML Integration</h3><p>插件地址：<a href="https://plugins.jetbrains.com/plugin/7017-plantuml-integration">https://plugins.jetbrains.com/plugin/7017-plantuml-integration</a></p><p>简介：支持 PlantUML 绘图，用于绘制 UML 图、流程图等。通过新建<code>PlantUML File</code>使用，格式类似效果类似<code>markdown</code>，一边是编写文字，一边是显示效果。启用此插件才有显示效果，默认是没有效果的。</p><p>PlantUML官方操作文档：<a href="https://plantuml.com/zh/">https://plantuml.com/zh/</a></p><h3 id="十二、OpenFeign-Assistant（FeignX）">十二、OpenFeign Assistant（FeignX）</h3><p>github地址：<a href="https://github.com/Halfmoonly/feignx-plugin">https://github.com/Halfmoonly/feignx-plugin</a></p><p>简介：方便从feign客户端跳转到请求的Controller接口方法</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/">插件推荐</category>
      
      
      <category domain="https://superlovelace.top/tags/idea/">idea</category>
      
      
      <comments>https://superlovelace.top/2025/02/24/idea%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>远程调用之OpenFeign</title>
      <link>https://superlovelace.top/2025/02/20/%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E4%B9%8BOpenFeign/</link>
      <guid>https://superlovelace.top/2025/02/20/%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E4%B9%8BOpenFeign/</guid>
      <pubDate>Thu, 20 Feb 2025 12:39:19 GMT</pubDate>
      
      <description>远程调用OpenFeign示例</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="远程调用之OpenFeign">远程调用之<code>OpenFeign</code></h2><p>在单体项目中，正常写的接口都是供前端调用获取数据的（例如：<code>ajax</code>、<code>axios</code>和<code>fetch</code>）。但是在微服务下的分布式架构中，不同的业务功能模块由不同人员负责并开发，因为分的比较细，所以就少不了服务之间的沟通。通常<code>java</code>来进行远程调用的方法包括：<code>RestTemplate</code>、<code>HttpURLConnection</code> 、<code>HttpClient</code>、<code>OkHttp</code>等。</p><p>而<code>OpenFeign</code>就是简化微服务之间接口调用的远程调用工具之一。</p><p><strong>前提已启动<code>Nacos</code>注册中心！</strong></p><h3 id="一、Maven依赖">一、Maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- OpenFeign 远程调用 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 负载均衡器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- SpringMVC --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="二、启用OpenFeign">二、启用<code>OpenFeign</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo;<br><br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class="hljs-keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;<br><br><span class="hljs-comment">// 开启OpenFeign</span><br><span class="hljs-meta">@EnableFeignClients</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Main.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="三、编写OpenFeign客户端">三、编写<code>OpenFeign</code>客户端</h3><p>这一步类似Mapper文件，只不过数据通过远程调用从其他模块获取。而不是单体中由<code>xml</code>文件写<code>SQL</code>语句直接沟通数据库。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.feign;<br><br><span class="hljs-keyword">import</span> com.demo.feign.fallback.Rest02FallBack;<br><span class="hljs-keyword">import</span> org.springframework.cloud.openfeign.FeignClient;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Repository;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * OpenFeign客户端接口请求</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/19</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@className</span> test02</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@packageName</span> com.demo.feign</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> 一个客户端中对应同一业务的所有请求</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Repository</span><br><span class="hljs-meta">@FeignClient(value = &quot;test02&quot;,fallback = Rest02FallBack.class)</span><span class="hljs-comment">// 这里的value值是微服务的名称</span><br><span class="hljs-comment">//@FeignClient(value = &quot;test01&quot;,url = &quot;https://www.baidu.com&quot;) // 若是调用第三方的api，则需指定地址</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Rest02</span> &#123;<br><br>    <span class="hljs-meta">@GetMapping(&quot;index&quot;)</span><br>    String <span class="hljs-title function_">test002</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="四、【可选】OpenFeign日志配置">四、【可选】<code>OpenFeign</code>日志配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.config;<br><br><span class="hljs-keyword">import</span> feign.Logger;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * OpenFeign远程调用配置类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> TODO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultFeignConfig</span> &#123;<br><br>    <span class="hljs-comment">// 日志配置: 显示所有级别的日志</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Logger.Level <span class="hljs-title function_">feignLogLevel</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Logger.Level.FULL;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="五、【可选】启用日志配置">五、【可选】启用日志配置</h3><h4 id="1、局部生效（客户端中指定配置）">1、局部生效（客户端中指定配置）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FeignClient(value = &quot;item-service&quot;, configuration = DefaultFeignConfig.class)</span><br></code></pre></td></tr></table></figure><h4 id="2、全局生效（配置类中指定默认配置）">2、全局生效（配置类中指定默认配置）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableFeignClients(defaultConfiguration = DefaultFeignConfig.class)</span><br></code></pre></td></tr></table></figure><h4 id="3、yaml开启OpenFeign客户端的日志">3、<code>yaml</code>开启<code>OpenFeign</code>客户端的日志</h4><p><code>OpenFeign</code>只会在<code>FeignClient</code>所在包的日志级别为<strong>DEBUG</strong>时，才会输出日志。而且其日志级别有4级：</p><ul><li><strong>NONE</strong>：不记录任何日志信息，这是默认值。</li><li><strong>BASIC</strong>：仅记录请求的方法，URL以及响应状态码和执行时间</li><li><strong>HEADERS</strong>：在BASIC的基础上，额外记录了请求和响应的头信息</li><li><strong>FULL</strong>：记录所有请求和响应的明细，包括头信息、请求体、元数据。</li></ul><p>Feign默认的日志级别就是NONE，所以默认我们看不到请求日志。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">level:</span><br>    <span class="hljs-comment">#root: debug</span><br>    <span class="hljs-attr">com.demo.feign:</span> <span class="hljs-string">debug</span><br>    <span class="hljs-comment">#com.demo.interceptor: debug</span><br></code></pre></td></tr></table></figure><h3 id="六、请求超时">六、请求超时</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 远程调用 &gt; OpenFeign</span><br><span class="hljs-attr">feign:</span><br>  <span class="hljs-attr">httpclient:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">okhttp:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">config:</span><br>      <span class="hljs-attr">default:</span> <span class="hljs-comment"># 默认设置，未具体设置的所有客户端都生效</span><br>        <span class="hljs-attr">connectTimeout:</span> <span class="hljs-number">2000</span> <span class="hljs-comment"># 连接超时 5秒(5000毫秒) 【默认60秒】</span><br>        <span class="hljs-attr">readTimeout:</span> <span class="hljs-number">3000</span> <span class="hljs-comment"># 读取超时 5秒</span><br>        <span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">full</span> <span class="hljs-comment"># 日志级别 所有</span><br>      <span class="hljs-attr">test02:</span> <span class="hljs-comment"># 服务名称[或是contextId指定的服务]</span><br>        <span class="hljs-attr">connectTimeout:</span> <span class="hljs-number">5000</span> <span class="hljs-comment"># 连接超时 5秒(5000毫秒) 【默认60秒】</span><br>        <span class="hljs-attr">readTimeout:</span> <span class="hljs-number">5000</span> <span class="hljs-comment"># 读取超时 5秒</span><br>        <span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">full</span> <span class="hljs-comment"># 日志级别 所有</span><br></code></pre></td></tr></table></figure><h3 id="七、超时重试">七、超时重试</h3><p>超时重试机制：超时时间（例如5秒）+ 重试间隔（100毫秒）x 1.5</p><p>每次重试的间隔都会比上次长，例如是1.5倍</p><p>最大到重试间隔的时间超过最大时间或者重试次数达到最大次数则停止重试。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.config;<br><br><span class="hljs-keyword">import</span> feign.Logger;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * OpenFeign远程调用配置类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> TODO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultFeignConfig</span> &#123;<br><br>    <span class="hljs-comment">// 日志配置: 显示所有级别的日志</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Logger.Level <span class="hljs-title function_">feignLogLevel</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Logger.Level.FULL;<br>    &#125;<br>    <br>    <span class="hljs-comment">// 超时重试</span><br>    <span class="hljs-meta">@Bean</span><br>    Retryer <span class="hljs-title function_">retryer</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">// 不传值走无参构造：默认间隔100毫秒，最大间隔1秒，最多尝试5次</span><br>        <span class="hljs-comment">//return new Retryer.Default();</span><br>        <span class="hljs-comment">// 传值走有参构造: 每次重试间隔100毫秒，最大间隔1秒，最多尝试5次</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Retryer</span>.Default(<span class="hljs-number">100L</span>, TimeUnit.SECONDS.toMillis(<span class="hljs-number">1L</span>), <span class="hljs-number">5</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="八、请求拦截器">八、请求拦截器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.interceptor;<br><br><span class="hljs-keyword">import</span> feign.RequestInterceptor;<br><span class="hljs-keyword">import</span> feign.RequestTemplate;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.util.UUID;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * OpenFeign请求拦截器</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> 用于请求前统一添加公共数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OpenFeignRequestInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">RequestInterceptor</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">apply</span><span class="hljs-params">(RequestTemplate requestTemplate)</span> &#123;<br>        <span class="hljs-comment">// 请求头添加X-Token</span><br>        requestTemplate.header(<span class="hljs-string">&quot;X-Token&quot;</span>,UUID.randomUUID().toString());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="九、FallBack兜底返回">九、<code>FallBack</code>兜底返回</h3><p>远程调用超时或错误时返回的错误信息或兜底数据。</p><p><strong>兜底数据</strong>：默认数据、缓存数据、假数据… 主要是为了让业务能正常运行。</p><p><strong>注意：需搭配<code>Sentinel</code>服务保护框架，否则不会走兜底的。</strong></p><p>客户端：需要<code>fallback</code>指定兜底实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.feign;<br><br><span class="hljs-keyword">import</span> com.demo.feign.fallback.Rest02FallBack;<br><span class="hljs-keyword">import</span> org.springframework.cloud.openfeign.FeignClient;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Repository;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * OpenFeign客户端接口请求</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/19</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@className</span> test02</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@packageName</span> com.demo.feign</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> 一个客户端中对应同一业务的所有请求</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@see</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Repository</span><br><span class="hljs-meta">@FeignClient(value = &quot;test02&quot;,fallback = Rest02FallBack.class)</span><span class="hljs-comment">// 这里的值是微服务的名称</span><br><span class="hljs-comment">//@FeignClient(value = &quot;test01&quot;,url = &quot;https://www.baidu.com&quot;) // 若是调用第三方的api，则需指定地址</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Rest02</span> &#123;<br><br>    <span class="hljs-meta">@GetMapping(&quot;index&quot;)</span><br>    String <span class="hljs-title function_">test002</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>兜底类：实现客户端接口然后在实现方法中增加兜底数据逻辑即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.demo.feign.fallback;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * FallBack</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/2/20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> TODO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Rest02FallBack</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">com</span>.demo.feign.Rest02 &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test002</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Default Data&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>添加<code>Sentinel</code>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- sentinel 服务保护 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置文件中开启<code>sentinel</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">feign:</span><br>  <span class="hljs-attr">sentinel:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>这样把调用的服务停止，然后去调用就会获得兜底数据了。</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/">远程调用</category>
      
      
      <category domain="https://superlovelace.top/tags/OpenFeign/">OpenFeign</category>
      
      
      <comments>https://superlovelace.top/2025/02/20/%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E4%B9%8BOpenFeign/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>关于最近很长一段时间的断更</title>
      <link>https://superlovelace.top/2025/02/18/%E5%85%B3%E4%BA%8E%E6%9C%80%E8%BF%91%E5%BE%88%E9%95%BF%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%AD%E6%9B%B4/</link>
      <guid>https://superlovelace.top/2025/02/18/%E5%85%B3%E4%BA%8E%E6%9C%80%E8%BF%91%E5%BE%88%E9%95%BF%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%AD%E6%9B%B4/</guid>
      <pubDate>Tue, 18 Feb 2025 09:05:24 GMT</pubDate>
      
      <description>我回来了！</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="关于最近很长一段时间的断更">关于最近很长一段时间的断更</h2><p>很久没更新了，原因是之前的电脑坏掉了，这两天才把机械和固态盘里的数据给拿出来整理，所以相关的笔记都一直存着呢。库存，哈哈，今天一并都更新上，文档日期还是按当时写的日期来归档。好了，终于可以接起来继续更新我的博客了！</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E9%9A%8F%E7%AC%94/">随笔</category>
      
      
      
      <comments>https://superlovelace.top/2025/02/18/%E5%85%B3%E4%BA%8E%E6%9C%80%E8%BF%91%E5%BE%88%E9%95%BF%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%AD%E6%9B%B4/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
