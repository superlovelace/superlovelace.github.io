<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>四月黎明 | 棱境的个人博客站点</title>
    <link>https://superlovelace.top/</link>
    
    <atom:link href="https://superlovelace.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>记录日常学习内容，分享问题解决方法。主要内容包括Java、Python、C++、爬虫和数据结构等相关知识。其中，技术框架包括Java框架Spring、SpringBoot、SpringMVC和Mybatis；Python框架Django、Flask等。此外还有服务器搭建、项目部署，静态博客的搭建等知识总结，不定时更新中...</description>
    <pubDate>Sun, 29 Jun 2025 08:23:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Spring事件</title>
      <link>https://superlovelace.top/2025/06/29/Spring%E4%BA%8B%E4%BB%B6/</link>
      <guid>https://superlovelace.top/2025/06/29/Spring%E4%BA%8B%E4%BB%B6/</guid>
      <pubDate>Sun, 29 Jun 2025 08:22:50 GMT</pubDate>
      
      <description>spring事件机制是由发布者和订阅者两部分组成，也就是发布订阅机制，通常只在单体架构中使用。可以将非核心业务解耦出来，例如消息通知，日志记录等。像这种机制，第三方组件也有，例如Redis的发布订阅机制，再者就是消息队列了，例如RabbitMQ，不仅能通过**Fanout**交换机进行广播，还能通过其他交换机点对点发送，这种就更专业一些了，功能也更强大（例如消息的重复消费，消息持久化等等），这种更适合分布式系统。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Spring事件">Spring事件</h2><p>spring事件机制是由发布者和订阅者两部分组成，也就是发布订阅机制，通常只在单体架构中使用。可以将非核心业务解耦出来，例如消息通知，日志记录等。像这种机制，第三方组件也有，例如Redis的发布订阅机制，再者就是消息队列了，例如RabbitMQ，不仅能通过<strong>Fanout</strong>交换机进行广播，还能通过其他交换机点对点发送，这种就更专业一些了，功能也更强大（例如消息的重复消费，消息持久化等等），这种更适合分布式系统。</p><h3 id="整体流程">整体流程</h3><p>1、定义事件</p><p>2、发布事件</p><p>3、接收事件</p><p>4、调用并发布事件</p><p>相关文档：<a href="https://docs.spring.io/spring-framework/docs/5.3.39/reference/html/core.html#context-functionality-events-annotation">https://docs.spring.io/spring-framework/docs/5.3.39/reference/html/core.html#context-functionality-events-annotation</a></p><h3 id="Maven依赖">Maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="定义事件">定义事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.events.service;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><span class="hljs-keyword">import</span> org.springframework.context.ApplicationEvent;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 登录事件</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/28</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ApplicationEvent</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">LoginEvent</span><span class="hljs-params">(Object source, String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(source);<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="事件发布类">事件发布类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.events.service;<br><br><span class="hljs-keyword">import</span> org.springframework.context.ApplicationEventPublisher;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 登录事件发布者</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginEventPublisher</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ApplicationEventPublisher applicationEventPublisher;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">LoginEventPublisher</span><span class="hljs-params">(ApplicationEventPublisher applicationEventPublisher)</span> &#123;<br>        <span class="hljs-built_in">this</span>.applicationEventPublisher = applicationEventPublisher;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">publishLoginEvent</span><span class="hljs-params">(String username)</span> &#123;<br>        <span class="hljs-type">LoginEvent</span> <span class="hljs-variable">loginEvent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginEvent</span>(<span class="hljs-built_in">this</span>, username);<br>        applicationEventPublisher.publishEvent(loginEvent);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="事件监听类">事件监听类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.events.service;<br><br><span class="hljs-keyword">import</span> org.springframework.context.ApplicationEvent;<br><span class="hljs-keyword">import</span> org.springframework.context.event.EventListener;<br><span class="hljs-keyword">import</span> org.springframework.core.annotation.Order;<br><span class="hljs-keyword">import</span> org.springframework.scheduling.annotation.Async;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span> <span class="hljs-comment">// 登录消息通知事件监听器</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginEventListener</span> &#123;<br><br>    <span class="hljs-comment">// 可以添加多个监听器监听同一事件，也可监听多个事件</span><br><br>    <span class="hljs-comment">// 监听多个事件的示例</span><br>    <span class="hljs-meta">@EventListener(value =&#123;LoginEvent.class, LoginEvent.class&#125;)</span><br>    <span class="hljs-meta">@Order(20)</span><span class="hljs-comment">// 优先级, 数字越小优先级越高,若需要多个监听器监听同一事件，并规范执行顺序,可使用排序</span><br>    <span class="hljs-meta">@Async</span><span class="hljs-comment">// 异步处理</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">loginEventListener</span><span class="hljs-params">(ApplicationEvent event)</span> &#123;<br><br>        <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> LoginEvent)&#123;<br>            <span class="hljs-type">LoginEvent</span> <span class="hljs-variable">loginEvent</span> <span class="hljs-operator">=</span> (LoginEvent) event;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> loginEvent.getMessage();<br>            <span class="hljs-comment">// 发送消息通知用户</span><br>            System.out.println(<span class="hljs-string">&quot;message send User logged in: &quot;</span> + username);<br>        &#125;<br>        <span class="hljs-comment">// 若一次监听多个事件，就这么继续叠判断事件类型处理。</span><br>        <span class="hljs-comment">// 但不推荐这样，尽量使用单个监听器监听单个事件，可以用order来区别优先级</span><br><br>    &#125;<br><br>    <span class="hljs-comment">// 监听单个事件的示例，条件内可指定监听的消息</span><br>    <span class="hljs-meta">@EventListener(condition = &quot;#event.message.equals(&#x27;peter&#x27;)&quot;)</span><br>    <span class="hljs-meta">@Order(10)</span><span class="hljs-comment">// 优先级, 数字越小优先级越高,若需要多个监听器监听同一事件，并规范执行顺序,可使用排序</span><br>    <span class="hljs-meta">@Async</span><span class="hljs-comment">// 异步处理</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">loginEventListener</span><span class="hljs-params">(LoginEvent event)</span> &#123;<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> event.getMessage();<br>        <span class="hljs-comment">// 发送消息通知用户</span><br>        System.out.println(<span class="hljs-string">&quot;只监听内容是peter的消息: &quot;</span> + username);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="调用发布事件">调用发布事件</h3><p>在这个类中执行的方法，会在启动项目后立即执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.events;<br><br><span class="hljs-keyword">import</span> com.events.service.LoginEventPublisher;<br><span class="hljs-keyword">import</span> org.springframework.boot.CommandLineRunner;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCommandLineRunner</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CommandLineRunner</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> LoginEventPublisher loginEventPublisher;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MyCommandLineRunner</span><span class="hljs-params">(LoginEventPublisher loginEventPublisher)</span> &#123;<br>        <span class="hljs-built_in">this</span>.loginEventPublisher = loginEventPublisher;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">(String... args)</span> &#123;<br>        <span class="hljs-comment">// 在应用程序启动后执行的自定义逻辑</span><br>        System.out.println(<span class="hljs-string">&quot;MyCommandLineRunner executed!&quot;</span>);<br><br>        <span class="hljs-comment">// 登录成功</span><br>        <span class="hljs-comment">// 登录执行后逻辑</span><br>        loginEventPublisher.publishLoginEvent(<span class="hljs-string">&quot;小王&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E4%BA%8B%E4%BB%B6/">事件</category>
      
      
      <category domain="https://superlovelace.top/tags/spring/">spring</category>
      
      
      <comments>https://superlovelace.top/2025/06/29/Spring%E4%BA%8B%E4%BB%B6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring状态机</title>
      <link>https://superlovelace.top/2025/06/27/Spring%E7%8A%B6%E6%80%81%E6%9C%BA/</link>
      <guid>https://superlovelace.top/2025/06/27/Spring%E7%8A%B6%E6%80%81%E6%9C%BA/</guid>
      <pubDate>Fri, 27 Jun 2025 14:36:05 GMT</pubDate>
      
      <description>传统`if else`与`switch`在条件过多的情况下会导致耦合过高，难以维护。spring状态机通过将条件提取到外部实现解耦。通过定义状态和事件来触发对应的状态转换。若需要更高级的组件，推荐使用工作流框架（`activiti`等）。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Spring状态机">Spring状态机</h2><p>传统<code>if else</code>与<code>switch</code>在条件过多的情况下会导致耦合过高，难以维护。spring状态机通过将条件提取到外部实现解耦。通过定义状态和事件来触发对应的状态转换。若需要更高级的组件，推荐使用工作流框架（<code>activiti</code>等）。</p><h3 id="整体流程">整体流程</h3><p>1、从redis恢复状态机状态，业务类发送事件</p><p>2、guard执行先前校验，通过则进入action(上一个结束的action与本次开始的action，共两个)</p><p>3、事件监听器接收事件，变更状态并设置我们自定义的执行上下文状态。</p><p>4、业务类收到事件发送回执，投递成功并且执行状态成功则将状态机持久化</p><h3 id="Maven依赖">Maven依赖</h3><p><a href="https://docs.spring.io/spring-statemachine/docs/3.2.1/reference/#using-maven">Spring Statemachine - 参考文档</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- spring状态机 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.statemachine<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-statemachine-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- spring状态机  状态持久化到redis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.statemachine<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-statemachine-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- redis连接池 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-pool2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="状态枚举类">状态枚举类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.annotation.JsonValue;<br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 订单状态枚举</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OrderStates</span> &#123;<br>    INITIAL(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;初始&quot;</span>),<br>    WAITING_PAYMENT(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;待支付&quot;</span>),<br>    PAID(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;已支付&quot;</span>),<br>    SHIPPED(<span class="hljs-number">3</span>, <span class="hljs-string">&quot;发货中&quot;</span>),<br>    DELIVERED(<span class="hljs-number">4</span>, <span class="hljs-string">&quot;已送达&quot;</span>),<br>    CANCELLED(<span class="hljs-number">5</span>, <span class="hljs-string">&quot;取消&quot;</span>);<br><br>    <span class="hljs-meta">@EnumValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Integer code;<br>    <span class="hljs-meta">@JsonValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String desc;<br><br>    OrderStates(<span class="hljs-type">int</span> code, String desc) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.desc = desc;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> OrderStates <span class="hljs-title function_">getByKey</span><span class="hljs-params">(Integer key)</span> &#123;<br>        <span class="hljs-keyword">for</span> (OrderStates e : values()) &#123;<br>            <span class="hljs-keyword">if</span> (e.getCode().equals(key)) &#123;<br>                <span class="hljs-keyword">return</span> e;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;enum not exists.&quot;</span>);<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="事件枚举类">事件枚举类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 订单事件枚举</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OrderEvents</span> &#123;<br>    CREATE_ORDER,     <br>    PAY,              <br>    SHIP,             <br>    DELIVER,          <br>    CANCEL            <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="配置类">配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.event.domain.*;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.EnableStateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.EnableStateMachineFactory;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.EnumStateMachineConfigurerAdapter;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineConfigurationConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 订单状态机配置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableStateMachine(name= &quot;orderStateMachine&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderStateMachineConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">EnumStateMachineConfigurerAdapter</span>&lt;OrderStates, OrderEvents&gt; &#123;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(StateMachineConfigurationConfigurer&lt;OrderStates, OrderEvents&gt; config)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        config<br>                .withConfiguration().machineId(<span class="hljs-string">&quot;orderStateMachine&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态配置</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> states 状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(StateMachineStateConfigurer&lt;OrderStates, OrderEvents&gt; states)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        states<br>            .withStates()<br>            .initial(OrderStates.INITIAL,stateContext -&gt; &#123;<br>                <span class="hljs-comment">// 订单创建和状态机启动时会执行一次，若多次启动会多次执行</span><br>                System.out.println(<span class="hljs-string">&quot;订单进入并退出（一次性s）初始状态：INITIAL&quot;</span>);<br>            &#125;)<br>            .state(OrderStates.WAITING_PAYMENT,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单进入待支付状态：WAITING_PAYMENT&quot;</span>);<br>            &#125;,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单退出待支付状态：WAITING_PAYMENT&quot;</span>);<br>            &#125;)<br>            .state(OrderStates.PAID,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单进入已支付状态：PAID&quot;</span>);<br>            &#125;,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单退出已支付状态：PAID&quot;</span>);<br>            &#125;)<br>            .state(OrderStates.SHIPPED,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单进入已发货状态：SHIPPED&quot;</span>);<br>            &#125;,stateContext -&gt; &#123;<br>                System.out.println(<span class="hljs-string">&quot;订单退出已发货状态：SHIPPED&quot;</span>);<br>            &#125;)<br>            .end(OrderStates.DELIVERED)<br>            .end(OrderStates.CANCELLED);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态转换</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> transitions 转换</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(StateMachineTransitionConfigurer&lt;OrderStates, OrderEvents&gt; transitions)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        transitions<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：创建 -&gt; 待支付</span><br>                .source(OrderStates.INITIAL).target(OrderStates.WAITING_PAYMENT)<br>                <span class="hljs-comment">// 订单创建事件</span><br>                .event(OrderEvents.CREATE_ORDER)<br>                <span class="hljs-comment">// 用于在状态转换发生前进行条件校验，只有通过检查才会执行转换。</span><br>                .guard(context -&gt;&#123;<br>                    <span class="hljs-comment">// 检查,例如id为偶数才允许创建</span><br>                    <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) context.getMessageHeader(<span class="hljs-string">&quot;order&quot;</span>);<br>                    <span class="hljs-keyword">if</span> ((order.getId() &amp; <span class="hljs-number">1</span>) == <span class="hljs-number">0</span>) &#123;<br>                        System.out.println(<span class="hljs-string">&quot;订单id是偶数！&quot;</span>);<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                    &#125;<span class="hljs-keyword">else</span> &#123;<br>                        System.out.println(<span class="hljs-string">&quot;订单id是奇数！&quot;</span>);<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                    &#125;<br>                &#125;)<br>                .and()<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：待支付 -&gt; 已支付</span><br>                .source(OrderStates.WAITING_PAYMENT).target(OrderStates.PAID)<br>                <span class="hljs-comment">// 订单支付事件</span><br>                .event(OrderEvents.PAY)<br>                .and()<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：已支付 -&gt; 已发货</span><br>                .source(OrderStates.PAID).target(OrderStates.SHIPPED)<br>                <span class="hljs-comment">// 订单发货事件</span><br>                .event(OrderEvents.SHIP)<br>                .and()<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：已发货 -&gt; 已送达</span><br>                .source(OrderStates.SHIPPED).target(OrderStates.DELIVERED)<br>                <span class="hljs-comment">// 订单送达事件</span><br>                .event(OrderEvents.DELIVER)<br>                .and()<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：待支付 -&gt; 取消</span><br>                .source(OrderStates.WAITING_PAYMENT).target(OrderStates.CANCELLED)<br>                <span class="hljs-comment">// 订单取消事件</span><br>                .event(OrderEvents.CANCEL)<br>                .and()<br>            .withExternal()<br>                <span class="hljs-comment">// 订单状态：已支付 -&gt; 取消</span><br>                .source(OrderStates.PAID).target(OrderStates.CANCELLED)<br>                <span class="hljs-comment">// 订单取消事件</span><br>                .event(OrderEvents.CANCEL);<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="状态机持久化到Redis配置">状态机持久化到Redis配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.event.domain.OrderEvents;<br><span class="hljs-keyword">import</span> com.event.domain.OrderStates;<br><span class="hljs-keyword">import</span> com.event.domain.OtherEvents;<br><span class="hljs-keyword">import</span> com.event.domain.OtherStates;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.connection.jedis.JedisConnectionFactory;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.StateMachinePersist;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.data.redis.RedisStateMachineContextRepository;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.data.redis.RedisStateMachinePersister;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.persist.RepositoryStateMachinePersist;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.persist.StateMachinePersister;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StateMachinePersistConfig</span>&#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedisConnectionFactory <span class="hljs-title function_">redisConnectionFactory</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LettuceConnectionFactory</span>();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 官方封装好的持久化实现，相当于Mapper或者Dao</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> connectionFactory</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> StateMachinePersist&lt;OrderStates, OrderEvents, String&gt; <span class="hljs-title function_">stateMachinePersist</span><span class="hljs-params">(RedisConnectionFactory connectionFactory)</span> &#123;<br>        <span class="hljs-comment">// 使用官方提供的Redis存储实现</span><br>        RedisStateMachineContextRepository&lt;OrderStates, OrderEvents&gt; repository =<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisStateMachineContextRepository</span>&lt;&gt;(connectionFactory);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RepositoryStateMachinePersist</span>&lt;&gt;(repository);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态机持久化模板</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> stateMachinePersist</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> StateMachinePersister&lt;OrderStates, OrderEvents, String&gt; <span class="hljs-title function_">stateMachinePersister</span><span class="hljs-params">(</span><br><span class="hljs-params">            StateMachinePersist&lt;OrderStates, OrderEvents, String&gt; stateMachinePersist)</span> &#123;<br>        <span class="hljs-comment">// 官方提供的持久化操作模板</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisStateMachinePersister</span>&lt;&gt;(stateMachinePersist);<br>    &#125;<br>    <br>    <span class="hljs-comment">/////////////////////////////////////////////////////////////////////</span><br>    <span class="hljs-comment">// 多个状态机，要多次配置，下面是多个状态机存储方面（第二个）的示例，仅供参考，使用时根据需要保留。</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 官方封装好的持久化实现，相当于Mapper或者Dao</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> connectionFactory</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> StateMachinePersist&lt;OtherStates, OtherEvents, String&gt; <span class="hljs-title function_">otherStateMachinePersist</span><span class="hljs-params">(RedisConnectionFactory connectionFactory)</span> &#123;<br>        <span class="hljs-comment">// 使用官方提供的Redis存储实现</span><br>        RedisStateMachineContextRepository&lt;OtherStates, OtherEvents&gt; repository =<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisStateMachineContextRepository</span>&lt;&gt;(connectionFactory);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RepositoryStateMachinePersist</span>&lt;&gt;(repository);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 状态机持久化模板</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> stateMachinePersist</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> StateMachinePersister&lt;OtherStates, OtherEvents, String&gt; <span class="hljs-title function_">otherStateMachinePersister</span><span class="hljs-params">(</span><br><span class="hljs-params">            StateMachinePersist&lt;OtherStates, OtherEvents, String&gt; stateMachinePersist)</span> &#123;<br>        <span class="hljs-comment">// 官方提供的持久化操作模板</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisStateMachinePersister</span>&lt;&gt;(stateMachinePersist);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="上下文执行状态存储类">上下文执行状态存储类</h3><p>由于状态机在发送事件时，返回的只是事件是否投递成功，并不关心是否成功执行。这样对持久化就产生影响，持久化应当只在成功执行后才可执行，所以需要这样一个类来跨类使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.event.config.state;<br><br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.concurrent.ConcurrentHashMap;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 订单状态机上下文</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StateMachineContext</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> Map&lt;Long, Integer&gt; STATES_MECHINE_CONTEXT = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentHashMap</span>&lt;&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setStateMachineContext</span><span class="hljs-params">(Long stateMachineId, Integer stateMachineContext)</span> &#123;<br>        STATES_MECHINE_CONTEXT.put(stateMachineId, stateMachineContext);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Integer <span class="hljs-title function_">getStateMachineContext</span><span class="hljs-params">(Long stateMachineId)</span> &#123;<br>        <span class="hljs-keyword">return</span> STATES_MECHINE_CONTEXT.get(stateMachineId);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">removeStateMachineContext</span><span class="hljs-params">(Long stateMachineId)</span> &#123;<br>        STATES_MECHINE_CONTEXT.remove(stateMachineId);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="事件监听类">事件监听类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.event.config.state.StateMachineContext;<br><span class="hljs-keyword">import</span> com.event.domain.Order;<br><span class="hljs-keyword">import</span> com.event.domain.OrderEvents;<br><span class="hljs-keyword">import</span> com.event.domain.OrderStates;<br><span class="hljs-keyword">import</span> com.event.mapper.OrderMapper;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.dao.OptimisticLockingFailureException;<br><span class="hljs-keyword">import</span> org.springframework.messaging.Message;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.StateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.annotation.OnTransition;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.annotation.WithStateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.config.StateMachineFactory;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.support.DefaultStateMachineContext;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.concurrent.ConcurrentHashMap;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 订单状态事件监听</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/23</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@WithStateMachine</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderStateListener</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> OrderMapper orderMapper;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;INITIAL&quot;, target = &quot;WAITING_PAYMENT&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreateEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.WAITING_PAYMENT);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br><br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br><br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br><br>        &#125;<br><br><br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;WAITING_PAYMENT&quot;, target = &quot;PAID&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPayEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br><br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.PAID);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;PAID&quot;, target = &quot;SHIPPED&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onShipEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.SHIPPED);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;SHIPPED&quot;, target = &quot;DELIVERED&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onDeliveredEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.DELIVERED);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;WAITING_PAYMENT&quot;, target = &quot;CANCELLED&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onWaitPayToCancelEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.CANCELLED);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-meta">@OnTransition(source = &quot;PAID&quot;, target = &quot;CANCELLED&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPayToCancelEvent</span><span class="hljs-params">(Message&lt;OrderEvents&gt; event)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) event.getHeaders().get(<span class="hljs-string">&quot;order&quot;</span>);<br>        order.setState(OrderStates.CANCELLED);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 版本号校验（防并发修改）</span><br>            <span class="hljs-type">Order</span> <span class="hljs-variable">latest</span> <span class="hljs-operator">=</span> orderMapper.selectById(order.getId());<br>            <span class="hljs-keyword">if</span> (!Objects.equals(latest.getVersion(), order.getVersion())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockingFailureException</span>(<span class="hljs-string">&quot;订单已被其他进程修改&quot;</span>);<br>            &#125;<br>            orderMapper.updateById(order);<br>            System.out.println(<span class="hljs-string">&quot;订单状态机事件：&quot;</span> + event);<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            StateMachineContext.setStateMachineContext(order.getId(), <span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="订单类">订单类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.event.domain;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;<br><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.Version;<br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@TableName</span> t_order order会与关键字冲突 </span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@TableName(value =&quot;t_order&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Order</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-meta">@TableId(type = IdType.INPUT)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-keyword">private</span> OrderStates state;<br><br>    <span class="hljs-comment">// 自动+1需要配置乐观锁插件</span><br>    <span class="hljs-meta">@Version</span><br>    <span class="hljs-keyword">private</span> Integer version;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">equals</span><span class="hljs-params">(Object o)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span> == o) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (o == <span class="hljs-literal">null</span> || getClass() != o.getClass()) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> (Order) o;<br>        <span class="hljs-keyword">return</span> Objects.equals(id, order.id) &amp;&amp; state == order.state &amp;&amp; Objects.equals(version, order.version);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hashCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Objects.hash(id, state, version);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="乐观锁插件">乐观锁插件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@MapperScan(&quot;com.event.mapper&quot;)</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Main.class, args);<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br><br>        <span class="hljs-comment">// 添加乐观锁插件</span><br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockerInnerInterceptor</span>());<br>        <span class="hljs-comment">// 添加防全表更新与删除插件</span><br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockAttackInnerInterceptor</span>());<br><br><br>        <span class="hljs-comment">// 添加分页插件</span><br>        <span class="hljs-comment">// 如果有多数据源可以不配具体类型, 否则都建议配上具体的 DbType，如果配置多个插件, 切记分页最后添加</span><br>        <span class="hljs-type">PaginationInnerInterceptor</span> <span class="hljs-variable">paginationInterceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>(DbType.MYSQL);<br>        <span class="hljs-comment">//设置分页最大容量</span><br>        paginationInterceptor.setMaxLimit(<span class="hljs-number">500L</span>);<br>        interceptor.addInnerInterceptor(paginationInterceptor);<br><br><br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="订单业务类调用">订单业务类调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.event.domain.Order;<br><span class="hljs-keyword">import</span> com.event.domain.OrderEvents;<br><span class="hljs-keyword">import</span> com.event.domain.OrderStates;<br><span class="hljs-keyword">import</span> com.event.service.OrderService;<br><span class="hljs-keyword">import</span> com.event.mapper.OrderMapper;<br><span class="hljs-keyword">import</span> lombok.AllArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.messaging.Message;<br><span class="hljs-keyword">import</span> org.springframework.messaging.support.MessageBuilder;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.StateMachine;<br><span class="hljs-keyword">import</span> org.springframework.statemachine.persist.StateMachinePersister;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment">* <span class="hljs-doctag">@description</span> 针对表【order】的数据库操作Service实现</span><br><span class="hljs-comment">* <span class="hljs-doctag">@createDate</span> 2025-06-23 01:37:11</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OrderService</span>&#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> OrderMapper orderMapper;<br>    <span class="hljs-comment">// 状态机操作模板</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> StateMachine&lt;OrderStates, OrderEvents&gt; stateMachine;<br>    <span class="hljs-comment">// 状态机持久化模板</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> StateMachinePersister&lt;OrderStates, OrderEvents, String&gt; stateMachinePersister;<br><br>    <span class="hljs-comment">// 状态机存储在内存中且不依赖外部存储时，可以用这种方式。</span><br>    <span class="hljs-comment">//private final Map&lt;Order, StateMachine&lt;OrderStates, OrderEvents&gt;&gt; stateMachines = new ConcurrentHashMap&lt;&gt;();</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">createOrder</span><span class="hljs-params">(Order order)</span> &#123;<br>        orderMapper.insert(order);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> sendEvent(OrderEvents.CREATE_ORDER, order);<br>        <span class="hljs-keyword">if</span> (b) &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单创建成功&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单创建失败&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">payOrder</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.selectById(orderId);<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> sendEvent(OrderEvents.PAY, order);<br>        <span class="hljs-keyword">if</span> (b) &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改成功 --&gt; 支付状态&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">shipOrder</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.selectById(orderId);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> sendEvent(OrderEvents.SHIP, order);<br>        <span class="hljs-keyword">if</span> (b) &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改成功 --&gt; 发货状态&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">deliverOrder</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.selectById(orderId);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> sendEvent(OrderEvents.DELIVER, order);<br>        <span class="hljs-keyword">if</span> (b) &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改成功 --&gt; 送达状态&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">cancelOrder</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.selectById(orderId);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> sendEvent(OrderEvents.CANCEL, order);<br>        <span class="hljs-keyword">if</span> (b) &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改成功 --&gt; 取消状态&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;订单状态修改失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> b;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> OrderStates <span class="hljs-title function_">getCurrentState</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.selectById(orderId);<br>        <span class="hljs-keyword">return</span> order.getState();<br>    &#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">synchronized</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendEvent</span><span class="hljs-params">(OrderEvents changeEvent, Order order)</span> &#123;<br>        <span class="hljs-type">AtomicBoolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicBoolean</span>(<span class="hljs-literal">false</span>);<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;state_machine:order:&quot;</span> + order.getId();<br>            <span class="hljs-comment">// 启动状态机，启动时会执行一次初始化操作</span><br>            <span class="hljs-comment">//stateMachine.start();</span><br>            System.out.println(<span class="hljs-string">&quot;格式before：&quot;</span>+ JSON.toJSON(stateMachine));<br><br>            <span class="hljs-comment">// 恢复状态机状态</span><br>            stateMachinePersister.restore(stateMachine, key);<br><br>            System.out.println(<span class="hljs-string">&quot;格式after：&quot;</span>+ JSON.toJSON(stateMachine));<br><br>            Message&lt;OrderEvents&gt; message = MessageBuilder.withPayload(changeEvent).setHeader(<span class="hljs-string">&quot;order&quot;</span>, order).build();<br><br>            <span class="hljs-comment">// 只要有事件接收了就返回 true</span><br>            result.set(stateMachine.sendEvent(message));<br>            <span class="hljs-comment">// 获取状态机上下文</span><br>            <span class="hljs-type">Integer</span> <span class="hljs-variable">stateMachineContext</span> <span class="hljs-operator">=</span> StateMachineContext.getStateMachineContext(order.getId());<br>            flag = Objects.equals(stateMachineContext, <span class="hljs-number">1</span>);<br>            StateMachineContext.removeStateMachineContext(order.getId());<br>            <span class="hljs-comment">//System.out.println(&quot;result：&quot;+result+&quot; stateMachineContext:&quot;+stateMachineContext);</span><br><br><br>            <span class="hljs-keyword">if</span> (result.get() &amp;&amp; flag)&#123;<br>                System.out.println(<span class="hljs-string">&quot;订单状态机事件：&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>);<br>                <span class="hljs-comment">// 持久化状态机状态</span><br>                stateMachinePersister.persist(stateMachine,key);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;订单操作失败:&#123;&#125;&quot;</span>, e);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-comment">//stateMachine.stop();</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> result.get() &amp;&amp; flag;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id=""></h3>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E7%8A%B6%E6%80%81%E6%9C%BA/">状态机</category>
      
      
      <category domain="https://superlovelace.top/tags/spring/">spring</category>
      
      <category domain="https://superlovelace.top/tags/springboot/">springboot</category>
      
      
      <comments>https://superlovelace.top/2025/06/27/Spring%E7%8A%B6%E6%80%81%E6%9C%BA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>IP地址查询工具</title>
      <link>https://superlovelace.top/2025/06/24/ip%E5%9C%B0%E5%9D%80%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</link>
      <guid>https://superlovelace.top/2025/06/24/ip%E5%9C%B0%E5%9D%80%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</guid>
      <pubDate>Tue, 24 Jun 2025 02:39:17 GMT</pubDate>
      
      <description>当需要管理访问记录时，就难免需要用到ip地址查询来确定访问者大致来源。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="IP地址查询工具">IP地址查询工具</h2><p>当需要管理访问记录时，就难免需要用到ip地址查询来确定访问者大致来源。</p><h3 id="太平洋网络IP地址查询Web接口【推荐】">太平洋网络IP地址查询Web接口【推荐】</h3><p>官方地址：<a href="https://whois.pconline.com.cn/">https://whois.pconline.com.cn/</a></p><p>请求示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://whois.pconline.com.cn/ipJson.jsp?json=true&amp;ip=192.168.100.12<br></code></pre></td></tr></table></figure><h3 id="IP-API">IP-API</h3><p><strong>免费只限于非商用！</strong></p><p>官方地址：<a href="https://ip-api.com/">https://ip-api.com/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs html">http://ip-api.com/json/24.48.0.1<br><br>响应信息：<br>&#123;<br>  &quot;query&quot;: &quot;24.48.0.1&quot;, // 查询的ip<br>  &quot;status&quot;: &quot;success&quot;, // 查询状态<br>  &quot;country&quot;: &quot;Canada&quot;, // 所属国家<br>  &quot;countryCode&quot;: &quot;CA&quot;, // 国家代码<br>  &quot;region&quot;: &quot;QC&quot;, // 地区代码<br>  &quot;regionName&quot;: &quot;Quebec&quot;, // 地区<br>  &quot;city&quot;: &quot;Montreal&quot;, // 城市<br>  &quot;zip&quot;: &quot;H1L&quot;, // 邮政编码<br>  &quot;lat&quot;: 45.6026, // 经度<br>  &quot;lon&quot;: -73.5167, // 纬度<br>  &quot;timezone&quot;: &quot;America/Toronto&quot;, // 时区<br>  &quot;isp&quot;: &quot;Le Groupe Videotron Ltee&quot;, // 互联网服务提供商(简称)<br>  &quot;org&quot;: &quot;Videotron Ltee&quot;, // 互联网服务提供商(全称)<br>  &quot;as&quot;: &quot;AS5769 Videotron Ltee&quot; // <br>&#125;<br><br>更完整的请求：<br>http://ip-api.com/json/112.8.54.253?fields=66846719&amp;lang=zh-CN<br>响应：<br>&#123;<br>  &quot;status&quot;: &quot;success&quot;, // 查询状态<br>  &quot;continent&quot;: &quot;亚洲&quot;, // 所属大陆<br>  &quot;continentCode&quot;: &quot;AS&quot;, // 大陆代码（双字母）<br>  &quot;country&quot;: &quot;中国&quot;, // 所属国家<br>  &quot;countryCode&quot;: &quot;CN&quot;, // 国家代码<br>  &quot;region&quot;: &quot;SD&quot;, // 地区/省份代码<br>  &quot;regionName&quot;: &quot;山东&quot;, // 地区/省份<br>  &quot;city&quot;: &quot;济南市&quot;, // 城市<br>  &quot;district&quot;: &quot;&quot;, // 城市的分区<br>  &quot;zip&quot;: &quot;250000&quot;, // 邮政编码<br>  &quot;lat&quot;: 36.6683, // 经度<br>  &quot;lon&quot;: 117.021, // 纬度<br>  &quot;timezone&quot;: &quot;Asia/Shanghai&quot;, // 时区<br>  &quot;offset&quot;: 28800, // 时区 UTC DST 偏移量（秒）<br>  &quot;currency&quot;: &quot;CNY&quot;, // 本国货币<br>  &quot;isp&quot;: &quot;China Mobile&quot;, // ISP 互联网服务提供商(简称)<br>  &quot;org&quot;: &quot;China Mobile Communications Corporation&quot;, // 互联网服务提供商组织(全称)<br>  &quot;as&quot;: &quot;AS24444 Shandong Mobile Communication Company Limited&quot;, // 互联网服务提供商编号和组织<br>  &quot;asname&quot;: &quot;CMNET-V4shandong-AS-AP&quot;, // AS 名称<br>  &quot;reverse&quot;: &quot;&quot;, // IP 的反向 DNS（可以延迟响应）<br>  &quot;mobile&quot;: true, // 移动（蜂窝）连接<br>  &quot;proxy&quot;: false, // 代理、VPN 或 Tor 出口地址<br>  &quot;hosting&quot;: false, // 托管、托管或数据中心<br>  &quot;query&quot;: &quot;112.8.54.253&quot; // 用于查询的 IP<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="IPinfo">IPinfo</h3><p>可商用，精简版无限次请求，但是地区属性较少。</p><p>官方地址：<a href="https://ipinfo.io/">https://ipinfo.io/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html">https://ipinfo.io/8.8.8.8/json<br><br>响应：<br>&#123;<br>  &quot;ip&quot;: &quot;8.8.8.8&quot;,<br>  &quot;hostname&quot;: &quot;dns.google&quot;,<br>  &quot;city&quot;: &quot;Mountain View&quot;,<br>  &quot;region&quot;: &quot;California&quot;,<br>  &quot;country&quot;: &quot;US&quot;,<br>  &quot;loc&quot;: &quot;37.4056,-122.0775&quot;,<br>  &quot;org&quot;: &quot;AS15169 Google LLC&quot;,<br>  &quot;postal&quot;: &quot;94043&quot;,<br>  &quot;timezone&quot;: &quot;America/Los_Angeles&quot;,<br>  &quot;readme&quot;: &quot;https://ipinfo.io/missingauth&quot;,<br>  &quot;anycast&quot;: true<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ipapi">ipapi</h3><p>官方地址：<a href="https://ipapi.co/">https://ipapi.co/</a></p><p>免费版30 000次每月，文章具有时效性，详情请看官网政策。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html">https://ipapi.co/8.8.8.8/json/<br><br>响应：<br>&#123;<br>    &quot;ip&quot;: &quot;8.8.8.8&quot;,<br>    &quot;network&quot;: &quot;8.8.8.0/24&quot;,<br>    &quot;version&quot;: &quot;IPv4&quot;,<br>    &quot;city&quot;: &quot;Mountain View&quot;,<br>    &quot;region&quot;: &quot;California&quot;,<br>    &quot;region_code&quot;: &quot;CA&quot;,<br>    &quot;country&quot;: &quot;US&quot;,<br>    &quot;country_name&quot;: &quot;United States&quot;,<br>    &quot;country_code&quot;: &quot;US&quot;,<br>    &quot;country_code_iso3&quot;: &quot;USA&quot;,<br>    &quot;country_capital&quot;: &quot;Washington&quot;,<br>    &quot;country_tld&quot;: &quot;.us&quot;,<br>    &quot;continent_code&quot;: &quot;NA&quot;,<br>    &quot;in_eu&quot;: false,<br>    &quot;postal&quot;: &quot;94043&quot;,<br>    &quot;latitude&quot;: 37.42301,<br>    &quot;longitude&quot;: -122.083352,<br>    &quot;timezone&quot;: &quot;America/Los_Angeles&quot;,<br>    &quot;utc_offset&quot;: &quot;-0700&quot;,<br>    &quot;country_calling_code&quot;: &quot;+1&quot;,<br>    &quot;currency&quot;: &quot;USD&quot;,<br>    &quot;currency_name&quot;: &quot;Dollar&quot;,<br>    &quot;languages&quot;: &quot;en-US,es-US,haw,fr&quot;,<br>    &quot;country_area&quot;: 9629091.0,<br>    &quot;country_population&quot;: 327167434,<br>    &quot;asn&quot;: &quot;AS15169&quot;,<br>    &quot;org&quot;: &quot;GOOGLE&quot;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="开源离线IP地址定位数据管理框架">开源离线IP地址定位数据管理框架</h3><p>官方地址：<a href="https://ip2region.net/">https://ip2region.net/</a></p><p>需要自行集成后调用本地文件数据库使用</p><h3 id="附录">附录</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> cn.hutool.core.net.Ipv4Util;<br><span class="hljs-keyword">import</span> cn.hutool.http.HttpUtil;<br><span class="hljs-keyword">import</span> cn.hutool.http.useragent.UserAgent;<br><span class="hljs-keyword">import</span> cn.hutool.http.useragent.UserAgentUtil;<br><span class="hljs-keyword">import</span> cn.hutool.json.JSONUtil;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取系统信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemUtils</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">SystemUtils</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalStateException</span>(<span class="hljs-string">&quot;Utility class&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取操作系统名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getOS</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">UserAgent</span> <span class="hljs-variable">userAgent</span> <span class="hljs-operator">=</span> UserAgentUtil.parse(request.getHeaders(<span class="hljs-string">&quot;User-Agent&quot;</span>).toString());<br>        <span class="hljs-keyword">return</span> userAgent.getBrowser().toString();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取浏览器名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getBrowser</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">UserAgent</span> <span class="hljs-variable">userAgent</span> <span class="hljs-operator">=</span> UserAgentUtil.parse(request.getHeaders(<span class="hljs-string">&quot;User-Agent&quot;</span>).toString());<br>        <span class="hljs-keyword">return</span> userAgent.getOs().toString();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取ip地址</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getIp</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        String ip= request.getHeader(<span class="hljs-string">&quot;X-Forwarded-For&quot;</span>);<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;Proxy-Client-IP&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;WL-Proxy-Client-IP&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_X_FORWARDED&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_X_CLUSTER_CLIENT_IP&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_CLIENT_IP&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_FORWARDED_FOR&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_FORWARDED&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;HTTP_VIA&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getHeader(<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip == <span class="hljs-literal">null</span> || ip.isEmpty() || <span class="hljs-string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;<br>            ip = request.getRemoteAddr();<br>        &#125;<br>        <span class="hljs-keyword">if</span> (ip.contains(<span class="hljs-string">&quot;,&quot;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> ip.split(<span class="hljs-string">&quot;,&quot;</span>)[<span class="hljs-number">0</span>];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> ip;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取地址</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ip</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getAddress</span><span class="hljs-params">(String ip)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (Ipv4Util.isInnerIP(ip)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;内网IP&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> JSONUtil.parseObj(HttpUtil.get(<span class="hljs-string">&quot;https://whois.pconline.com.cn/ipJson.jsp?json=true&amp;ip=&quot;</span> + ip)).getStr(<span class="hljs-string">&quot;addr&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalArgumentException e) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;内网IP&quot;</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;未知&quot;</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/">工具类</category>
      
      
      <category domain="https://superlovelace.top/tags/ip/">ip</category>
      
      
      <comments>https://superlovelace.top/2025/06/24/ip%E5%9C%B0%E5%9D%80%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库初始化工具</title>
      <link>https://superlovelace.top/2025/06/23/liquibase%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <guid>https://superlovelace.top/2025/06/23/liquibase%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <pubDate>Mon, 23 Jun 2025 13:24:31 GMT</pubDate>
      
      <description>当需要在项目启动时，自动创建对应的数据库表结构和数据时。以前都是通过实现`CommandLineRunner`的子线程，通过调用编写的`mapper`文件执行对应的`sql`语句。但这样太繁琐了，所以今天就推荐`liquibase`来进行数据库初始化和`sql`文件的版本管理。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="数据库初始化工具">数据库初始化工具</h2><p>当需要在项目启动时，自动创建对应的数据库表结构和数据时。以前都是通过实现<code>CommandLineRunner</code>的子线程，通过调用编写的<code>mapper</code>文件执行对应的<code>sql</code>语句。但这样太繁琐了，所以今天就推荐<code>liquibase</code>来进行数据库初始化和<code>sql</code>文件的版本管理。</p><h3 id="依赖">依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 用于初始化数据库表和数据 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.liquibase<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>liquibase-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="配置">配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-comment"># 数据库正常配</span><br>    <span class="hljs-attr">datasource:</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br>        <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/security_auth?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true&amp;allowMultiQueries=true&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>    <span class="hljs-attr">liquibase:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment"># 主变更日志文件</span><br>        <span class="hljs-attr">change-log:</span> <span class="hljs-string">classpath:db/changelog/db.changelog-master.yaml</span> <br>        <span class="hljs-comment"># 是否在更新时回滚</span><br>        <span class="hljs-attr">test-rollback-on-update:</span> <span class="hljs-literal">false</span> <br><br>        <span class="hljs-comment"># 若label与contexts同时配置，则需要执行的sql标识全部匹配才会执行</span><br>        <span class="hljs-attr">labels:</span> <span class="hljs-string">release_1.0</span> <span class="hljs-comment"># 指定启用的sql标签,对应labels:release_1.0</span><br>        <span class="hljs-attr">contexts:</span> <span class="hljs-string">dev</span> <span class="hljs-comment"># 指定启用的sql上下文环境，对应context:dev</span><br></code></pre></td></tr></table></figure><h3 id="其他文件">其他文件</h3><p><code>db/changelog/db.change-master.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># db.changelog-master.yaml</span><br><span class="hljs-attr">databaseChangeLog:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">includeAll:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">classpath:/db/migration/</span> <span class="hljs-comment"># SQL 脚本存放目录</span><br>      <span class="hljs-attr">relativeToChangelogFile:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p><code>sql</code>文件目录：<code>/db/migration/</code></p><p><code>V1_InitDatabase.sql</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- liquibase formatted sql</span><br><br><span class="hljs-comment">-- changeset peter:1 labels:release_1.0 context:dev</span><br><span class="hljs-comment">-- comment: 初始化用户表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> sys_user (<br>    id <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;用户ID&#x27;</span>,<br>    username <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户名&#x27;</span>,  <br>    password <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">512</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;密码&#x27;</span>,      <br>    status  TINYINT <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;状态&#x27;</span>,   <br>    version <span class="hljs-type">INTEGER</span>  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;版本号&#x27;</span>, <br>    is_deleted TINYINT <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;逻辑删除&#x27;</span><br>);<br><span class="hljs-comment">-- rollback DROP TABLE sys_user;</span><br><br><span class="hljs-comment">-- changeset peter:2 labels:release_1.0 context:dev</span><br><span class="hljs-comment">-- comment: 初始化角色表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> sys_role (<br>    id <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;角色ID&#x27;</span>,<br>    role_code <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;角色代码&#x27;</span>,<br>    role_name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;角色名&#x27;</span><br>);<br><span class="hljs-comment">-- rollback DROP TABLE sys_role;</span><br><br><span class="hljs-comment">-- changeset peter:3 labels:release_1.0 context:dev</span><br><span class="hljs-comment">-- comment: 初始化用户角色关系表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> sys_user_role (<br>     user_id <span class="hljs-type">BIGINT</span> COMMENT <span class="hljs-string">&#x27;用户ID&#x27;</span>,<br>     role_id <span class="hljs-type">BIGINT</span> COMMENT <span class="hljs-string">&#x27;角色ID&#x27;</span><br>);<br><span class="hljs-comment">-- rollback DROP TABLE sys_user_role;</span><br><br><span class="hljs-comment">-- changeset peter:4 labels:release_1.0 context:dev</span><br><span class="hljs-comment">-- comment: 初始化菜单表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> sys_menu (<br>    id <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;角色ID&#x27;</span>,<br>    parent_id <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;父级菜单ID&#x27;</span>,<br>    name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜单名称&#x27;</span>,<br>    type <span class="hljs-type">INTEGER</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜单类型&#x27;</span>,<br>    component <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;前端组件&#x27;</span>,<br>    perms <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) COMMENT <span class="hljs-string">&#x27;权限标识&#x27;</span>,<br>    icon <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) COMMENT <span class="hljs-string">&#x27;菜单图标&#x27;</span>,<br>    sort_value <span class="hljs-type">INTEGER</span> COMMENT <span class="hljs-string">&#x27;排序&#x27;</span>,<br>    path <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) COMMENT <span class="hljs-string">&#x27;菜单路径&#x27;</span>,<br>    status <span class="hljs-type">INTEGER</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜单状态(0：禁止，1：正常)&#x27;</span>,<br>    create_time DATETIME <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    update_time DATETIME <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    is_deleted TINYINT <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;逻辑删除&#x27;</span><br>);<br><span class="hljs-comment">-- rollback DROP TABLE sys_menu;</span><br><br><span class="hljs-comment">-- changeset peter:5 labels:release_1.0 context:dev</span><br><span class="hljs-comment">-- comment: 初始化角色菜单关系表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> sys_role_menu (<br>     role_id <span class="hljs-type">BIGINT</span> COMMENT <span class="hljs-string">&#x27;角色ID&#x27;</span>,<br>     menu_id <span class="hljs-type">BIGINT</span> COMMENT <span class="hljs-string">&#x27;菜单ID&#x27;</span><br>);<br><span class="hljs-comment">-- rollback DROP TABLE sys_role_menu;</span><br></code></pre></td></tr></table></figure><h3 id="注意事项">注意事项</h3><p><code>liquibase</code>在项目启动后会在数据库创建对应的两个表：</p><p><code>databasechangelog</code>：用来记录<code>sql</code>文件执行信息。例如：当执行过<code>V1_InitDatabase.sql</code>后，若修改此文件内容，可能会因与数据库记录的已执行文件信息不一致而报错。若仅是测试学习，可直接将对应的记录信息删除，让其重新记录。所以尽量确认无误后，再启动项目执行。</p><p><code>databasechangeloglock</code>：用来锁定</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9D%E5%A7%8B%E5%8C%96/">数据库初始化</category>
      
      
      <category domain="https://superlovelace.top/tags/liquibase/">liquibase</category>
      
      
      <comments>https://superlovelace.top/2025/06/23/liquibase%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Guava实现接口限流</title>
      <link>https://superlovelace.top/2025/06/20/Guava%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81/</link>
      <guid>https://superlovelace.top/2025/06/20/Guava%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81/</guid>
      <pubDate>Fri, 20 Jun 2025 15:09:24 GMT</pubDate>
      
      <description>guava是google开发的工具包，包含很多工具。今天通过它的`RateLimiter`+注解来实现接口限流（底层基于令牌桶算法）。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Guava实现接口限流">Guava实现接口限流</h2><p>guava是google开发的工具包，包含很多工具。今天通过它的<code>RateLimiter</code>+注解来实现接口限流（底层基于令牌桶算法）。</p><p><strong>注意</strong>：这通常用来实现单体项目的接口限流，分布式应用中，有更高级的<code>sentinel</code>可供选择，可根据需要使用。</p><h3 id="Maven依赖">Maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- guava除了限流还有很多其他工具 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.google.guava<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>guava<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>31.1-jre<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- AOP代理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="注解类">注解类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局限流</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RateLimit &#123;<br><br>    <span class="hljs-comment">// 访问次数</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">count</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">1</span>;<br><br>    <span class="hljs-comment">// 时间</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">time</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>也可加一个用户级别的限流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户级别限流</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RateLimitForUserAgent &#123;<br><br>    <span class="hljs-comment">// 访问次数</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">count</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">10</span>;<br><br>    <span class="hljs-comment">// 时间</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">time</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="代理切面类">代理切面类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.google.common.util.concurrent.RateLimiter;<br><span class="hljs-keyword">import</span> org.aspectj.lang.JoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Before;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.concurrent.ConcurrentHashMap;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 限流切面</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/23</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RateLimitAspect</span> &#123;<br><br>    <span class="hljs-comment">// ConcurrentHashMap受限于java虚拟机,也可选择存储到redis</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Map&lt;String, RateLimiter&gt; limiters = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentHashMap</span>&lt;&gt;();<br><br>    <span class="hljs-meta">@Before(value = &quot;@annotation(rateLimit)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkRateLimit</span><span class="hljs-params">(JoinPoint joinPoint,RateLimit rateLimit)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> joinPoint.getSignature().toLongString();<br>        <span class="hljs-type">RateLimiter</span> <span class="hljs-variable">rateLimiter</span> <span class="hljs-operator">=</span> limiters.computeIfAbsent(key, k -&gt;<br>                RateLimiter.create(rateLimit.count() / (<span class="hljs-type">double</span>) rateLimit.time()));<br>        <span class="hljs-keyword">if</span> (!rateLimiter.tryAcquire()) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;请求过于频繁&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户级限流切面</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> joinPoint</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> rateLimit</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Before(value = &quot;@annotation(rateLimit)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkRateLimitForUserAgent</span><span class="hljs-params">(JoinPoint joinPoint,RateLimitForUserAgent rateLimit)</span> &#123;<br>        <span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> ((ServletRequestAttributes) Objects.requireNonNull(RequestContextHolder.getRequestAttributes())).getRequest();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userAgent</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;User-Agent&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;userAgent:&quot;</span>+userAgent);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> joinPoint.getSignature().toLongString() + <span class="hljs-string">&quot;:&quot;</span> +userAgent;<br>        <span class="hljs-type">RateLimiter</span> <span class="hljs-variable">rateLimiter</span> <span class="hljs-operator">=</span> limiters.computeIfAbsent(key, k -&gt;<br>                RateLimiter.create(rateLimit.count() / (<span class="hljs-type">double</span>) rateLimit.time()));<br>        <span class="hljs-keyword">if</span> (!rateLimiter.tryAcquire()) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RequestFrequenceException</span>(<span class="hljs-string">&quot;请求过于频繁&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="全局异常处理">全局异常处理</h3><p><strong>自定义请求太频繁异常</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 请求太频繁异常</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/23</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RequestFrequenceException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> <span class="hljs-number">400</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">RequestFrequenceException</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">RequestFrequenceException</span><span class="hljs-params">(String message, Throwable cause)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message, cause);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">RequestFrequenceException</span><span class="hljs-params">(Throwable cause)</span> &#123;<br>        <span class="hljs-built_in">super</span>(cause);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>全局异常处理</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.http.ResponseEntity;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局异常处理</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/23</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyAdvice</span> &#123;<br><br>    <span class="hljs-meta">@ExceptionHandler(RequestFrequenceException.class)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">handleException</span><span class="hljs-params">(RequestFrequenceException e)</span> &#123;<br>        log.error(<span class="hljs-string">&quot;请求过于频繁&quot;</span>);<br>        <span class="hljs-keyword">return</span> processResponse(e);<br>    &#125;<br><br>    <span class="hljs-comment">// 符合RESTFUL的返回类型</span><br>    <span class="hljs-keyword">private</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt; <span class="hljs-title function_">processResponse</span><span class="hljs-params">(RequestFrequenceException e)</span>&#123;<br>        Map&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;code&quot;</span>, e.getCode());<br>        map.put(<span class="hljs-string">&quot;message&quot;</span>, e.getMessage());<br>        map.put(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-keyword">return</span> ResponseEntity.status(e.getCode()).body(map);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用">使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.event.config.RateLimit;<br><span class="hljs-keyword">import</span> com.event.config.RateLimitForUserAgent;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/orders&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderController</span> &#123;<br><br>    <span class="hljs-meta">@RateLimitForUserAgent(count = 1, time = 1)</span><br>    <span class="hljs-meta">@PostMapping</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">createOrder</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">orderId</span> <span class="hljs-operator">=</span> System.currentTimeMillis(); <span class="hljs-comment">// 模拟订单ID</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Order created with ID: &quot;</span> + orderId;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81/">接口限流</category>
      
      
      <category domain="https://superlovelace.top/tags/Guava/">Guava</category>
      
      
      <comments>https://superlovelace.top/2025/06/20/Guava%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>登录验证码</title>
      <link>https://superlovelace.top/2025/06/20/%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <guid>https://superlovelace.top/2025/06/20/%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <pubDate>Fri, 20 Jun 2025 03:47:09 GMT</pubDate>
      
      <description>各种登录验证码的介绍，各类验证码的对比、部分验证插件推荐和部分实现。</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="登录验证码">登录验证码</h2><h3 id="一、图形验证码">一、图形验证码</h3><p>通过将文本值生成经过干扰处理的图片，然后发送给前端供用户识别输入，并将文本值存储在session中，供用户输入后进行验证。要是分布式的话，可以将验证码存储到redis中。</p><h4 id="1-1、静态图形验证码">1.1、静态图形验证码</h4><h5 id="前端页面">前端页面</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/login&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;refreshed()&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/captcha/generate&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片验证码&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;点击刷新&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;captcha&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;captcha&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;captcha&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入验证码&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录/注册&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> captcha = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;demo&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">refreshed</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        captcha.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;/captcha/generate&#x27;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="后端代码">后端代码</h5><h6 id="Maven依赖">Maven依赖</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.penggle<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kaptcha<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="配置类">配置类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;<br><span class="hljs-keyword">import</span> com.google.code.kaptcha.util.Config;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-keyword">import</span> java.util.Properties;<br><span class="hljs-comment">// 验证码配置类</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KaptchaConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> DefaultKaptcha <span class="hljs-title function_">getKaptchaBean</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">DefaultKaptcha</span> <span class="hljs-variable">defaultKaptcha</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultKaptcha</span>();<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">properties</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        <span class="hljs-comment">// 验证码图片是否有边界</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.border&quot;</span>, <span class="hljs-string">&quot;yes&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片边界颜色</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.border.color&quot;</span>, <span class="hljs-string">&quot;105,179,90&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片字体颜色</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.textproducer.font.color&quot;</span>, <span class="hljs-string">&quot;blue&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片宽度</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.image.width&quot;</span>, <span class="hljs-string">&quot;125&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片高度</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.image.height&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片字体大小</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.textproducer.font.size&quot;</span>, <span class="hljs-string">&quot;45&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片存入session中的文本值， session key,实测没效果</span><br>        <span class="hljs-comment">//properties.put(&quot;kaptcha.session.key&quot;, &quot;code&quot;);</span><br>        <span class="hljs-comment">// 验证码图片字符长度</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.textproducer.char.length&quot;</span>, <span class="hljs-string">&quot;4&quot;</span>);<br>        <span class="hljs-comment">// 验证码图片字符字体</span><br>        properties.put(<span class="hljs-string">&quot;kaptcha.textproducer.font.names&quot;</span>, <span class="hljs-string">&quot;Arial,Courier&quot;</span>);<br>        <span class="hljs-type">Config</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Config</span>(properties);<br>        defaultKaptcha.setConfig(config);<br>        <span class="hljs-keyword">return</span> defaultKaptcha;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="控制器">控制器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> javax.servlet.ServletOutputStream;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">// 图片验证码控制器</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/captcha&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CaptchaController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> DefaultKaptcha defaultKaptcha;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/generate&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">generateCaptcha</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">// 设置响应头</span><br>        response.setDateHeader(<span class="hljs-string">&quot;Expires&quot;</span>, <span class="hljs-number">0</span>);<br>        response.setHeader(<span class="hljs-string">&quot;Cache-Control&quot;</span>, <span class="hljs-string">&quot;no-store, no-cache, must-revalidate&quot;</span>);<br>        response.addHeader(<span class="hljs-string">&quot;Cache-Control&quot;</span>, <span class="hljs-string">&quot;post-check=0, pre-check=0&quot;</span>);<br>        response.setHeader(<span class="hljs-string">&quot;Pragma&quot;</span>, <span class="hljs-string">&quot;no-cache&quot;</span>);<br>        response.setContentType(<span class="hljs-string">&quot;image/jpeg&quot;</span>);<br><br>        <span class="hljs-comment">// 生成验证码文本和图片</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">captchaText</span> <span class="hljs-operator">=</span> defaultKaptcha.createText();<br>        <span class="hljs-type">BufferedImage</span> <span class="hljs-variable">captchaImage</span> <span class="hljs-operator">=</span> defaultKaptcha.createImage(captchaText);<br><br>        <span class="hljs-comment">// 将验证码文本保存到session中</span><br>        request.getSession().setAttribute(<span class="hljs-string">&quot;captcha&quot;</span>, captchaText);<br><br>        <span class="hljs-comment">// 输出图片</span><br>        <span class="hljs-type">ServletOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> response.getOutputStream();<br>        ImageIO.write(captchaImage, <span class="hljs-string">&quot;jpg&quot;</span>, out);<br>        out.flush();<br>        out.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h6 id="页面控制">页面控制</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 页面控制</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IndexController</span> &#123;<br><br>    <span class="hljs-meta">@GetMapping</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">index</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="验证">验证</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestParam;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><br><span class="hljs-comment">// 登录校验控制器</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginController</span> &#123;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">login</span><span class="hljs-params">(HttpServletRequest request, </span><br><span class="hljs-params">                        <span class="hljs-meta">@RequestParam(&quot;captcha&quot;)</span> String captcha)</span> &#123;<br><br>        <span class="hljs-comment">// 从session中获取验证码</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">sessionCaptcha</span> <span class="hljs-operator">=</span> (String) request.getSession().getAttribute(<span class="hljs-string">&quot;captcha&quot;</span>);<br><br>        <span class="hljs-comment">// 验证验证码</span><br>        <span class="hljs-keyword">if</span> (!captcha.equals(sessionCaptcha)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Captcha verification failed!&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 进行用户名和密码的验证...</span><br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Login successful!&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="1-2、算数验证码">1.2、算数验证码</h4><p>算是普通图片验证码的变体，通过生成算数图片，并将结果存储到session中，将前端用户传来的计算值与session中的答案进行匹配。要是分布式的话，可以将验证码存储到redis中。</p><p>关键的修改部分是生成图片的字段，需改成算数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> javax.servlet.ServletOutputStream;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">// 图片验证码控制器</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/captcha&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CaptchaController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> DefaultKaptcha defaultKaptcha;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/generate&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">generateCaptcha</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">// 设置响应头</span><br>        response.setDateHeader(<span class="hljs-string">&quot;Expires&quot;</span>, <span class="hljs-number">0</span>);<br>        response.setHeader(<span class="hljs-string">&quot;Cache-Control&quot;</span>, <span class="hljs-string">&quot;no-store, no-cache, must-revalidate&quot;</span>);<br>        response.addHeader(<span class="hljs-string">&quot;Cache-Control&quot;</span>, <span class="hljs-string">&quot;post-check=0, pre-check=0&quot;</span>);<br>        response.setHeader(<span class="hljs-string">&quot;Pragma&quot;</span>, <span class="hljs-string">&quot;no-cache&quot;</span>);<br>        response.setContentType(<span class="hljs-string">&quot;image/jpeg&quot;</span>);<br><br>        <span class="hljs-comment">// 生成验证码文本和图片</span><br>        <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">10</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">10</span>);<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> x+<span class="hljs-string">&quot;+&quot;</span>+y+<span class="hljs-string">&quot;=?&quot;</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> x+y;<br>       <br>        <span class="hljs-type">BufferedImage</span> <span class="hljs-variable">captchaImage</span> <span class="hljs-operator">=</span> defaultKaptcha.createImage(expression);<br><br>        <span class="hljs-comment">// 将验证码文本保存到session中</span><br>        request.getSession().setAttribute(<span class="hljs-string">&quot;captcha&quot;</span>, result);<br><br>        <span class="hljs-comment">// 输出图片</span><br>        <span class="hljs-type">ServletOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> response.getOutputStream();<br>        ImageIO.write(captchaImage, <span class="hljs-string">&quot;jpg&quot;</span>, out);<br>        out.flush();<br>        out.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="二、行为验证码">二、行为验证码</h3><p>推荐开源组件(该组件实现了大多类型的行为验证码，非常推荐)：<a href="https://gitee.com/dromara/tianai-captcha">https://gitee.com/dromara/tianai-captcha</a></p><p>官方文档：<a href="http://doc.captcha.tianai.cloud/">http://doc.captcha.tianai.cloud/</a></p><h4 id="2-1、滑动验证码">2.1、滑动验证码</h4><p>直接滑动到另一边的类型：这种通常会记录用户滑动轨迹然后发送给后端进行验证</p><h4 id="2-2、滑块验证码">2.2、滑块验证码</h4><p>滑块拼图类型：这种则匹配拼图的位置来进行验证</p><h4 id="2-3、旋转验证码">2.3、旋转验证码</h4><p>滑动将图片摆正的类型</p><h4 id="2-4、点选验证码">2.4、点选验证码</h4><p>1、通过按照描述的规则，顺序选择一张图片中存在的文字。</p><p>2、类似谷歌的将一张图片切割成多份，选择文本描述中符合特征的图片，然后将选择的图片传给后端进行验证，据说这种有些并没有标准答案，可以让用户选择正确的图片来白嫖代码标注的工作。</p><h4 id="官方示例项目：">官方示例项目：</h4><p><a href="https://gitee.com/tianai/tianai-captcha-demo">https://gitee.com/tianai/tianai-captcha-demo</a></p><p>他们提供收费版的轨迹验证，可根据需要自行购买使用。</p><h3 id="三、短信-语音-邮箱验证码">三、短信/语音/邮箱验证码</h3><p>这类验证码需要第三方服务配置。其中邮箱是这三个中成本最小，也最容易实现的。其他的都需要付费，而且有些个人还无法使用，必须企业才行。</p><h4 id="3-1、邮箱验证码">3.1、邮箱验证码</h4><p>大致流程：构建邮箱验证码网页模板，然后以模板的形式发送邮件验证码给用户。</p><h6 id="核心依赖">核心依赖</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 邮件验证码 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="其他依赖">其他依赖</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- redis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-pool2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-openapi3-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>QQ邮箱官方集成说明： <a href="https://wx.mail.qq.com/list/readtemplate?name=app_intro.html#/agreement/authorizationCode">https://wx.mail.qq.com/list/readtemplate?name=app_intro.html#/agreement/authorizationCode</a></p><p>网易邮箱官方集成说明： <a href="https://help.mail.163.com/faqDetail.do?code=d7a5dc8471cd0c0e8b4b8f4f8e49998b374173cfe9171305fa1ce630d7f67ac2a5feb28b66796d3b">https://help.mail.163.com/faqDetail.do?code=d7a5dc8471cd0c0e8b4b8f4f8e49998b374173cfe9171305fa1ce630d7f67ac2a5feb28b66796d3b</a></p><h5 id="示例：">示例：</h5><h6 id="application-yaml"><code>application.yaml</code></h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">thymeleaf:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br><br>  <span class="hljs-comment"># qq邮箱配置相关说明 https://wx.mail.qq.com/list/readtemplate?name=app_intro.html#/agreement/authorizationCode</span><br><span class="hljs-comment">#  mail:</span><br><span class="hljs-comment">#    host: smtp.qq.com</span><br><span class="hljs-comment">#    port: 587</span><br><span class="hljs-comment">#    protocol: smtp</span><br><span class="hljs-comment">#    default-encoding: UTF-8</span><br><span class="hljs-comment">#    username: &lt;邮箱名 例如xxx@qq.com&gt;</span><br><span class="hljs-comment">#    password: &lt;授权码&gt;</span><br><span class="hljs-comment">#    properties:</span><br><span class="hljs-comment">#      mail:</span><br><span class="hljs-comment">#        smtp:</span><br><span class="hljs-comment">#          auth: true</span><br><span class="hljs-comment">#          starttls:</span><br><span class="hljs-comment">#            enable: true</span><br><span class="hljs-comment">#            required: true</span><br><br>  <span class="hljs-comment"># 网易邮箱配置相关说明 https://help.mail.163.com/faqDetail.do?code=d7a5dc8471cd0c0e8b4b8f4f8e49998b374173cfe9171305fa1ce630d7f67ac2a5feb28b66796d3b</span><br>  <span class="hljs-attr">mail:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">smtp.163.com</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">25</span><br>    <span class="hljs-attr">protocol:</span> <span class="hljs-string">smtp</span><br>    <span class="hljs-attr">default-encoding:</span> <span class="hljs-string">UTF-8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">&lt;邮箱名</span> <span class="hljs-string">例如xxx@163.com&gt;</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&lt;授权码&gt;</span><br>    <span class="hljs-attr">properties:</span><br>      <span class="hljs-attr">mail:</span><br>        <span class="hljs-attr">smtp:</span><br>          <span class="hljs-attr">auth:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">starttls:</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-attr">app:</span><br>  <span class="hljs-attr">email:</span><br>    <span class="hljs-attr">from:</span> <span class="hljs-string">&lt;发送邮件的邮箱名&gt;</span><br>    <span class="hljs-attr">personal:</span> <span class="hljs-string">&lt;验证码标题，通常是系统名称&gt;</span><br></code></pre></td></tr></table></figure><h6 id="EmailLoginRequest-java"><code>EmailLoginRequest.java</code></h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> lombok.AllArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> lombok.NoArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.ToString;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@ToString</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailLoginRequest</span> &#123;<br>    <span class="hljs-keyword">private</span> String email;<br><br>    <span class="hljs-keyword">private</span> String captcha;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="email-template-html"><code>email-template.html</code></h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- src/main/resources/templates/email/captcha-template.html --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登录验证码<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">font-family</span>: Arial, sans-serif;</span><br><span class="language-css">      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.6</span>;</span><br><span class="language-css">      <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.container</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ddd</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.header</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">      <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#eee</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.content</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.code</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="language-css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f5f5f5</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.footer</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">color</span>: <span class="hljs-number">#777</span>;</span><br><span class="language-css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">      <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#eee</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>登录验证码测试<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您好，<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您正在进行登录操作，请使用以下验证码完成验证：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;captcha&#125;&quot;</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>验证码有效期为 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;expirationMinutes&#125;&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> 分钟，请及时使用。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>如果这不是您的操作，请忽略此邮件。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>此邮件由系统自动发送，请勿回复。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="EmailCaptchaService-java"><code>EmailCaptchaService.java</code></h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.message.email.service;<br><br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Value;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.core.RedisTemplate;<br><span class="hljs-keyword">import</span> org.springframework.mail.javamail.JavaMailSender;<br><span class="hljs-keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.thymeleaf.TemplateEngine;<br><span class="hljs-keyword">import</span> org.thymeleaf.context.Context;<br><br><span class="hljs-keyword">import</span> javax.mail.internet.InternetAddress;<br><span class="hljs-keyword">import</span> javax.mail.internet.MimeMessage;<br><span class="hljs-keyword">import</span> java.util.Random;<br><span class="hljs-keyword">import</span> java.util.concurrent.TimeUnit;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 邮箱验证码服务</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailCaptchaService</span> &#123;<br>                <br>    <span class="hljs-comment">// 邮件发送器</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> JavaMailSender mailSender;<br>    <span class="hljs-comment">// Redis模板</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> RedisTemplate&lt;String, String&gt; redisTemplate;<br>    <span class="hljs-comment">// thymeleaf模板引擎</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> TemplateEngine templateEngine;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;app.email.from&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String fromEmail;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;app.email.personal&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String emailPersonal;<br><br>    <span class="hljs-comment">// 10分钟过期</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">EMAIL_CAPTCHA_EXPIRATION</span> <span class="hljs-operator">=</span> <span class="hljs-number">600</span>;<br>    <span class="hljs-comment">// 验证码缓存前缀</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">EMAIL_CAPTCHA_PREFIX</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;EMAIL_CAPTCHA:&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Random</span> <span class="hljs-variable">RANDOM</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EmailCaptchaService</span><span class="hljs-params">(JavaMailSender mailSender, RedisTemplate&lt;String, String&gt; redisTemplate, TemplateEngine templateEngine)</span> &#123;<br>        <span class="hljs-built_in">this</span>.mailSender = mailSender;<br>        <span class="hljs-built_in">this</span>.redisTemplate = redisTemplate;<br>        <span class="hljs-built_in">this</span>.templateEngine = templateEngine;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送邮箱验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> email 电子邮箱</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 是否发送成功</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendEmailCaptcha</span><span class="hljs-params">(String email)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 生成6位随机验证码</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">captcha</span> <span class="hljs-operator">=</span> generateCaptcha(<span class="hljs-number">6</span>);<br><br>            <span class="hljs-comment">// 存储验证码</span><br>            redisTemplate.opsForValue().set(<br>                EMAIL_CAPTCHA_PREFIX + email,<br>                captcha,<br>                EMAIL_CAPTCHA_EXPIRATION,<br>                TimeUnit.SECONDS);<br><br>            <span class="hljs-comment">// 准备邮件内容</span><br>            <span class="hljs-type">Context</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Context</span>();<br>            context.setVariable(<span class="hljs-string">&quot;captcha&quot;</span>, captcha);<br>            context.setVariable(<span class="hljs-string">&quot;expirationMinutes&quot;</span>, EMAIL_CAPTCHA_EXPIRATION / <span class="hljs-number">60</span>);<br>            <span class="hljs-comment">// 渲染邮件内容, 使用thymeleaf模板,先将变量渲染到html中，然后将html模板渲染成字符串</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">emailContent</span> <span class="hljs-operator">=</span> templateEngine.process(<span class="hljs-string">&quot;email-template&quot;</span>, context);<br><br>            <span class="hljs-comment">// 创建MIME邮件</span><br>            <span class="hljs-type">MimeMessage</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> mailSender.createMimeMessage();<br>            <span class="hljs-type">MimeMessageHelper</span> <span class="hljs-variable">helper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MimeMessageHelper</span>(message, <span class="hljs-literal">true</span>, <span class="hljs-string">&quot;UTF-8&quot;</span>);<br><br>            <span class="hljs-comment">// 设置发件人、收件人、主题和内容</span><br>            helper.setFrom(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InternetAddress</span>(fromEmail, emailPersonal));<br>            helper.setTo(email);<br>            helper.setSubject(<span class="hljs-string">&quot;登录验证码&quot;</span>);<br>            helper.setText(emailContent, <span class="hljs-literal">true</span>);<br><br>            <span class="hljs-comment">// 发送邮件</span><br>            mailSender.send(message);<br>            log.info(<span class="hljs-string">&quot;邮箱验证码已发送至: &#123;&#125;&quot;</span>, email);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;发送邮箱验证码失败&quot;</span>, e);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 验证邮箱验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> email 电子邮箱</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> captcha 用户输入的验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 是否验证成功</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">validateEmailCaptcha</span><span class="hljs-params">(String email, String captcha)</span> &#123;<br>        <span class="hljs-comment">// 获取存储的验证码</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> EMAIL_CAPTCHA_PREFIX + email;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">storedCaptcha</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(key);<br><br>        <span class="hljs-keyword">if</span> (storedCaptcha != <span class="hljs-literal">null</span> &amp;&amp; storedCaptcha.equals(captcha)) &#123;<br>            <span class="hljs-comment">// 验证成功后删除验证码，防止重复使用</span><br>            redisTemplate.delete(key);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成指定长度的随机数字验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> length 验证码长度</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">generateCaptcha</span><span class="hljs-params">(<span class="hljs-type">int</span> length)</span> &#123;<br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">captcha</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; length; i++) &#123;<br>            captcha.append(RANDOM.nextInt(<span class="hljs-number">10</span>));<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> captcha.toString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="EmailCaptchaController-java"><code>EmailCaptchaController.java</code></h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.message.email.controller;<br><br><span class="hljs-keyword">import</span> com.message.email.domain.EmailLoginRequest;<br><span class="hljs-keyword">import</span> com.message.email.service.EmailCaptchaService;<br><span class="hljs-keyword">import</span> com.message.kaptcha.domain.R;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.http.HttpStatus;<br><span class="hljs-keyword">import</span> org.springframework.http.ResponseEntity;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestBody;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 邮箱验证码</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/captcha&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailCaptchaController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> EmailCaptchaService emailCaptchaService;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/email/send&quot;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;R&lt;Map&lt;String, Object&gt;&gt;&gt; <span class="hljs-title function_">sendEmailCaptcha</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> EmailLoginRequest request)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">email</span> <span class="hljs-operator">=</span> request.getEmail();<br><br>        <span class="hljs-comment">// 验证邮箱格式</span><br>        <span class="hljs-keyword">if</span> (!isValidEmail(email)) &#123;<br>            <span class="hljs-keyword">return</span> ResponseEntity.badRequest().body(R.error(<span class="hljs-string">&quot;邮箱格式不正确&quot;</span>));<br>        &#125;<br><br>        <span class="hljs-comment">// 发送邮箱验证码</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">sent</span> <span class="hljs-operator">=</span> emailCaptchaService.sendEmailCaptcha(email);<br><br>        <span class="hljs-keyword">if</span> (sent) &#123;<br>            Map&lt;String, Object&gt; response = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>            response.put(<span class="hljs-string">&quot;token&quot;</span>, <span class="hljs-string">&quot;email&quot;</span>);<br>            response.put(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-string">&quot;ok&quot;</span>);<br>            <span class="hljs-keyword">return</span> ResponseEntity.ok(R.ok(response));<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)<br>                .body(R.error(<span class="hljs-string">&quot;验证码发送失败&quot;</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 验证邮箱格式</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isValidEmail</span><span class="hljs-params">(String email)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">regex</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]&#123;2,4&#125;$&quot;</span>;<br>        <span class="hljs-keyword">return</span> email != <span class="hljs-literal">null</span> &amp;&amp; email.matches(regex);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="EmailLoginController-java"><code>EmailLoginController.java</code></h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.message.email.controller;<br><br><span class="hljs-keyword">import</span> com.message.email.domain.EmailLoginRequest;<br><span class="hljs-keyword">import</span> com.message.email.service.EmailCaptchaService;<br><span class="hljs-keyword">import</span> com.message.kaptcha.domain.R;<br><span class="hljs-keyword">import</span> com.message.kaptcha.service.UserService;<br><span class="hljs-keyword">import</span> org.springframework.http.HttpStatus;<br><span class="hljs-keyword">import</span> org.springframework.http.ResponseEntity;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestBody;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 邮箱登录控制器</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/auth/email&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailLoginController</span> &#123;<br>           <br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> EmailCaptchaService emailCaptchaService;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> UserService userService;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EmailLoginController</span><span class="hljs-params">(EmailCaptchaService emailCaptchaService, UserService userService)</span> &#123;<br>        <span class="hljs-built_in">this</span>.emailCaptchaService = emailCaptchaService;<br>        <span class="hljs-built_in">this</span>.userService = userService;<br>    &#125;<br><br><br><span class="hljs-comment">//    @Autowired</span><br><span class="hljs-comment">//    private JwtTokenProvider jwtTokenProvider;</span><br><br>    <span class="hljs-meta">@PostMapping(&quot;/email-login&quot;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;R&lt;Map&lt;String, Object&gt;&gt;&gt; <span class="hljs-title function_">emailLogin</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> EmailLoginRequest request)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">email</span> <span class="hljs-operator">=</span> request.getEmail();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">captcha</span> <span class="hljs-operator">=</span> request.getCaptcha();<br><br>        <span class="hljs-comment">// 验证邮箱验证码</span><br>        <span class="hljs-keyword">if</span> (!emailCaptchaService.validateEmailCaptcha(email, captcha)) &#123;<br>            <span class="hljs-keyword">return</span> ResponseEntity.badRequest().body(R.error(<span class="hljs-string">&quot;验证码错误或已过期&quot;</span>));<br>        &#125;<br><br>        <span class="hljs-comment">// 查找或创建用户,这里为了方便测试，直接返回true。正常登录应该根据邮箱查找用户，如果用户不存在，则创建用户。</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> userService.findOrCreateByEmail(email);<br><br>        <span class="hljs-keyword">if</span> (flag) &#123;<br>            <span class="hljs-comment">// 生成JWT令牌</span><br>            <span class="hljs-comment">//String token = jwtTokenProvider.generateToken(user.getUsername());</span><br>            Map&lt;String, Object&gt; data = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>            data.put(<span class="hljs-string">&quot;token&quot;</span>, <span class="hljs-string">&quot;123&quot;</span>);<br>            data.put(<span class="hljs-string">&quot;username&quot;</span>, email);<br>            <span class="hljs-keyword">return</span> ResponseEntity.ok(R.ok(data));<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)<br>                    .body(R.error(<span class="hljs-string">&quot;登录失败，请稍后再试&quot;</span>));<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-2、短信验证码">3.2、短信验证码</h4><p>阿里云短信服务：<a href="https://help.aliyun.com/zh/sms/">https://help.aliyun.com/zh/sms/</a></p><p>需要企业资质，然后构建模板，再通过平台对应的SDK调用接口使用。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 阿里云的SDK,其中就有短信验证码的功能 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.5.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-3、语音验证码">3.3、语音验证码</h4><p>需要企业资质，然后构建模板，再通过平台对应的SDK调用接口使用。这时会向用户拨打电话，然后播报固定的语音。例如：阿里云的资源到期释放语音提醒。</p><p>阿里云语音服务：<a href="https://help.aliyun.com/zh/vms/">https://help.aliyun.com/zh/vms/</a></p><h3 id="四、智能验证码">四、智能验证码</h3><p><strong>（如Google reCAPTCHA v3）</strong></p><p><strong>无感验证</strong>：后台分析用户行为（鼠标移动点击模式），无需交互。</p><p><strong>动态防护</strong>：根据风险评分调整验证强度。</p><h3 id="五、类型比较">五、类型比较</h3><table><thead><tr><th>类型</th><th>安全性</th><th>用户体验</th><th>成本</th><th>适用场景</th></tr></thead><tbody><tr><td>图形验证码</td><td>低</td><td>较差</td><td>低</td><td>基础防护低风险场景</td></tr><tr><td>短信验证码</td><td>高</td><td>中等</td><td>中高</td><td>支付账号安全</td></tr><tr><td><strong>行为式验证码</strong></td><td><strong>中高</strong></td><td>好</td><td><strong>中</strong></td><td><strong>通用登录防刷</strong></td></tr><tr><td>智能验证码</td><td>高</td><td>极佳</td><td>中高</td><td>高流量网站隐私敏感</td></tr><tr><td>语音验证码</td><td>中</td><td>中等</td><td>中高</td><td>无障碍支持短信备份</td></tr><tr><td>问答式验证码</td><td>低</td><td>中等</td><td>低</td><td>简单场景辅助验证</td></tr><tr><td>生物特征验证</td><td>极高</td><td>极佳</td><td>高</td><td>金融高安全需求</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E6%8E%88%E6%9D%83%E4%B8%8E%E9%AA%8C%E8%AF%81/">授权与验证</category>
      
      
      <category domain="https://superlovelace.top/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/">验证码</category>
      
      
      <comments>https://superlovelace.top/2025/06/20/%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Sharding-jdbc4.1.1 + Seata1.6.1</title>
      <link>https://superlovelace.top/2025/05/22/Sharding-jdbc4.1.1%20+%20Seata1.6.1/</link>
      <guid>https://superlovelace.top/2025/05/22/Sharding-jdbc4.1.1%20+%20Seata1.6.1/</guid>
      <pubDate>Thu, 22 May 2025 08:51:34 GMT</pubDate>
      
      <description>shardingsphere4.1.1分库分表+分布式事务seata1.6.1的整合记录</description>
      
      
      
      <content:encoded><![CDATA[<h1>Sharding-jdbc4.1.1 + Seata1.6.1</h1><p>官方文档：<a href="https://shardingsphere.apache.org/document/4.1.1/cn/manual/sharding-jdbc/usage/sharding/#%E4%BD%BF%E7%94%A8spring">https://shardingsphere.apache.org/document/4.1.1/cn/manual/sharding-jdbc/usage/sharding/#使用spring</a></p><h3 id="核心依赖">核心依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- nacos注册中心 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--openFeign--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-openapi2-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 负载均衡 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- sentinel 服务保护 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- nacos配置管理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--seata--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.antlr<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>antlr4-runtime<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 读取bootstrap文件 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- typehandlers 解决日期类异常 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-typehandlers-jsr310<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- mybatis-plus --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- spring-aop 代理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- okhttp 代理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>okhttp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- hutool工具包 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 远程二级缓存：Redis --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Redis 专属连接池 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-pool2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 分布式锁 官方兼容springboot2.7.x的写法 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.redisson<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>redisson-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.45.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.redisson<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>redisson-spring-data-34<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.redisson<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>redisson-spring-data-27<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.45.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 消息队列 rabbitmq --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- spring json解析 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- sharding-jdbc --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- sharding集成seata --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>sharding-transaction-base-seata-at<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="application-yaml"><code>application.yaml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">10040</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">business-service</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">redisson:</span><br>      <span class="hljs-attr">file:</span> <span class="hljs-string">classpath:redisson.yaml</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">10000</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">lettuce:</span><br>      <span class="hljs-attr">pool:</span><br>        <span class="hljs-attr">max-idle:</span> <span class="hljs-number">8</span><br>        <span class="hljs-attr">max-active:</span> <span class="hljs-number">8</span><br>        <span class="hljs-attr">max-wait:</span> <span class="hljs-string">100ms</span><br>        <span class="hljs-attr">min-idle:</span> <span class="hljs-number">0</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">rabbitmq:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">localhost</span> <span class="hljs-comment"># RabbitMQ服务地址</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">5672</span> <span class="hljs-comment"># 端口</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">user</span> <span class="hljs-comment"># 用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123</span> <span class="hljs-comment"># 密码</span><br>    <span class="hljs-attr">virtual-host:</span> <span class="hljs-string">user</span> <span class="hljs-comment"># 虚拟机</span><br><br>    <span class="hljs-attr">listener:</span> <span class="hljs-comment"># 监听</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">simple</span>  <span class="hljs-comment"># 监听类型</span><br>      <span class="hljs-attr">simple:</span><br>        <span class="hljs-attr">prefetch:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># 每个消费者一次只处理一条消息，处理完才能获取下一条消息</span><br>        <span class="hljs-attr">acknowledge-mode:</span> <span class="hljs-string">auto</span><br>        <span class="hljs-attr">retry:</span><br>          <span class="hljs-comment"># 开启消费者失败重试</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-comment"># 初始的失败等待时长为1秒</span><br>          <span class="hljs-attr">initial-interval:</span> <span class="hljs-string">1000ms</span><br>          <span class="hljs-comment"># 失败的等待时长倍数，下次等待时长 = multiplier * last-interval</span><br>          <span class="hljs-attr">multiplier:</span> <span class="hljs-number">1</span><br>          <span class="hljs-comment"># 最大重试次数</span><br>          <span class="hljs-attr">max-attempts:</span> <span class="hljs-number">3</span><br>          <span class="hljs-comment"># true无状态；false有状态。如果业务中包含事务，这里改为false</span><br>          <span class="hljs-attr">stateless:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># nacos配置</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-comment"># 配置中心</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">public</span><br>      <span class="hljs-comment"># 注册中心</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">public</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br><br><span class="hljs-comment"># seata配置</span><br><span class="hljs-attr">seata:</span><br>  <span class="hljs-comment"># 是否开启seata</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># Seata 应用编号，默认为 $&#123;spring.application.name&#125;</span><br>  <span class="hljs-attr">application-id:</span> <span class="hljs-string">seata-server</span><br>  <span class="hljs-comment"># Seata 事务组编号，用于 TC 集群名</span><br>  <span class="hljs-attr">tx-service-group:</span> <span class="hljs-string">test-tx-group</span><br>  <span class="hljs-comment"># 是否开启数据源代理</span><br>  <span class="hljs-attr">enable-auto-data-source-proxy:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">data-source-proxy-mode:</span> <span class="hljs-string">AT</span><br>  <span class="hljs-comment"># 服务配置项</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-comment"># 虚拟组和分组的映射</span><br>    <span class="hljs-attr">vgroup-mapping:</span><br>      <span class="hljs-attr">test-tx-group:</span> <span class="hljs-string">default</span><br>    <span class="hljs-comment"># 分组和 Seata 服务的映射</span><br>    <span class="hljs-attr">grouplist:</span><br>      <span class="hljs-attr">default:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8091</span><br><br><span class="hljs-attr">feign:</span><br>  <span class="hljs-attr">httpclient:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">okhttp:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">sentinel:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">config:</span><br>      <span class="hljs-attr">default:</span> <span class="hljs-comment"># 默认设置，未具体设置的所有客户端都生效</span><br>        <span class="hljs-attr">connectTimeout:</span> <span class="hljs-number">5000</span> <span class="hljs-comment"># 连接超时 5秒(5000毫秒) 【默认60秒】</span><br>        <span class="hljs-attr">readTimeout:</span> <span class="hljs-number">3000</span> <span class="hljs-comment"># 读取超时 5秒</span><br>        <span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">full</span> <span class="hljs-comment"># 日志级别 所有</span><br><br>      <span class="hljs-attr">test02:</span> <span class="hljs-comment"># 服务名称[或是contextId指定的服务]</span><br>        <span class="hljs-attr">connectTimeout:</span> <span class="hljs-number">5000</span> <span class="hljs-comment"># 连接超时 5秒(5000毫秒) 【默认60秒】</span><br>        <span class="hljs-attr">readTimeout:</span> <span class="hljs-number">5000</span> <span class="hljs-comment"># 读取超时 5秒</span><br>        <span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">full</span> <span class="hljs-comment"># 日志级别 所有</span><br><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-comment"># 开启别名的包</span><br>  <span class="hljs-attr">type-aliases-package:</span> <span class="hljs-string">com.business.domain</span><br>  <span class="hljs-comment"># mapper类的XML接口实现</span><br>  <span class="hljs-comment"># 默认位置 private String[] mapperLocations = new String[]&#123;&quot;classpath*:/mapper/**/*.xml&quot;&#125;;</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:/mapper/*.xml</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-comment"># 日志实现类</span><br>    <span class="hljs-comment"># log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>    <span class="hljs-comment"># 自动映射行为  针对resultMap 可不必写除id之外的属性 不开启 NONE , 映射没有嵌套的 PARTIAL【默认】, 全映射 FULL</span><br>    <span class="hljs-attr">auto-mapping-behavior:</span> <span class="hljs-string">full</span><br>    <span class="hljs-comment"># 驼峰命名</span><br>    <span class="hljs-attr">map-underscore-to-camel-case:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 枚举类型处理器</span><br>    <span class="hljs-attr">default-enum-type-handler:</span> <span class="hljs-string">com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler</span><br>  <span class="hljs-comment"># 全局配置</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-comment"># 数据库配置</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-comment"># 配置MyBatis-Plus的主键策略</span><br>      <span class="hljs-attr">id-type:</span> <span class="hljs-string">assign_id</span><br>      <span class="hljs-comment"># 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span><br>      <span class="hljs-attr">logic-delete-field:</span> <span class="hljs-string">deleted</span><br>      <span class="hljs-comment"># 逻辑已删除值(默认为 1)</span><br>      <span class="hljs-attr">logic-delete-value:</span> <span class="hljs-number">1</span><br>      <span class="hljs-comment"># 逻辑未删除值(默认为 0)</span><br>      <span class="hljs-attr">logic-not-delete-value:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="使用">使用</h3><h4 id="调用方">调用方</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 模拟用户下单并立即支付的场景</span><br><span class="hljs-meta">@GlobalTransactional(rollbackFor = Exception.class)</span><br><span class="hljs-meta">@ShardingTransactionType(TransactionType.BASE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buyItem</span><span class="hljs-params">(OrderDTO orderDTO)</span> &#123;<br>    <span class="hljs-comment">// 通过openfeign的核心调用，其他的语句已省略。</span><br>    itemClient.update(orderDTO.getItemId(), orderDTO.getAmount());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="被调用方">被调用方</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 扣减用户余额</span><br><span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br><span class="hljs-meta">@ShardingTransactionType(TransactionType.BASE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">updateUserMoney</span><span class="hljs-params">(BigDecimal money, Long id)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> userMapper.updateMoney(money, id);<br>    <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SQLException</span>(<span class="hljs-string">&quot;更新失败！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="注意事项："><strong>注意事项：</strong></h2><h3 id="枚举类异常问题">枚举类异常问题</h3><p><code>shardingsphere</code>与<code>mybatisplus</code>一起使用时，对于枚举类可能会出现异常：<code>InvalidDataAccessApiUsageException: Error attempting to get column 'status' from result set.  Cause: java.sql.SQLFeatureNotSupportedException: getObject with type。</code>这主要是因为<code>shardingsphere</code>与当前版本的<code>mybatisplus</code>不兼容。</p><p>根据参考资料2，mybatisplus3.4.1虽然不会出现这个问题，但是这个版本查询出来的数据，对应的枚举类是null值，也是有问题，3.4.3以上没有这问题，但是又与shardingsphere冲突导致出现枚举类异常，而且mybatisplus官方说不做这个组件的兼容。所以需要自行处理。</p><h4 id="方法一：不使用枚举类">方法一：不使用枚举类</h4><p>既然是枚举类异常，那就不使用枚举类不就好了，这样倒是简单粗暴，但是并不是解决问题的好方法</p><h4 id="方法二：自定义类型处理器方法">方法二：自定义类型处理器方法</h4><h5 id="1、枚举类">1、枚举类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.order.enums;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.annotation.JsonValue;<br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OrderStatusEnums</span>&#123;<br><br>    WAITING_PAYMENT(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;待付款&quot;</span>),<br>    PAID(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;已付款&quot;</span>),<br>    WAITING_DELIVER(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;待发货&quot;</span>),<br>    WAITING_RECEIVE(<span class="hljs-number">3</span>,  <span class="hljs-string">&quot;待收货&quot;</span>),<br>    FINISHED(<span class="hljs-number">4</span>,  <span class="hljs-string">&quot;已完成&quot;</span>),<br>    CANCELED(<span class="hljs-number">5</span>,  <span class="hljs-string">&quot;已取消&quot;</span>);<br><br>    <span class="hljs-meta">@EnumValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-meta">@JsonValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br><br>    OrderStatusEnums(<span class="hljs-type">int</span> code, String message) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br>    <span class="hljs-comment">// 根据数据库值获取枚举</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> OrderStatusEnums <span class="hljs-title function_">fromDbCode</span><span class="hljs-params">(String dbCode)</span> &#123;<br>        <span class="hljs-keyword">for</span> (OrderStatusEnums orderStatusEnums : values()) &#123;<br>            <span class="hljs-keyword">if</span> (orderStatusEnums.code == Integer.parseInt(dbCode) || orderStatusEnums.name().equals(dbCode)) &#123;<br>                <span class="hljs-keyword">return</span> orderStatusEnums;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Unknown color code: &quot;</span> + dbCode);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2、枚举类处理方法">2、枚举类处理方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.order.enums.handler;<br><br><span class="hljs-keyword">import</span> com.alibaba.druid.util.StringUtils;<br><span class="hljs-keyword">import</span> com.order.enums.OrderStatusEnums;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.BaseTypeHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.JdbcType;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.MappedJdbcTypes;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.MappedTypes;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.sql.CallableStatement;<br><span class="hljs-keyword">import</span> java.sql.PreparedStatement;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-comment">// 定义转换器支持的JAVA类型</span><br><span class="hljs-meta">@MappedTypes(OrderStatusEnums.class)</span><br><span class="hljs-comment">// 定义转换器支持的数据库类型</span><br><span class="hljs-meta">@MappedJdbcTypes(value = JdbcType.INTEGER, includeNullJdbcType = true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderStatusEnumsTypeHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseTypeHandler</span>&lt;OrderStatusEnums&gt; &#123;<br><br>    <span class="hljs-comment">// 写入数据库（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setNonNullParameter</span><span class="hljs-params">(PreparedStatement ps, <span class="hljs-type">int</span> i, OrderStatusEnums parameter, JdbcType jdbcType)</span><br>            <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-keyword">if</span> (parameter != <span class="hljs-literal">null</span>) &#123;<br>            ps.setString(i, String.valueOf(parameter.getCode()));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 按列名读取（最常用）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(ResultSet rs, String columnName)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> rs.getString(columnName);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br><br>    <span class="hljs-comment">// 按列序号读取（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(ResultSet rs, <span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> rs.getString(columnIndex);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br><br>    <span class="hljs-comment">// 存储过程读取（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(CallableStatement cs, <span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> cs.getString(columnIndex);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="3、注册到mybatis">3、注册到mybatis</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mybatis-plus:</span><br><span class="hljs-attr">type-handlers-package:</span> <span class="hljs-string">com.order.domain.enums.handler</span><br></code></pre></td></tr></table></figure><h5 id="4、指定需要处理的属性-可选">4、指定需要处理的属性(可选)</h5><p>若无法正常转换的话，指定一下试试，我试过的情况是，自定义的类型处理器只要被扫描到，就可以生效。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.order.mapper.OrderMapper&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;BaseResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;com.order.domain.Order&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;itemId&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;itemId&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;amount&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;amount&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;INTEGER&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;price&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;price&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;DECIMAL&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;status&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;status&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;INTEGER&quot;</span> <span class="hljs-attr">typeHandler</span>=<span class="hljs-string">&quot;com.order.enums.handler.OrderStatusEnumsTypeHandler&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;Base_Column_List&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>            id,user_id,item_id,amount,price,`status`<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="日期类异常">日期类异常</h3><p>在搜索枚举类异常问题解决方法时，很多人都出现过日期时间类型也会报错的问题。同样也是缺少对应的处理器，可通过引入依赖解决日期相关问题。可参考参考资料3。</p><p>这个依赖中，包含了多种日期相关的类型处理器。</p><p>此依赖是直接加入到了mybatis的类型处理中，所以无需额外配置即可生效。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-typehandlers-jsr310<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="数据源不能为空异常">数据源不能为空异常</h3><p>对于无需直接访问数据库的服务，作为入口分布式调用入口，会出现数据源不能为空的错误，所以需要在启动类中排除对应的自动装配，参考资料4。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@EnableFeignClients(basePackages = &quot;com.business.feign&quot;, defaultConfiguration = DefaultFeignConfig.class)</span><br><span class="hljs-meta">@EnableDiscoveryClient</span><br><span class="hljs-comment">// 由于sharding-jdbc的starter会自动引入数据源，但是这个服务并不需要直接与数据库沟通，而是访问其他服务，所以需要排除掉</span><br><span class="hljs-meta">@SpringBootApplication(exclude=&#123;DataSourceAutoConfiguration.class, SpringBootConfiguration.class&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BusinessApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(BusinessApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="参考资料：">参考资料：</h2><ol><li><a href="https://blog.csdn.net/qq_42703153/article/details/129880291">Shardingsphere-jdbc整合Feign、Seata AT 模式实现分布式事务的解决方案</a></li><li><a href="https://gitee.com/baomidou/mybatis-plus/issues/I3Z0GW">整合sharding jdbc查询时，枚举类型出错</a></li><li><a href="https://blog.csdn.net/weixin_43939708/article/details/124617951">sharding-jdbc 出现 java.sql.SQLFeatureNotSupportedException: getObject with type 异常处理</a></li><li><a href="https://blog.csdn.net/weixin_44945027/article/details/123796844">sharding-jdbc Data sources cannot be empty.</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F/">分布式</category>
      
      
      <category domain="https://superlovelace.top/tags/ShardingJdbc/">ShardingJdbc</category>
      
      <category domain="https://superlovelace.top/tags/Seata/">Seata</category>
      
      
      <comments>https://superlovelace.top/2025/05/22/Sharding-jdbc4.1.1%20+%20Seata1.6.1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ShardingSphere5.2.1 + Seata1.6.1</title>
      <link>https://superlovelace.top/2025/05/20/ShardingSphere5.2.1%20+%20Seata1.6.1/</link>
      <guid>https://superlovelace.top/2025/05/20/ShardingSphere5.2.1%20+%20Seata1.6.1/</guid>
      <pubDate>Tue, 20 May 2025 12:39:19 GMT</pubDate>
      
      <description>shardingsphere5.2.1分库分表+分布式事务seata的整合记录</description>
      
      
      
      <content:encoded><![CDATA[<h1>ShardingSphere5.2.1 + Seata1.6.1</h1><h2 id="准备">准备</h2><h3 id="外围环境">外围环境</h3><h4 id="1、Nacos服务">1、Nacos服务</h4><p>nacos官网地址：<a href="https://nacos.io/zh-cn/">https://nacos.io/zh-cn/</a></p><p>Nacos服务下载地址：<a href="https://github.com/alibaba/nacos/releases?page=2">https://github.com/alibaba/nacos/releases?page=2</a></p><p>详情请移步nacos笔记查看。</p><h4 id="2、Seata服务-1-6-1">2、Seata服务 1.6.1</h4><p>Seata官网地址：<a href="https://seata.apache.org/zh-cn/release-history/seata-server">https://seata.apache.org/zh-cn/release-history/seata-server</a></p><p>springboot2.7.18对应的springcloud alibaba下的seata就是1.6.1版本</p><p>详情请移步seata笔记查看。</p><h4 id="3、mysql-5-7（搭配MGR实现高可用集群）">3、mysql 5.7（搭配MGR实现高可用集群）</h4><p>高可用是搭配动态数据源策略使用的，这里也可以不用高可用，那样的话就采取静态策略即可。</p><p>详情请移步mysqlMGR集群笔记查看。</p><h2 id="步骤">步骤</h2><h3 id="Maven依赖">Maven依赖</h3><p><code>父类依赖</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.18<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- spring-cloud-alibaba 版本号 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">spring-cloud-alibaba.version</span>&gt;</span>2021.0.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">spring-cloud-alibaba.version</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- spring-cloud 版本号 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">spring-cloud.version</span>&gt;</span>2021.0.5<span class="hljs-tag">&lt;/<span class="hljs-name">spring-cloud.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">snakeyaml.version</span>&gt;</span>1.33<span class="hljs-tag">&lt;/<span class="hljs-name">snakeyaml.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">druid.version</span>&gt;</span>1.2.6<span class="hljs-tag">&lt;/<span class="hljs-name">druid.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">knife4j-openapi2-spring-boot-starter.version</span>&gt;</span>4.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">knife4j-openapi2-spring-boot-starter.version</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- hutool-all 工具包 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">hutool.version</span>&gt;</span>5.8.34<span class="hljs-tag">&lt;/<span class="hljs-name">hutool.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- spring-cloud 微服务依赖（如 Eureka、Consul、Zuul、OpenFeign等）--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.yaml<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>snakeyaml<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;snakeyaml.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 用于初始化数据库表和数据 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.liquibase<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>liquibase-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;liquibase-core.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span> <span class="hljs-comment">&lt;!-- 2023年最新稳定版 --&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-openapi2-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;knife4j-openapi2-spring-boot-starter.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- hutool工具包 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencyManagement</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>子类依赖</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- nacos注册中心 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 负载均衡 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- nacos配置管理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--seata--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.antlr<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>antlr4-runtime<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 读取bootstrap文件 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- web --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- yml解析 &gt; 解决shardingshpere找不到算法的更新配置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.yaml<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>snakeyaml<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- druid 数据源 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br><span class="hljs-comment">&lt;!-- mysql驱动 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.33<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- lombok --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- mybatis-plus --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- shardingsphere-jdbc --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shardingsphere-jdbc-core-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- transaction 用于整合seata分布式事务 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shardingsphere-transaction-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- spring-aop 代理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- hutool工具包 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- knife4j --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-openapi2-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="application-yaml"><code>application.yaml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">10010</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">user-service</span><br><br>  <span class="hljs-attr">shardingsphere:</span><br>    <span class="hljs-attr">props:</span><br>      <span class="hljs-attr">sql-show:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">datasource:</span><br>      <span class="hljs-attr">names:</span> <span class="hljs-string">ds_0,ds_1,ds_2</span><br>      <span class="hljs-attr">ds_0:</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>        <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br>      <span class="hljs-attr">ds_1:</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>        <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br>      <span class="hljs-attr">ds_2:</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/db_01?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>        <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br>    <span class="hljs-attr">rules:</span><br>      <span class="hljs-attr">readwrite-splitting:</span><br>        <span class="hljs-attr">data-sources:</span><br>          <span class="hljs-attr">rw_1:</span><br>          <span class="hljs-comment"># 静态数据源策略</span><br><span class="hljs-comment">#            static-strategy:</span><br><span class="hljs-comment">#              write-data-source-name: ds_0</span><br><span class="hljs-comment">#              read-data-source-names: ds_1,ds_2</span><br><span class="hljs-comment"># 动态数据源策略</span><br>            <span class="hljs-attr">dynamic-strategy:</span><br>              <span class="hljs-comment"># 数据源名称</span><br>              <span class="hljs-attr">auto-aware-data-source-name:</span> <span class="hljs-string">auto_datasource_1</span><br>              <span class="hljs-comment"># 是否开启自动获取数据源</span><br>              <span class="hljs-attr">write-data-source-query-enabled:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">load-balancer-name:</span> <span class="hljs-string">round-robin</span><br><br>        <span class="hljs-comment"># 负载均衡</span><br>        <span class="hljs-attr">load-balancers:</span><br>          <span class="hljs-comment"># 轮询</span><br>          <span class="hljs-attr">round-robin:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">ROUND_ROBIN</span><br>          <span class="hljs-comment"># 随机</span><br>          <span class="hljs-attr">random:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">RANDOM</span><br>            <span class="hljs-attr">props:</span><br>          <span class="hljs-comment"># 权重</span><br>          <span class="hljs-attr">weight:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">WEIGHT</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">weight-data-sources:</span> <span class="hljs-string">ds_1=1,ds_2=1</span><br>          <span class="hljs-comment"># 事务随机</span><br>          <span class="hljs-attr">transaction-random:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">TRANSACTION_RANDOM</span><br>          <span class="hljs-comment"># 事务轮询</span><br>          <span class="hljs-attr">transaction_round_robin:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">TRANSACTION_ROUND_ROBIN</span><br>          <span class="hljs-comment"># 事务权重</span><br>          <span class="hljs-attr">transaction_weight:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">TRANSACTION_WEIGHT</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">weight-data-sources:</span> <span class="hljs-string">ds_1=1,ds_2=1</span><br>          <span class="hljs-comment"># 固定副本随机</span><br>          <span class="hljs-attr">fixed_replica_random:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">FIXED_REPLICA_RANDOM</span><br>          <span class="hljs-comment"># 固定副本轮询</span><br>          <span class="hljs-attr">fixed_replica_round_robin:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">FIXED_REPLICA_ROUND_ROBIN</span><br>          <span class="hljs-comment"># 固定副本权重</span><br>          <span class="hljs-attr">fixed_replica_weight:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">FIXED_REPLICA_WEIGHT</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">weight-data-sources:</span> <span class="hljs-string">ds_1=1,ds_2=1</span><br>          <span class="hljs-comment"># 固定主库</span><br>          <span class="hljs-attr">fixed_primary:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">FIXED_PRIMARY</span><br>      <span class="hljs-comment"># 数据库发现(高可用) : 这里会检查数据源host和port是否与数据库查到的host和port一致，不一致就会报MGR组信息不可用错误</span><br>      <span class="hljs-attr">database-discovery:</span><br>        <span class="hljs-attr">data-sources:</span><br>          <span class="hljs-attr">auto_datasource_1:</span><br>            <span class="hljs-attr">data-source-names:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">ds_0</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">ds_1</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">ds_2</span><br>            <span class="hljs-attr">discovery-heartbeat-name:</span> <span class="hljs-string">hrb_1</span><br>            <span class="hljs-attr">discovery-type-name:</span> <span class="hljs-string">mgr_1</span><br>        <span class="hljs-attr">discovery-heartbeats:</span><br>          <span class="hljs-attr">hrb_1:</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">keep-alive-corn:</span> <span class="hljs-string">&#x27;0/5 * * * * ?&#x27;</span><br>        <span class="hljs-attr">discovery-types:</span><br>          <span class="hljs-attr">mgr_1:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;MySQL.MGR&#x27;</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">group-name:</span> <span class="hljs-string">&#x27;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&#x27;</span><br>      <span class="hljs-attr">sharding:</span><br><br>        <span class="hljs-comment"># 数据表分片配置</span><br>        <span class="hljs-attr">tables:</span><br>          <span class="hljs-attr">t_user:</span><br>            <span class="hljs-comment"># 数据源名</span><br>            <span class="hljs-attr">actual-data-nodes:</span> <span class="hljs-string">rw_1.t_user_$-&gt;&#123;0..1&#125;</span><br>            <span class="hljs-comment"># 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一</span><br>            <span class="hljs-attr">table-strategy:</span><br>              <span class="hljs-comment"># 用于单分片键的标准分片场景</span><br>              <span class="hljs-attr">standard:</span><br>                <span class="hljs-comment"># 分片列名称</span><br>                <span class="hljs-attr">sharding-column:</span> <span class="hljs-string">id</span><br>                <span class="hljs-comment"># 分片算法名称</span><br>                <span class="hljs-attr">sharding-algorithm-name:</span> <span class="hljs-string">t-user-inline</span><br>            <span class="hljs-comment"># 主键生成策略</span><br>            <span class="hljs-attr">key-generate-strategy:</span><br>              <span class="hljs-comment"># 分片列名称</span><br>              <span class="hljs-attr">column:</span> <span class="hljs-string">id</span><br>              <span class="hljs-comment"># 主键生成器名称</span><br>              <span class="hljs-attr">key-generator-name:</span> <span class="hljs-string">snowflake</span><br>        <span class="hljs-comment"># 分片算法配置</span><br>        <span class="hljs-attr">sharding-algorithms:</span><br>          <span class="hljs-comment"># 表达式分片算法</span><br>          <span class="hljs-attr">t-user-inline:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">INLINE</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">algorithm-expression:</span> <span class="hljs-string">t_user_$-&gt;&#123;id</span> <span class="hljs-string">%</span> <span class="hljs-number">2</span><span class="hljs-string">&#125;</span><br>        <span class="hljs-comment"># 主键生成配置</span><br>        <span class="hljs-attr">key-generators:</span><br>          <span class="hljs-attr">snowflake:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">SNOWFLAKE</span><br>            <span class="hljs-attr">props:</span><br>              <span class="hljs-attr">worker-id:</span> <span class="hljs-number">1</span><br>  <span class="hljs-comment"># nacos配置</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-comment"># 配置中心</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">public</span><br>      <span class="hljs-comment"># 注册中心</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">public</span><br>        <span class="hljs-attr">group:</span> <span class="hljs-string">SEATA_GROUP</span><br><br><span class="hljs-comment"># seata配置</span><br><span class="hljs-attr">seata:</span><br>  <span class="hljs-comment"># 是否开启seata</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># Seata 这里对应seata内的配置</span><br>  <span class="hljs-attr">application-id:</span> <span class="hljs-string">seata-server</span><br>  <span class="hljs-comment"># Seata 事务组编号，用于 TC 集群名</span><br>  <span class="hljs-attr">tx-service-group:</span> <span class="hljs-string">test-tx-group</span><br>  <span class="hljs-comment"># 是否开启数据源代理</span><br>  <span class="hljs-attr">enable-auto-data-source-proxy:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">data-source-proxy-mode:</span> <span class="hljs-string">AT</span><br>  <span class="hljs-comment"># 服务配置项</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-comment"># 虚拟组和分组的映射</span><br>    <span class="hljs-attr">vgroup-mapping:</span><br>      <span class="hljs-attr">test-tx-group:</span> <span class="hljs-string">default</span><br>    <span class="hljs-comment"># 分组和 Seata 服务的映射</span><br>    <span class="hljs-attr">grouplist:</span><br>      <span class="hljs-attr">default:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8091</span><br></code></pre></td></tr></table></figure><h3 id="关键配置">关键配置</h3><h4 id="在java目录下创建以下文件夹">在java目录下创建以下文件夹</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shardingsphere</span><span class="hljs-selector-class">.transaction</span><span class="hljs-selector-class">.base</span><span class="hljs-selector-class">.seata</span>.at<br></code></pre></td></tr></table></figure><h5 id="新建三个文件">新建三个文件</h5><h6 id="文件1">文件1</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"> * contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"> * this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="hljs-comment"> * the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.apache.shardingsphere.transaction.base.seata.at;<br><br><span class="hljs-keyword">import</span> com.google.common.base.Preconditions;<br><span class="hljs-keyword">import</span> io.seata.config.FileConfiguration;<br><span class="hljs-keyword">import</span> io.seata.core.context.RootContext;<br><span class="hljs-keyword">import</span> io.seata.core.exception.TransactionException;<br><span class="hljs-keyword">import</span> io.seata.core.rpc.netty.RmNettyRemotingClient;<br><span class="hljs-keyword">import</span> io.seata.core.rpc.netty.TmNettyRemotingClient;<br><span class="hljs-keyword">import</span> io.seata.rm.RMClient;<br><span class="hljs-keyword">import</span> io.seata.rm.datasource.DataSourceProxy;<br><span class="hljs-keyword">import</span> io.seata.tm.TMClient;<br><span class="hljs-keyword">import</span> io.seata.tm.api.GlobalTransaction;<br><span class="hljs-keyword">import</span> io.seata.tm.api.GlobalTransactionContext;<br><span class="hljs-keyword">import</span> lombok.SneakyThrows;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.infra.database.type.DatabaseType;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.transaction.core.ResourceDataSource;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.transaction.core.TransactionType;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.transaction.spi.ShardingSphereTransactionManager;<br><br><span class="hljs-keyword">import</span> javax.sql.DataSource;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.util.Collection;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Seata AT transaction manager.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SeataATShardingSphereTransactionManager</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ShardingSphereTransactionManager</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Map&lt;String, DataSource&gt; dataSourceMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String applicationId;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String transactionServiceGroup;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> enableSeataAT;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> globalTXTimeout;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SeataATShardingSphereTransactionManager</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">FileConfiguration</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileConfiguration</span>(<span class="hljs-string">&quot;seata.conf&quot;</span>);<br>        enableSeataAT = config.getBoolean(<span class="hljs-string">&quot;sharding.transaction.seata.at.enable&quot;</span>, <span class="hljs-literal">true</span>);<br>        applicationId = config.getConfig(<span class="hljs-string">&quot;client.application.id&quot;</span>);<br>        transactionServiceGroup = config.getConfig(<span class="hljs-string">&quot;client.transaction.service.group&quot;</span>, <span class="hljs-string">&quot;default&quot;</span>);<br>        globalTXTimeout = config.getInt(<span class="hljs-string">&quot;sharding.transaction.seata.tx.timeout&quot;</span>, <span class="hljs-number">60</span>);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(<span class="hljs-keyword">final</span> DatabaseType databaseType, <span class="hljs-keyword">final</span> Collection&lt;ResourceDataSource&gt; resourceDataSources, <span class="hljs-keyword">final</span> String providerType)</span> &#123;<br>        <span class="hljs-keyword">if</span> (enableSeataAT) &#123;<br>            initSeataRPCClient();<br>            resourceDataSources.forEach(each -&gt; dataSourceMap.put(each.getOriginalName(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceProxy</span>(each.getDataSource())));<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">initSeataRPCClient</span><span class="hljs-params">()</span> &#123;<br>        Preconditions.checkNotNull(applicationId, <span class="hljs-string">&quot;please config application id within seata.conf file.&quot;</span>);<br>        TMClient.init(applicationId, transactionServiceGroup);<br>        RMClient.init(applicationId, transactionServiceGroup);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> TransactionType <span class="hljs-title function_">getTransactionType</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> TransactionType.BASE;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isInTransaction</span><span class="hljs-params">()</span> &#123;<br>        Preconditions.checkState(enableSeataAT, <span class="hljs-string">&quot;sharding seata-at transaction has been disabled.&quot;</span>);<br>        <span class="hljs-comment">//return null != RootContext.getXID();</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span> != SeataTransactionHolder.get();<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Connection <span class="hljs-title function_">getConnection</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String databaseName, <span class="hljs-keyword">final</span> String dataSourceName)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        Preconditions.checkState(enableSeataAT, <span class="hljs-string">&quot;sharding seata-at transaction has been disabled.&quot;</span>);<br>        <span class="hljs-keyword">return</span> dataSourceMap.get(databaseName + <span class="hljs-string">&quot;.&quot;</span> + dataSourceName).getConnection();<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">begin</span><span class="hljs-params">()</span> &#123;<br>        begin(globalTXTimeout);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@SneakyThrows(TransactionException.class)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">begin</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-type">int</span> timeout)</span> &#123;<br>        <span class="hljs-keyword">if</span> (timeout &lt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransactionException</span>(<span class="hljs-string">&quot;timeout should more than 0s&quot;</span>);<br>        &#125;<br>        Preconditions.checkState(enableSeataAT, <span class="hljs-string">&quot;sharding seata-at transaction has been disabled.&quot;</span>);<br>        <span class="hljs-type">GlobalTransaction</span> <span class="hljs-variable">globalTransaction</span> <span class="hljs-operator">=</span> GlobalTransactionContext.getCurrentOrCreate();<br>        globalTransaction.begin(timeout * <span class="hljs-number">1000</span>);<br>        SeataTransactionHolder.set(globalTransaction);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@SneakyThrows(TransactionException.class)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">commit</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> rollbackOnly)</span> &#123;<br>        Preconditions.checkState(enableSeataAT, <span class="hljs-string">&quot;sharding seata-at transaction has been disabled.&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            SeataTransactionHolder.get().commit();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            SeataTransactionHolder.clear();<br>            RootContext.unbind();<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@SneakyThrows(TransactionException.class)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">rollback</span><span class="hljs-params">()</span> &#123;<br>        Preconditions.checkState(enableSeataAT, <span class="hljs-string">&quot;sharding seata-at transaction has been disabled.&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            SeataTransactionHolder.get().rollback();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            SeataTransactionHolder.clear();<br>            RootContext.unbind();<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> &#123;<br>        dataSourceMap.clear();<br>        SeataTransactionHolder.clear();<br>        RmNettyRemotingClient.getInstance().destroy();<br>        TmNettyRemotingClient.getInstance().destroy();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="文件2">文件2</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"> * contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"> * this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="hljs-comment"> * the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.apache.shardingsphere.transaction.base.seata.at;<br><br><span class="hljs-keyword">import</span> io.seata.tm.api.GlobalTransaction;<br><span class="hljs-keyword">import</span> lombok.AccessLevel;<br><span class="hljs-keyword">import</span> lombok.NoArgsConstructor;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Seata transaction holder.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@NoArgsConstructor(access = AccessLevel.PRIVATE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SeataTransactionHolder</span> &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ThreadLocal&lt;GlobalTransaction&gt; CONTEXT = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadLocal</span>&lt;&gt;();<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Set seata global transaction.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> transaction global transaction context</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">set</span><span class="hljs-params">(<span class="hljs-keyword">final</span> GlobalTransaction transaction)</span> &#123;<br>        CONTEXT.set(transaction);<br>    &#125;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Get seata global transaction.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> global transaction</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> GlobalTransaction <span class="hljs-title function_">get</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> CONTEXT.get();<br>    &#125;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Clear global transaction.</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">clear</span><span class="hljs-params">()</span> &#123;<br>        CONTEXT.remove();<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h6 id="文件3">文件3</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"> * contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"> * this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="hljs-comment"> * the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> org.apache.shardingsphere.transaction.base.seata.at;<br><br><span class="hljs-keyword">import</span> io.seata.core.context.RootContext;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.infra.database.metadata.DataSourceMetaData;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.infra.executor.kernel.model.ExecutorDataMap;<br><span class="hljs-keyword">import</span> org.apache.shardingsphere.infra.executor.sql.hook.SQLExecutionHook;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Seata transactional SQL execution hook.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TransactionalSQLExecutionHook</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">SQLExecutionHook</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">SEATA_TX_XID</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SEATA_TX_XID&quot;</span>;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> seataBranch;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">start</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String dataSourceName, <span class="hljs-keyword">final</span> String sql, <span class="hljs-keyword">final</span> List&lt;Object&gt; parameters,</span><br><span class="hljs-params">                      <span class="hljs-keyword">final</span> DataSourceMetaData dataSourceMetaData, <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> isTrunkThread, <span class="hljs-keyword">final</span> Map&lt;String, Object&gt; shardingExecuteDataMap)</span> &#123;<br>        <span class="hljs-keyword">if</span> (isTrunkThread) &#123;<br>            <span class="hljs-keyword">if</span> (RootContext.inGlobalTransaction()) &#123;<br>                ExecutorDataMap.getValue().put(SEATA_TX_XID, RootContext.getXID());<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!RootContext.inGlobalTransaction() &amp;&amp; shardingExecuteDataMap.containsKey(SEATA_TX_XID)) &#123;<br>            RootContext.bind((String) shardingExecuteDataMap.get(SEATA_TX_XID));<br>            seataBranch = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">finishSuccess</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (seataBranch) &#123;<br>            RootContext.unbind();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">finishFailure</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Exception cause)</span> &#123;<br>        <span class="hljs-keyword">if</span> (seataBranch) &#123;<br>            RootContext.unbind();<br>        &#125;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h4 id="在resources目录下创建以下文件夹">在resources目录下创建以下文件夹</h4><p>这种是使用了SPI机制</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/META-INF/</span>services<br></code></pre></td></tr></table></figure><h5 id="新建两个文件">新建两个文件</h5><h6 id="文件1-2">文件1</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">文件名称：org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shardingsphere</span><span class="hljs-selector-class">.infra</span><span class="hljs-selector-class">.executor</span><span class="hljs-selector-class">.sql</span><span class="hljs-selector-class">.hook</span><span class="hljs-selector-class">.SQLExecutionHook</span><br>文件内容：<br>org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shardingsphere</span><span class="hljs-selector-class">.transaction</span><span class="hljs-selector-class">.base</span><span class="hljs-selector-class">.seata</span><span class="hljs-selector-class">.at</span>.TransactionalSQLExecutionHook<br></code></pre></td></tr></table></figure><h6 id="文件2-2">文件2</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">文件名称：org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shardingsphere</span><span class="hljs-selector-class">.transaction</span><span class="hljs-selector-class">.spi</span><span class="hljs-selector-class">.ShardingSphereTransactionManager</span><br>文件内容：<br>org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shardingsphere</span><span class="hljs-selector-class">.transaction</span><span class="hljs-selector-class">.base</span><span class="hljs-selector-class">.seata</span><span class="hljs-selector-class">.at</span>.SeataATShardingSphereTransactionManager<br></code></pre></td></tr></table></figure><h3 id="使用">使用</h3><h4 id="调用方">调用方</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 模拟用户下单并立即支付的场景</span><br><span class="hljs-meta">@GlobalTransactional(rollbackFor = Exception.class)</span><br><span class="hljs-meta">@ShardingSphereTransactionType(TransactionType.BASE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buyItem</span><span class="hljs-params">(OrderDTO orderDTO)</span> &#123;<br>    <span class="hljs-comment">// 通过openfeign的核心调用，其他的语句已省略。</span><br>    itemClient.update(orderDTO.getItemId(), orderDTO.getAmount());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="被调用方">被调用方</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 扣减用户余额</span><br><span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br><span class="hljs-meta">@ShardingSphereTransactionType(TransactionType.BASE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">updateUserMoney</span><span class="hljs-params">(BigDecimal money, Long id)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> userMapper.updateMoney(money, id);<br>    <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SQLException</span>(<span class="hljs-string">&quot;更新失败！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="注意事项："><strong>注意事项：</strong></h2><h3 id="枚举类异常问题">枚举类异常问题</h3><p><code>shardingsphere</code>与<code>mybatisplus</code>一起使用时，对于枚举类可能会出现异常：<code>InvalidDataAccessApiUsageException: Error attempting to get column 'status' from result set.  Cause: java.sql.SQLFeatureNotSupportedException: getObject with type。</code>这主要是因为<code>shardingsphere</code>与当前版本的<code>mybatisplus</code>不兼容。</p><p>根据参考资料2，mybatisplus3.4.1虽然不会出现这个问题，但是这个版本查询出来的数据，对应的枚举类是null值，也是有问题，3.4.3以上没有这问题，但是又与shardingsphere冲突导致出现枚举类异常，而且mybatisplus官方说不做这个组件的兼容。所以需要自行处理。</p><h4 id="方法一：不使用枚举类">方法一：不使用枚举类</h4><p>既然是枚举类异常，那就不使用枚举类不就好了，这样倒是简单粗暴，但是并不是解决问题的好方法</p><h4 id="方法二：自定义类型处理器方法">方法二：自定义类型处理器方法</h4><h5 id="1、枚举类">1、枚举类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.order.enums;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.annotation.JsonValue;<br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OrderStatusEnums</span>&#123;<br><br>    WAITING_PAYMENT(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;待付款&quot;</span>),<br>    PAID(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;已付款&quot;</span>),<br>    WAITING_DELIVER(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;待发货&quot;</span>),<br>    WAITING_RECEIVE(<span class="hljs-number">3</span>,  <span class="hljs-string">&quot;待收货&quot;</span>),<br>    FINISHED(<span class="hljs-number">4</span>,  <span class="hljs-string">&quot;已完成&quot;</span>),<br>    CANCELED(<span class="hljs-number">5</span>,  <span class="hljs-string">&quot;已取消&quot;</span>);<br><br>    <span class="hljs-meta">@EnumValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-meta">@JsonValue</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br><br>    OrderStatusEnums(<span class="hljs-type">int</span> code, String message) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br>    <span class="hljs-comment">// 根据数据库值获取枚举</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> OrderStatusEnums <span class="hljs-title function_">fromDbCode</span><span class="hljs-params">(String dbCode)</span> &#123;<br>        <span class="hljs-keyword">for</span> (OrderStatusEnums orderStatusEnums : values()) &#123;<br>            <span class="hljs-keyword">if</span> (orderStatusEnums.code == Integer.parseInt(dbCode) || orderStatusEnums.name().equals(dbCode)) &#123;<br>                <span class="hljs-keyword">return</span> orderStatusEnums;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Unknown color code: &quot;</span> + dbCode);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2、枚举类处理方法">2、枚举类处理方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.order.enums.handler;<br><br><span class="hljs-keyword">import</span> com.alibaba.druid.util.StringUtils;<br><span class="hljs-keyword">import</span> com.order.enums.OrderStatusEnums;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.BaseTypeHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.JdbcType;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.MappedJdbcTypes;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.MappedTypes;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.sql.CallableStatement;<br><span class="hljs-keyword">import</span> java.sql.PreparedStatement;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-comment">// 定义转换器支持的JAVA类型</span><br><span class="hljs-meta">@MappedTypes(OrderStatusEnums.class)</span><br><span class="hljs-comment">// 定义转换器支持的数据库类型</span><br><span class="hljs-meta">@MappedJdbcTypes(value = JdbcType.INTEGER, includeNullJdbcType = true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderStatusEnumsTypeHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseTypeHandler</span>&lt;OrderStatusEnums&gt; &#123;<br><br>    <span class="hljs-comment">// 写入数据库（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setNonNullParameter</span><span class="hljs-params">(PreparedStatement ps, <span class="hljs-type">int</span> i, OrderStatusEnums parameter, JdbcType jdbcType)</span><br>            <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-keyword">if</span> (parameter != <span class="hljs-literal">null</span>) &#123;<br>            ps.setString(i, String.valueOf(parameter.getCode()));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 按列名读取（最常用）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(ResultSet rs, String columnName)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> rs.getString(columnName);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br><br>    <span class="hljs-comment">// 按列序号读取（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(ResultSet rs, <span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> rs.getString(columnIndex);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br><br>    <span class="hljs-comment">// 存储过程读取（必须）</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> OrderStatusEnums <span class="hljs-title function_">getNullableResult</span><span class="hljs-params">(CallableStatement cs, <span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> cs.getString(columnIndex);<br>        <span class="hljs-keyword">if</span> (StringUtils.isEmpty(code)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> OrderStatusEnums.fromDbCode(code);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="3、注册到mybatis">3、注册到mybatis</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mybatis-plus:</span><br><span class="hljs-attr">type-handlers-package:</span> <span class="hljs-string">com.order.domain.enums.handler</span><br></code></pre></td></tr></table></figure><h4 id="4、指定需要处理的属性-可选">4、指定需要处理的属性(可选)</h4><p>若无法正常转换的话，指定一下试试，我试过的情况是，自定义的类型处理器只要被扫描到，就可以生效。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.order.mapper.OrderMapper&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;BaseResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;com.order.domain.Order&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;itemId&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;itemId&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;BIGINT&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;amount&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;amount&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;INTEGER&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;price&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;price&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;DECIMAL&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;status&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;status&quot;</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">&quot;INTEGER&quot;</span> <span class="hljs-attr">typeHandler</span>=<span class="hljs-string">&quot;com.order.enums.handler.OrderStatusEnumsTypeHandler&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;Base_Column_List&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>            id,user_id,item_id,amount,price,`status`<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="日期类异常">日期类异常</h3><p>在搜索枚举类异常问题解决方法时，很多人都出现过日期时间类型也会报错的问题。同样也是缺少对应的处理器，可通过引入依赖解决日期相关问题。可参考参考资料3。</p><p>这个依赖中，包含了多种日期相关的类型处理器。</p><p>此依赖是直接加入到了mybatis的类型处理中，所以无需额外配置即可生效。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-typehandlers-jsr310<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="数据源不能为空异常">数据源不能为空异常</h3><p>对于无需直接访问数据库的服务，作为入口分布式调用入口，会出现数据源不能为空的错误，所以需要在启动类中排除对应的自动装配，参考资料4。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@EnableFeignClients(basePackages = &quot;com.business.feign&quot;, defaultConfiguration = DefaultFeignConfig.class)</span><br><span class="hljs-meta">@EnableDiscoveryClient</span><br><span class="hljs-comment">// 由于sharding-jdbc的starter会自动引入数据源，但是这个服务并不需要直接与数据库沟通，而是访问其他服务，所以需要排除掉</span><br><span class="hljs-meta">@SpringBootApplication(exclude=&#123;DataSourceAutoConfiguration.class, SpringBootConfiguration.class&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BusinessApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(BusinessApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="备注">备注</h3><p>若可以的话，更推荐使用sharding-jdbc4.1.1的spring starter。因为这个为了解决与seata整合时出现的问题使用的解决方法不是很推荐，像deepseek说在自己项目里创建与sharding依赖内的包相同容易产生违反开源协议的问题。若不是必须要用sharding5.x版本的新特性的话，更推荐4.1.1版本，详情查看4.1.1版本的整合记录。</p><h2 id="参考资料：">参考资料：</h2><ol><li><a href="https://blog.csdn.net/qq_42703153/article/details/129880291">Shardingsphere-jdbc整合Feign、Seata AT 模式实现分布式事务的解决方案</a></li><li><a href="https://gitee.com/baomidou/mybatis-plus/issues/I3Z0GW">整合sharding jdbc查询时，枚举类型出错</a></li><li><a href="https://blog.csdn.net/weixin_43939708/article/details/124617951">sharding-jdbc 出现 java.sql.SQLFeatureNotSupportedException: getObject with type 异常处理</a></li><li><a href="https://blog.csdn.net/weixin_44945027/article/details/123796844">sharding-jdbc Data sources cannot be empty.</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F/">分布式</category>
      
      
      <category domain="https://superlovelace.top/tags/Seata/">Seata</category>
      
      <category domain="https://superlovelace.top/tags/ShardingSphere/">ShardingSphere</category>
      
      
      <comments>https://superlovelace.top/2025/05/20/ShardingSphere5.2.1%20+%20Seata1.6.1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>退避重试（Exponential Backoff）</title>
      <link>https://superlovelace.top/2025/04/12/%E9%80%80%E9%81%BF%E9%87%8D%E8%AF%95/</link>
      <guid>https://superlovelace.top/2025/04/12/%E9%80%80%E9%81%BF%E9%87%8D%E8%AF%95/</guid>
      <pubDate>Sat, 12 Apr 2025 13:01:27 GMT</pubDate>
      
      <description>退避重试（Exponential Backoff）是一种智能重试策略，在网络请求、消息发送等可能失败的场景下，通过动态调整重试间隔来提高系统可靠性和避免雪崩效应。在 RabbitMQ 生产者重试机制中，合理使用退避策略能有效平衡可靠性和性能。</description>
      
      
      
      <content:encoded><![CDATA[<h1><strong>退避重试（Exponential Backoff）</strong></h1><p>退避重试（Exponential Backoff）是一种<strong>智能重试策略</strong>，在网络请求、消息发送等可能失败的场景下，通过<strong>动态调整重试间隔</strong>来提高系统可靠性和避免雪崩效应。在 RabbitMQ 生产者重试机制中，合理使用退避策略能有效平衡<strong>可靠性</strong>和<strong>性能</strong>。</p><h2 id="1-为什么需要退避重试？"><strong>1. 为什么需要退避重试？</strong></h2><h3 id="传统固定间隔重试的问题"><strong>传统固定间隔重试的问题</strong></h3><ul><li>固定间隔（如每秒重试 1 次）：<ul><li>如果 RabbitMQ Broker 短暂过载，固定频率的重试可能导致<strong>请求堆积</strong>，加剧问题。</li><li>容易触发 Broker 的流控（Flow Control）或客户端被限流。</li></ul></li></ul><h3 id="退避重试的优势"><strong>退避重试的优势</strong></h3><ul><li><strong>动态调整等待时间</strong>：失败后等待时间逐渐增加（如 1s → 2s → 4s → 8s）。</li><li><strong>避免集群雪崩</strong>：在 Broker 恢复期间减少冲击。</li><li><strong>提高成功率</strong>：给被调用的服务（RabbitMQ）足够的恢复时间。</li></ul><h2 id="2-退避重试的算法"><strong>2. 退避重试的算法</strong></h2><h3 id="1-指数退避（Exponential-Backoff）"><strong>(1) 指数退避（Exponential Backoff）</strong></h3><ul><li><p><strong>公式</strong>： <code>delay = initialDelay * (multiplier ^ retryCount)</code></p><ul><li><code>initialDelay</code>：初始延迟（如 1000ms）</li><li><code>multiplier</code>：乘数（通常 2，即每次翻倍）</li><li><code>retryCount</code>：当前重试次数</li></ul></li><li><p><strong>示例</strong>：</p><table><thead><tr><th>重试次数</th><th>计算方式</th><th>实际等待时间</th></tr></thead><tbody><tr><td>1</td><td>1000 * (2^0)</td><td>1000ms</td></tr><tr><td>2</td><td>1000 * (2^1)</td><td>2000ms</td></tr><tr><td>3</td><td>1000 * (2^2)</td><td>4000ms</td></tr></tbody></table></li></ul><h3 id="2-随机退避（Jitter）"><strong>(2) 随机退避（Jitter）</strong></h3><ul><li><p><strong>问题</strong>：纯指数退避可能导致多个客户端同时重试，引发<strong>同步震荡</strong>（Thundering Herd Problem）。</p></li><li><p>优化：在退避时间上增加随机因子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Java">delay = initialDelay * (<span class="hljs-number">2</span> ^ retryCount) + random(<span class="hljs-number">0</span>, <span class="hljs-number">500</span>) <span class="hljs-comment">// 增加 0~500ms 随机抖动</span><br></code></pre></td></tr></table></figure><ul><li>避免多个客户端在同一时间点重试。</li></ul></li></ul><h2 id="3-实现方式（Spring-RabbitMQ）"><strong>3. 实现方式（Spring + RabbitMQ）</strong></h2><h3 id="1-使用-Spring-Retry（声明式）"><strong>(1) 使用 Spring Retry（声明式）</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> org.springframework.retry.annotation.Backoff;<br><span class="hljs-keyword">import</span> org.springframework.retry.annotation.Retryable;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RabbitMQProducer</span> &#123;<br><br>    <span class="hljs-meta">@Retryable(</span><br><span class="hljs-meta">        value = &#123;AmqpException.class&#125;,  // 捕获的异常类型</span><br><span class="hljs-meta">        maxAttempts = 3,                // 最大重试次数</span><br><span class="hljs-meta">        backoff = @Backoff(</span><br><span class="hljs-meta">            delay = 1000,               // 初始延迟 1s</span><br><span class="hljs-meta">            multiplier = 2,             // 乘数 2（指数退避）</span><br><span class="hljs-meta">            maxDelay = 10000             // 最大延迟 10s</span><br><span class="hljs-meta">        )</span><br><span class="hljs-meta">    )</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(Message message)</span> &#123;<br>        rabbitTemplate.convertAndSend(<span class="hljs-string">&quot;exchange&quot;</span>, <span class="hljs-string">&quot;routingKey&quot;</span>, message);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-使用-Resilience4j（函数式）"><strong>(2) 使用 Resilience4j（函数式）</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> io.github.resilience4j.retry.Retry;<br><span class="hljs-keyword">import</span> io.github.resilience4j.retry.RetryConfig;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RabbitMQProducer</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Retry</span> <span class="hljs-variable">retry</span> <span class="hljs-operator">=</span> Retry.of(<span class="hljs-string">&quot;rabbitmq-retry&quot;</span>, RetryConfig.custom()<br>        .maxAttempts(<span class="hljs-number">3</span>)<br>        .waitDuration(Duration.ofSeconds(<span class="hljs-number">1</span>))<br>        .intervalFunction(IntervalFunction.ofExponentialBackoff(<span class="hljs-number">1000</span>, <span class="hljs-number">2</span>))<br>        .build());<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessageWithRetry</span><span class="hljs-params">(Message message)</span> &#123;<br>        Retry.decorateRunnable(retry, () -&gt; &#123;<br>            rabbitTemplate.convertAndSend(<span class="hljs-string">&quot;exchange&quot;</span>, <span class="hljs-string">&quot;routingKey&quot;</span>, message);<br>        &#125;).run();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-高级优化策略"><strong>4. 高级优化策略</strong></h2><h3 id="1-熔断机制（Circuit-Breaker）"><strong>(1) 熔断机制（Circuit Breaker）</strong></h3><ul><li><p>当重试多次仍失败时，暂时停止调用 RabbitMQ，进入熔断状态（如 30 秒内不再尝试）。</p></li><li><p>工具：Resilience4j 或 Hystrix。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">JavaCircuitBreaker</span> <span class="hljs-variable">circuitBreaker</span> <span class="hljs-operator">=</span> CircuitBreaker.ofDefaults(<span class="hljs-string">&quot;rabbitmq&quot;</span>);<br><span class="hljs-type">Retry</span> <span class="hljs-variable">retry</span> <span class="hljs-operator">=</span> Retry.ofDefaults(<span class="hljs-string">&quot;rabbitmq&quot;</span>);<br><span class="hljs-type">Runnable</span> <span class="hljs-variable">decorated</span> <span class="hljs-operator">=</span> CircuitBreaker.decorateRunnable(circuitBreaker,<br>              Retry.decorateRunnable(retry, <span class="hljs-built_in">this</span>::sendMessage));<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-死信队列（DLX）兜底"><strong>(2) 死信队列（DLX）兜底</strong></h3><ul><li><p>如果重试耗尽仍失败，将消息转入死信队列（Dead Letter Exchange），由后台任务处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-meta">@RabbitListener(queues = &quot;dlx.queue&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleFailedMessage</span><span class="hljs-params">(Message message)</span> &#123;<br>    <span class="hljs-comment">// 记录日志或人工干预</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-本地消息表-定时任务"><strong>(3) 本地消息表 + 定时任务</strong></h3><ul><li><p>将发送失败的消息持久化到数据库，由定时任务异步重试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> pending_messages (<br>    id <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>    exchange <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    routing_key <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>),<br>    message TEXT,<br>    retry_count <span class="hljs-type">INT</span>,<br>    next_retry_time <span class="hljs-type">TIMESTAMP</span><br>);<br></code></pre></td></tr></table></figure></li></ul><h2 id="5-适用场景对比"><strong>5. 适用场景对比</strong></h2><table><thead><tr><th>策略</th><th>适用场景</th><th>实现复杂度</th></tr></thead><tbody><tr><td><strong>指数退避</strong></td><td>网络抖动、短暂超时</td><td>低</td></tr><tr><td><strong>熔断 + 退避</strong></td><td>Broker 长时间不可用</td><td>中</td></tr><tr><td><strong>本地消息表</strong></td><td>必须保证成功的关键消息（如支付）</td><td>高</td></tr></tbody></table><h2 id="总结"><strong>总结</strong></h2><ul><li><strong>退避重试的核心</strong>：通过动态增加重试间隔，避免加重系统负担。</li><li>最佳实践：<ul><li>结合 <code>指数退避 + 随机抖动</code> 避免同步问题。</li><li>对关键消息补充 <code>本地持久化 + 定时任务</code> 兜底。</li></ul></li><li>工具推荐：<ul><li>简单场景：Spring Retry</li><li>复杂场景：Resilience4j（支持熔断、限流、隔离）</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E5%B0%8F%E7%9F%A5%E8%AF%86/">小知识</category>
      
      
      <category domain="https://superlovelace.top/tags/rabbitmq/">rabbitmq</category>
      
      
      <comments>https://superlovelace.top/2025/04/12/%E9%80%80%E9%81%BF%E9%87%8D%E8%AF%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SSE</title>
      <link>https://superlovelace.top/2025/04/10/SSE/</link>
      <guid>https://superlovelace.top/2025/04/10/SSE/</guid>
      <pubDate>Thu, 10 Apr 2025 12:10:54 GMT</pubDate>
      
      <description>SSE（服务发送事件），相对于websocket，更简单。该协议只可单项通信，特别适合系统消息这种单方面发送的场景。但这属于网络编程的一部分，结合响应式编程将极大提升运行效率.</description>
      
      
      
      <content:encoded><![CDATA[<h1>Server-Sent Events (SSE)</h1><p>Server-Sent Events (SSE) 是一种允许服务器向客户端实时推送数据的Web技术，它基于HTTP协议，提供了一种简单有效的服务器到客户端的单向通信机制。</p><p>注意：SSE更适配响应式编程</p><h3 id="响应式编程（WebFlux）的优势"><strong>响应式编程（WebFlux）的优势</strong></h3><p>响应式栈（如WebFlux + Reactor）的SSE实现更高效：</p><p>（简单示例）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReactiveSseController</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Sinks.Many&lt;String&gt; sink = Sinks.many().multicast().onBackpressureBuffer();<br><br>    <span class="hljs-meta">@GetMapping(path = &quot;/events&quot;, produces = MediaType.TEXT_EVENT_STREAM_VALUE)</span><br>    <span class="hljs-keyword">public</span> Flux&lt;ServerSentEvent&lt;String&gt;&gt; <span class="hljs-title function_">streamEvents</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> sink.asFlux()<br>                  .map(data -&gt; ServerSentEvent.builder(data).build());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>优势</strong>：</p><table><thead><tr><th>特性</th><th>阻塞式（MVC）</th><th>响应式（WebFlux）</th></tr></thead><tbody><tr><td><strong>线程占用</strong></td><td>1连接=1线程</td><td>固定少量IO线程</td></tr><tr><td><strong>内存消耗</strong></td><td>每个连接独立缓冲</td><td>共享背压缓冲</td></tr><tr><td><strong>广播复杂度</strong></td><td>O(n)手动发送</td><td>O(1)自动多播</td></tr><tr><td><strong>扩展性</strong></td><td>千级连接</td><td>万级连接</td></tr></tbody></table><h3 id="适用场景选择"><strong>适用场景选择</strong></h3><h4 id="✅-适合响应式SSE的场景：">✅ 适合响应式SSE的场景：</h4><ul><li>高并发（如实时仪表盘、股票行情）</li><li>需要组合多个异步数据源（如数据库变更+消息队列）</li><li>长周期事件流（如文件导入进度）</li></ul><h4 id="❌-适合传统阻塞式的场景：">❌ 适合传统阻塞式的场景：</h4><ul><li>简单低频通知（如单个用户订单状态更新）</li><li>遗留系统无法升级响应式栈</li><li>需要与阻塞式库（如JPA/Hibernate）深度集成</li></ul><h3 id="性能对比数据"><strong>性能对比数据</strong></h3><p>在相同4核8G服务器上：</p><table><thead><tr><th>连接数</th><th>Spring MVC SSE</th><th>WebFlux SSE</th></tr></thead><tbody><tr><td>1,000</td><td>线程池耗尽</td><td>内存占用200MB</td></tr><tr><td>10,000</td><td>崩溃</td><td>内存占用1.2GB</td></tr><tr><td>延迟</td><td>15-30ms</td><td>2-8ms</td></tr></tbody></table><h2 id="基本概念">基本概念</h2><p>SSE 的主要特点包括：</p><ul><li><strong>单向通信</strong>：仅服务器可以向客户端推送数据</li><li><strong>基于HTTP</strong>：使用标准HTTP协议，不需要特殊协议</li><li><strong>文本格式</strong>：数据以纯文本格式传输</li><li><strong>自动重连</strong>：内置连接断开后的自动重连机制</li><li><strong>简单API</strong>：浏览器端使用简单的EventSource API</li></ul><h2 id="工作原理">工作原理</h2><ol><li><p>客户端通过<code>EventSource</code>对象发起连接</p></li><li><p>服务器保持连接打开，以<code>text/event-stream</code>格式发送数据</p></li><li><p>数据以流的形式持续发送，格式为：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">event:</span> message<br><span class="hljs-symbol">data:</span> 这是消息内容\n\n<br></code></pre></td></tr></table></figure></li></ol><h2 id="与WebSocket的比较">与WebSocket的比较</h2><table><thead><tr><th>特性</th><th>SSE</th><th>WebSocket</th></tr></thead><tbody><tr><td>通信方向</td><td>单向(服务器→客户端)</td><td>双向</td></tr><tr><td>协议</td><td>HTTP</td><td>独立的ws/wss协议</td></tr><tr><td>数据格式</td><td>文本</td><td>文本或二进制</td></tr><tr><td>自动重连</td><td>支持</td><td>需要手动实现</td></tr><tr><td>复杂度</td><td>简单</td><td>较复杂</td></tr><tr><td>浏览器支持</td><td>广泛(除IE)</td><td>广泛</td></tr></tbody></table><h2 id="适用场景">适用场景</h2><p>SSE 非常适合以下场景：</p><ul><li>实时通知系统</li><li>新闻/股票行情推送</li><li>社交媒体动态更新</li><li>实时日志监控</li><li>需要简单实时功能的场景</li></ul><h2 id="注意事项">注意事项</h2><ol><li><strong>浏览器兼容性</strong>：大多数现代浏览器支持，但IE不支持</li><li><strong>连接限制</strong>：浏览器对每个源的SSE连接数有限制(通常6个)</li><li><strong>代理问题</strong>：某些代理服务器可能缓冲SSE流</li><li><strong>数据格式</strong>：仅支持文本，不支持二进制数据</li></ol><p>SSE 提供了一种轻量级的实时通信解决方案，在不需要双向通信的场景下，比WebSocket更简单易用。</p><h2 id="代码示例（阻塞式）：">代码示例（阻塞式）：</h2><p><strong>扩展</strong>：像集成微信扫码登录这种，可以通过SSE的方式替代前端轮询扫码登录状态的大量无效请求开销。大致流程就是：前端生成的唯一设备id，请求登录二维码，后端返回二维码并将设备id作为SSE连接id，然后启动SSE线程。前端启动SSE事件监听，前后端心跳测试正常。登录成功后，向前端发送登录成功事件通知，前端跳转到登录页。</p><h3 id="服务端（后端）">服务端（后端）</h3><h4 id="Maven依赖"><strong>Maven依赖</strong></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- SpringBoot中已经有SseEmitter了，所以不需要额外引入其他包。 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="spring配置文件">spring配置文件</h4><p><code>application.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">encoding:</span><br>      <span class="hljs-attr">charset:</span> <span class="hljs-string">UTF-8</span><br>      <span class="hljs-attr">force:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h4 id="跨源配置">跨源配置</h4><p><code>Webconfig.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 跨源配置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .allowedOrigins(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedMethods(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;HEAD&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;PUT&quot;</span>, <span class="hljs-string">&quot;DELETE&quot;</span>, <span class="hljs-string">&quot;OPTIONS&quot;</span>)<br>                .allowCredentials(<span class="hljs-literal">false</span>)<br>                .maxAge(<span class="hljs-number">3600</span>)<br>                .allowedHeaders(<span class="hljs-string">&quot;*&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="异常类">异常类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * SSE异常信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SseException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SseException</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SseException</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SseException</span><span class="hljs-params">(String message, Throwable cause)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message, cause);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SseException</span><span class="hljs-params">(Throwable cause)</span> &#123;<br>        <span class="hljs-built_in">super</span>(cause);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">SseException</span><span class="hljs-params">(String message, Throwable cause, <span class="hljs-type">boolean</span> enableSuppression, <span class="hljs-type">boolean</span> writableStackTrace)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message, cause, enableSuppression, writableStackTrace);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="存储连接">存储连接</h4><p>使用ConcurrentHashMap存储</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.qrlogin.exception.SseException;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.SseEmitter;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.Date;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.concurrent.ConcurrentHashMap;<br><span class="hljs-keyword">import</span> java.util.concurrent.ScheduledFuture;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * SSE Session</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SseSession</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">SseSession</span> <span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalStateException</span>(<span class="hljs-string">&quot;Utility class&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(SseSession.class);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Session维护Map</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Map&lt;String, SseEmitter&gt; SESSION = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentHashMap</span>&lt;&gt;();<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断Session是否存在</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">exist</span><span class="hljs-params">(String id)</span> &#123;<br>        <span class="hljs-keyword">return</span> SESSION.get(id) == <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 增加Session</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id      客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emitter SseEmitter</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(String id, SseEmitter emitter)</span> &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">oldEmitter</span> <span class="hljs-operator">=</span> SESSION.get(id);<br>        <span class="hljs-keyword">if</span> (oldEmitter != <span class="hljs-literal">null</span>) &#123;<br>            oldEmitter.completeWithError(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SseException</span>(<span class="hljs-string">&quot;RepeatConnect(Id:&quot;</span> + id + <span class="hljs-string">&quot;)&quot;</span>));<br>        &#125;<br>        SESSION.put(id, emitter);<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除Session</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">del</span><span class="hljs-params">(String id)</span> &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> SESSION.remove(id);<br>        <span class="hljs-keyword">if</span> (emitter != <span class="hljs-literal">null</span>) &#123;<br>            emitter.complete();<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送消息</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id  客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> msg 发送的消息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">send</span><span class="hljs-params">(String id,String name, Object msg)</span> &#123;<br>        <span class="hljs-keyword">if</span> (id == <span class="hljs-literal">null</span>)&#123;<br><br>            <span class="hljs-keyword">for</span> (Map.Entry&lt;String, SseEmitter&gt; entry : SESSION.entrySet())&#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> entry.getValue();<br>                    emitter.send(<br>                            SseEmitter.event()<br>                                    .name(<span class="hljs-string">&quot;broadcast&quot;</span>)<br>                                    .data(msg)<br>                                    .reconnectTime(<span class="hljs-number">30_000L</span>));<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    logger.error(<span class="hljs-string">&quot;MSG: SendMessageError-IOException | ID: &quot;</span> + id + <span class="hljs-string">&quot; | Date: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>() + <span class="hljs-string">&quot; |&quot;</span>, e);<br>                &#125;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> SESSION.get(id);<br>            <span class="hljs-keyword">if</span> (emitter != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    emitter.send(<br>                            SseEmitter.event()<br>                                    .name(name)<br>                                    .data(msg).<br>                                    reconnectTime(<span class="hljs-number">30_000L</span>));<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                    logger.error(<span class="hljs-string">&quot;MSG: SendMessageError-IOException | ID: &quot;</span> + id + <span class="hljs-string">&quot; | Date: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>() + <span class="hljs-string">&quot; |&quot;</span>, e);<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 发送无事件名的简单消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendSimpleMessage</span><span class="hljs-params">(String id, Object msg)</span> &#123;<br>        <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> SESSION.get(id);<br>        <span class="hljs-keyword">if</span> (emitter != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                emitter.send(<br>                        SseEmitter.event()<br>                                .data(msg).<br>                                reconnectTime(<span class="hljs-number">30_000L</span>));<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                logger.error(<span class="hljs-string">&quot;MSG: SendMessageError-IOException | ID: &quot;</span> + id + <span class="hljs-string">&quot; | Date: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>() + <span class="hljs-string">&quot; |&quot;</span>, e);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * SseEmitter onCompletion 后执行的逻辑</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id     客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> future</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCompletion</span><span class="hljs-params">(String id, ScheduledFuture&lt;?&gt; future)</span> &#123;<br>        SESSION.remove(id);<br>        <span class="hljs-keyword">if</span> (future != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// SseEmitter断开后需要中断心跳发送</span><br>            future.cancel(<span class="hljs-literal">true</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * SseEmitter onTimeout 或 onError 后执行的逻辑</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> e</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onError</span><span class="hljs-params">(String id, SseException e)</span> &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> SESSION.get(id);<br>        <span class="hljs-keyword">if</span> (emitter != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// 这里会触发错误监听的同时，执行完成监听方法终止心跳线程</span><br>            emitter.completeWithError(e);<br>            SESSION.remove(id);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="心跳任务">心跳任务</h4><p>用来检测对方是否还存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.qrlogin.session.SseSession;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><br><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 心跳任务</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HeartBeatTask</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Runnable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(HeartBeatTask.class);<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String clientId;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">HeartBeatTask</span><span class="hljs-params">(String clientId)</span> &#123;<br>        <span class="hljs-comment">// 这里可以按照业务传入需要的数据</span><br>        <span class="hljs-built_in">this</span>.clientId = clientId;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>        logger.info(<span class="hljs-string">&quot;MSG: SseHeartbeat | ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br><br>        SseSession.send(clientId,<span class="hljs-string">&quot;system_inform&quot;</span>, <span class="hljs-string">&quot;ping&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="SSE业务类">SSE业务类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.qrlogin.exception.SseException;<br><span class="hljs-keyword">import</span> com.qrlogin.service.SseService;<br><span class="hljs-keyword">import</span> com.qrlogin.session.SseSession;<br><span class="hljs-keyword">import</span> com.qrlogin.task.HeartBeatTask;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.SseEmitter;<br><br><span class="hljs-keyword">import</span> java.util.Date;<br><span class="hljs-keyword">import</span> java.util.concurrent.Executors;<br><span class="hljs-keyword">import</span> java.util.concurrent.ScheduledExecutorService;<br><span class="hljs-keyword">import</span> java.util.concurrent.ScheduledFuture;<br><span class="hljs-keyword">import</span> java.util.concurrent.TimeUnit;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * SSE 相关业务实现</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SseServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">SseService</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(SseServiceImpl.class);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送心跳线程池</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ScheduledExecutorService</span> <span class="hljs-variable">heartbeatExecutors</span> <span class="hljs-operator">=</span> Executors.newScheduledThreadPool(<span class="hljs-number">2</span>);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新建连接</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clientId 客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> SseEmitter <span class="hljs-title function_">start</span><span class="hljs-params">(String clientId)</span> &#123;<br>        <span class="hljs-comment">// 默认30秒超时,设置为0L则永不超时</span><br>        <span class="hljs-type">SseEmitter</span> <span class="hljs-variable">emitter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SseEmitter</span>(<span class="hljs-number">30_000L</span>);<br>        logger.info(<span class="hljs-string">&quot;MSG: SseConnect | EmitterHash: &#123;&#125; | ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, emitter.hashCode(), clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>        <span class="hljs-comment">// 添加连接</span><br>        SseSession.add(clientId, emitter);<br>        <span class="hljs-comment">// 添加心跳任务</span><br>        <span class="hljs-keyword">final</span> ScheduledFuture&lt;?&gt; future = heartbeatExecutors.scheduleAtFixedRate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HeartBeatTask</span>(clientId), <span class="hljs-number">0</span>, <span class="hljs-number">10</span>, TimeUnit.SECONDS);<br>        <span class="hljs-comment">// 添加完成事件</span><br>        emitter.onCompletion(() -&gt; &#123;<br>            logger.info(<span class="hljs-string">&quot;MSG: SseConnectCompletion | EmitterHash: &#123;&#125; |ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, emitter.hashCode(), clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>            <span class="hljs-comment">// 完成后，移除session连接</span><br>            SseSession.onCompletion(clientId, future);<br>        &#125;);<br>        <span class="hljs-comment">// 添加超时配置</span><br>        emitter.onTimeout(() -&gt; &#123;<br>            logger.error(<span class="hljs-string">&quot;MSG: SseConnectTimeout | EmitterHash: &#123;&#125; |ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, emitter.hashCode(), clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>            SseSession.onError(clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">SseException</span>(<span class="hljs-string">&quot;TimeOut(clientId: &quot;</span> + clientId + <span class="hljs-string">&quot;)&quot;</span>));<br>        &#125;);<br><br>        <span class="hljs-comment">// 添加错误配置</span><br>        emitter.onError(t -&gt; &#123;<br>            logger.error(<span class="hljs-string">&quot;MSG: SseConnectError | EmitterHash: &#123;&#125; |ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, emitter.hashCode(), clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>            SseSession.onError(clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">SseException</span>(<span class="hljs-string">&quot;Error(clientId: &quot;</span> + clientId + <span class="hljs-string">&quot;)&quot;</span>));<br>        &#125;);<br>        <span class="hljs-keyword">return</span> emitter;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 广播发送</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> msg</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">broadcastSend</span><span class="hljs-params">(String msg)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;systemNotification&quot;</span>;<br>        SseSession.send(<span class="hljs-literal">null</span>,name, msg);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;OK&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 定向发送数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clientId 客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">send</span><span class="hljs-params">(String clientId)</span> &#123;<br>        <span class="hljs-keyword">if</span> (SseSession.send(clientId,<span class="hljs-string">&quot;broadcast&quot;</span>, System.currentTimeMillis())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Succeed!&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;error&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 关闭连接</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clientId 客户端ID</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">close</span><span class="hljs-params">(String clientId)</span> &#123;<br>        logger.info(<span class="hljs-string">&quot;MSG: SseConnectClose | ID: &#123;&#125; | Date: &#123;&#125;&quot;</span>, clientId, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>        <span class="hljs-keyword">if</span> (SseSession.del(clientId)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Succeed!&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Error!&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="Controller">Controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.qrlogin.session.SseSession;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestBody;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestParam;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> peter</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2025/6/28</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IndexController</span> &#123;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">login</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;login&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/index&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">index</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-meta">@GetMapping(&quot;/test&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam(value = &quot;id&quot;,required = false)</span> String id)</span><br>    &#123;<br>        <span class="hljs-comment">// 模拟获取登录二维码</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;/sse/start/?clientId=&quot;</span>+id;<br>    &#125;<br><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-meta">@GetMapping(&quot;/direct&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">direct</span><span class="hljs-params">(String id)</span> &#123;<br>        SseSession.send(id, <span class="hljs-string">&quot;direct&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/simple&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">simple</span><span class="hljs-params">(String id)</span><br>    &#123;<br>        <span class="hljs-comment">// 由前端eventSource.onmessage接收消息</span><br>        SseSession.sendSimpleMessage(id, <span class="hljs-string">&quot;simple&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-meta">@GetMapping(&quot;/inform&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">inform</span><span class="hljs-params">(String id)</span><br>    &#123;<br>        <span class="hljs-comment">// 模拟访问扫码登录接口，发送登录成功消息给客户端</span><br>        SseSession.send(id, <span class="hljs-string">&quot;login_success&quot;</span>, <span class="hljs-string">&quot;OK&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.qrlogin.service.SseService;<br><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestParam;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.SseEmitter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * SSE测试控制器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;sse&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SseTestController</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(SseTestController.class);<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SseService sseService;<br><br>    <span class="hljs-meta">@RequestMapping(&quot;start&quot;)</span><br>    <span class="hljs-keyword">public</span> SseEmitter <span class="hljs-title function_">start</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String clientId)</span> &#123;<br>        <span class="hljs-keyword">return</span> sseService.start(clientId);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送定向消息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clientId</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;send&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">send</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String clientId)</span> &#123;<br>        <span class="hljs-keyword">return</span> sseService.send(clientId);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送广播消息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> msg</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;sendBroadcast&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">sendBroadcast</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String msg)</span> &#123;<br>        <span class="hljs-keyword">return</span> sseService.broadcastSend(msg);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 将SseEmitter对象设置成完成</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clientId</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@RequestMapping(&quot;/end&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">close</span><span class="hljs-params">(String clientId)</span> &#123;<br>        <span class="hljs-keyword">return</span> sseService.close(clientId);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><hr><h3 id="客户端（前端）">客户端（前端）</h3><p><code>login.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>测试SSE消息推送<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login-btn&quot;</span>&gt;</span>模拟获取登录二维码按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;reconnect-btn&quot;</span>&gt;</span>手动重连按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> retryCount = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> maxRetries = <span class="hljs-number">5</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> eventSource;</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> clientId = <span class="hljs-string">&#x27;user_&#x27;</span> + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>().<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>).<span class="hljs-title function_">substr</span>(<span class="hljs-number">2</span>, <span class="hljs-number">9</span>);</span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">connectSSE</span>(<span class="hljs-params">url</span>) &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        eventSource = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventSource</span>(url);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        eventSource.<span class="hljs-property">onopen</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            retryCount = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;连接已建立&quot;</span>);</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 监听消息(无事件名称的消息)</span></span><br><span class="language-javascript">        eventSource.<span class="hljs-property">onmessage</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;收到消息:&quot;</span>, e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">        <span class="hljs-comment">// 监听定向消息（指定发送到这个客户端的，这些都是根据自己需要定义）</span></span><br><span class="language-javascript">        eventSource.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;direct&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;定向消息:&quot;</span>, e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">        <span class="hljs-comment">// 监听广播消息</span></span><br><span class="language-javascript">        eventSource.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;broadcast&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;广播消息:&quot;</span>, e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">        <span class="hljs-comment">// 监听系统消息</span></span><br><span class="language-javascript">        eventSource.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;system_inform&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;心跳检测消息:&quot;</span>, e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 监听登录成功消息</span></span><br><span class="language-javascript">        eventSource.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;login_success&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (e.<span class="hljs-property">data</span> === <span class="hljs-string">&#x27;OK&#x27;</span>) &#123;</span><br><span class="language-javascript">                location.<span class="hljs-property">href</span> = <span class="hljs-string">&#x27;/index&#x27;</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        eventSource.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;错误重试调用&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (e.<span class="hljs-property">eventPhase</span> === <span class="hljs-title class_">EventSource</span>.<span class="hljs-property">CLOSED</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;连接已超时,正在重试！&quot;</span>);</span><br><span class="language-javascript">                <span class="hljs-comment">//eventSource.close();</span></span><br><span class="language-javascript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;连接出错&quot;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (retryCount++ &lt; maxRetries) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`尝试第<span class="hljs-subst">$&#123;retryCount&#125;</span>次重连...`</span>);</span><br><span class="language-javascript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;达到最大重试次数，停止重连&quot;</span>);</span><br><span class="language-javascript">                retryCount=<span class="hljs-number">0</span>;</span><br><span class="language-javascript">                eventSource.<span class="hljs-title function_">close</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 初始连接</span></span><br><span class="language-javascript">    <span class="hljs-comment">//connectSSE();</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 手动重连按钮</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;reconnect-btn&#x27;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (eventSource) eventSource.<span class="hljs-title function_">close</span>();</span><br><span class="language-javascript">        retryCount = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">        <span class="hljs-title function_">connectSSE</span>();</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 手动重连按钮</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;login-btn&#x27;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;模拟获取登录二维码&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:8080/test?id=&#x27;</span>+clientId, <span class="hljs-literal">true</span>);</span><br><span class="language-javascript">        <span class="hljs-comment">// xhr.setRequestHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); // 设置请求头</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        xhr.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;收到监听地址:&#x27;</span>, xhr.<span class="hljs-property">responseText</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">                <span class="hljs-title function_">connectSSE</span>(<span class="hljs-string">&quot;http://localhost:8080&quot;</span>+xhr.<span class="hljs-property">responseText</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">send</span>(); </span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>登录成功！<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><p>相关示例参考：<a href="https://github.com/zuster/my-demo-springboot-sse?tab=readme-ov-file">https://github.com/zuster/my-demo-springboot-sse?tab=readme-ov-file</a></p><h2 id="代码示例（响应式）：">代码示例（响应式）：</h2><p>待本人以后学习完响应式编程后，再来完善。</p>]]></content:encoded>
      
      
      <category domain="https://superlovelace.top/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/">网络编程</category>
      
      
      <category domain="https://superlovelace.top/tags/sse/">sse</category>
      
      
      <comments>https://superlovelace.top/2025/04/10/SSE/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
